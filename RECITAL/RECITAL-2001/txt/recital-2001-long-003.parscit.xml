<?xml version="1.0" encoding="UTF-8"?>
<algorithms version="110505">
<algorithm name="ParsCit" version="110505">
<citationList>
<citation valid="false">
<authors>
<author>J Autebert</author>
<author>J Berstel</author>
<author>L Boasson</author>
</authors>
<title>Context-free languages and Pushdown Automata, in G. Rozenberg and A. Salomaa Eds., Handbook of Formal Languages,</title>
<date>1997</date>
<journal>Journal</journal>
<volume>4</volume>
<pages>125--213</pages>
<publisher>MIT Press,</publisher>
<location>Vol.1 .&apos; Word, Language, Grammar, Springer-Verlag, Berlin,</location>
<note>in</note>
<contexts>
<context position="11555" citStr="Autebert et al. (1997)" startWordPosition="1782" endWordPosition="1785"> format FST2 et le compilateur GRF2FST2 Le but du compilateur est d’éViter a l’analyseur de multiples opérations sur les graphes. Le compilateur prend en entrée un graphe GRF et délivre en sortie une nouvelle représentation de ce graphe, c’est le format FST2 que nous décrivons ci-dessous. Nous effectuons quelques traitements dont certains sont réalisés sur le FST : une normalisation des transitions puis un nettoyage et une déterrninisation locale des graphes. Dans un cadre théorique, hors linguistique, les graphes utilisés peuvent étre vus comme des grammaires context-free décrites dans J.-M. Autebert et al. (1997). L’alphabet des éléments auxiliaires est l’ensemble des étiquettes indiquant les appels aux sous-graphes. Celui des éléments terrninaux est l’ensemble des autres types d’étiquettes (categories grammaticales, étiquettes lexicales, etc. ). Ces deux alphabets sont clairement disjoints. Si X est un élément Matthieu Constant auxiliaire, les regles correspondantes a X sont factorisées sous la forme d’un graphe nommé X. L’axiome de départ est le graphe principal. Jusqu’a présent, nous avons considérés nos grammaires comme de simples automates finis dans nos algorithmes. Vu les problemes que cela ris</context>
</contexts>
<marker>Autebert, Berstel, Boasson, 1997</marker>
<rawString>Autebert J., Berstel J., Boasson L. (1997), Context-free languages and Pushdown Automata, in G. Rozenberg and A. Salomaa Eds., Handbook of Formal Languages, Vol.1 .&apos; Word, Language, Grammar, Springer-Verlag, Berlin, pp. 125-213 Greibach S. (1965), A new normal form theorem for context-free phrase structure grammars, Journal ofACl\4, Vol.12, pp. 42-52 Gross M. (1997), The Construction of Local Grammars, in E. Roche and Y. Schabes Eds., Finite State Language Processing, Cambridge, Mass., The MIT Press, pp. 329-352.</rawString>
</citation>
<citation valid="true">
<authors>
<author>C Leclere</author>
<author>C Subirats-Riiggeberg</author>
</authors>
<title>A bibliography of studies on lexicon-grammar,</title>
<date>1991</date>
<journal>Lingvisticoe Investigationes,</journal>
<volume>2</volume>
<pages>347--409</pages>
<publisher>RISSH.</publisher>
<marker>Leclere, Subirats-Riiggeberg, 1991</marker>
<rawString>Leclere C., Subirats-Riiggeberg C. (1991), A bibliography of studies on lexicon-grammar, Lingvisticoe Investigationes, Vol. XV :2, pp.347-409. Paumier S., (a paraitre), Nouvelles méthodes pour la recherche d’expressions dans de grands corpus, RISSH.</rawString>
</citation>
<citation valid="true">
<authors>
<author>D Revuz</author>
</authors>
<title>Dictionnaires et lexiques .&apos; méthode et algorithmes, These de doctorat,</title>
<date>1991</date>
<location>Paris, Université Paris</location>
<contexts>
<context position="2023" citStr="Revuz 1991" startWordPosition="277" endWordPosition="278">ammars, Finite State Automata, Graphs, Greibach Normal Form 1 Introduction Le LADL a entrepris, des les années 60, une couverture complete du lexique et de la syntaxe de la langue franeaise. L’équipe de recherche a emmagasiné trois types de ressources linguistiques : tables de lexique-grammaire, dictionnaires électroniques et grammaires locales (C. Leclere et al. 1991). Les inforrnaticiens du LADL ont mis en place de nouvelles representations a états fmis, a la fois, claires, a acces rapide et peu coﬁteuses en mémoire. Les dictionnaires sont stockés sous la forme d’automates de caracteres (D. Revuz 1991). Les grammaires locales ont la forme de graphes d’automates f1nis. A terme, les tables de lexiqueMatthieu Constant grammaire, ressources fondamentales pour l’analyse syntaxique automatique, devraient étre transformées de maniere systématique en graphes d’automates finis (E. Roche 1993). Le logiciel INTEX (M. Silberztein 1993) permet aux linguistes d’acquérir, de créer et d’appliquer ces ressources d’une maniere claire et simple. Ainsi, nous prévoyons, dans un avenir proche, une forte augmentation du nombre de graphes. Ces graphes sont transforrnés en transducteurs a états finis (FST) afin de </context>
</contexts>
<marker>Revuz, 1991</marker>
<rawString>Revuz, D. (1991), Dictionnaires et lexiques .&apos; méthode et algorithmes, These de doctorat, Paris, Université Paris 7.</rawString>
</citation>
<citation valid="true">
<authors>
<author>E Roche</author>
</authors>
<title>Analyse syntaxique transformationnelle du frangais par transducteurs et lexique-grammaire, These de doctorat,</title>
<date>1993</date>
<location>Paris, Université Paris</location>
<contexts>
<context position="2310" citStr="Roche 1993" startWordPosition="315" endWordPosition="316">rammaire, dictionnaires électroniques et grammaires locales (C. Leclere et al. 1991). Les inforrnaticiens du LADL ont mis en place de nouvelles representations a états fmis, a la fois, claires, a acces rapide et peu coﬁteuses en mémoire. Les dictionnaires sont stockés sous la forme d’automates de caracteres (D. Revuz 1991). Les grammaires locales ont la forme de graphes d’automates f1nis. A terme, les tables de lexiqueMatthieu Constant grammaire, ressources fondamentales pour l’analyse syntaxique automatique, devraient étre transformées de maniere systématique en graphes d’automates finis (E. Roche 1993). Le logiciel INTEX (M. Silberztein 1993) permet aux linguistes d’acquérir, de créer et d’appliquer ces ressources d’une maniere claire et simple. Ainsi, nous prévoyons, dans un avenir proche, une forte augmentation du nombre de graphes. Ces graphes sont transforrnés en transducteurs a états finis (FST) afin de les appliquer a des textes. Cette opération augmente la place en mémoire nécessaire, de maniere exponentielle. L’algorithmique des automates finis présente des avantages : déterminisation et minimisation sont a priori de gros atouts. Toutefois, ces outils classiques montrent leurs limit</context>
</contexts>
<marker>Roche, 1993</marker>
<rawString>Roche E. (1993), Analyse syntaxique transformationnelle du frangais par transducteurs et lexique-grammaire, These de doctorat, Paris, Université Paris 7.</rawString>
</citation>
<citation valid="true">
<authors>
<author>E Roche</author>
<author>Y Schabes</author>
</authors>
<title>Finite State Language Processing,</title>
<date>1997</date>
<pages>1--66</pages>
<publisher>MIT Press,</publisher>
<location>Cambridge, Mass., The</location>
<note>Introduction, in</note>
<marker>Roche, Schabes, 1997</marker>
<rawString>Roche E., Schabes Y. (1997), Introduction, in E. Roche and Y. Schabes, Finite State Language Processing, Cambridge, Mass., The MIT Press, pp. 1-66.</rawString>
</citation>
<citation valid="true">
<authors>
<author>M Silberztein</author>
</authors>
<title>Dictionnaires électroniques et analyse automatique de textes .&apos; Le syste‘me INTEX,</title>
<date>1993</date>
<location>Paris, Masson.</location>
<contexts>
<context position="2351" citStr="Silberztein 1993" startWordPosition="321" endWordPosition="322">es et grammaires locales (C. Leclere et al. 1991). Les inforrnaticiens du LADL ont mis en place de nouvelles representations a états fmis, a la fois, claires, a acces rapide et peu coﬁteuses en mémoire. Les dictionnaires sont stockés sous la forme d’automates de caracteres (D. Revuz 1991). Les grammaires locales ont la forme de graphes d’automates f1nis. A terme, les tables de lexiqueMatthieu Constant grammaire, ressources fondamentales pour l’analyse syntaxique automatique, devraient étre transformées de maniere systématique en graphes d’automates finis (E. Roche 1993). Le logiciel INTEX (M. Silberztein 1993) permet aux linguistes d’acquérir, de créer et d’appliquer ces ressources d’une maniere claire et simple. Ainsi, nous prévoyons, dans un avenir proche, une forte augmentation du nombre de graphes. Ces graphes sont transforrnés en transducteurs a états finis (FST) afin de les appliquer a des textes. Cette opération augmente la place en mémoire nécessaire, de maniere exponentielle. L’algorithmique des automates finis présente des avantages : déterminisation et minimisation sont a priori de gros atouts. Toutefois, ces outils classiques montrent leurs limites. Ainsi, la minimalisation, trop coﬁteu</context>
</contexts>
<marker>Silberztein, 1993</marker>
<rawString>Silberztein M. (1993), Dictionnaires électroniques et analyse automatique de textes .&apos; Le syste‘me INTEX, Paris, Masson.</rawString>
</citation>
</citationList>
</algorithm>
</algorithms>