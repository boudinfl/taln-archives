RECITAL 2002, Nancy, 24-27 juin 2002

Conceptualisation d’un systéme d’informations lexicales, une
interface paramétrable pour le T.A.L

Djamé Seddah, Evelyne J acquey*

Laboratoire LORIA, Equipe Langue et Dialogue,
Campus Scientiﬁque, BP 239
F-54506 Vandceuvre-lés-Nancy Cedex
jacquey@l0ria.fr; seddah@l0ria. fr

Mots-clefs — Keywords

Bases de données, ressources lexicales
Data Bases, Lexical Ressources

Résumé - Abstract

La nécessité de ressources lexicales normalisées et publiques est avérée dans le domaine du
TAL. Cet article vise a montrer comment, sur la base d’une partie du lexique MULTEXT
disponible sur le serveur ABU, il serait possible de construire une architecture permettant tout
a la fois l’acces aux ressources avec des attentes différentes (lemmatiseur, parseur, extraction
d’informations, prédiction, etc.) et la mise a jour par un groupe restreint de ces ressources.
Cette Inise a jour consistant en l’intégration et la modiﬁcation, automatique ou manuelle, de
données existantes. Pour ce faire, nous cherchons a prendre en compte a la fois les besoins
et les données accessibles. Ce modele est évalué conceptuellement dans un premier temps en
fonction des systemes utilisés dans notre équipe : un analyseur TAG, un constructeur de gram-
maires TAGS, un extracteur d’information.

Lexical ressources which would be normalized and freely accessible is a major issue in the NLP
research area. This article aims to show how to built an information system which allow (1) a
freely access for distinct NLP systems (tagging, parsing, information extraction, etc.) and (2) an
easy update of data by a restricted team of researchers, this update being manual or computed.
Starting with a a subset of the MULTEXT lexicon which is accessible from the server ABU,
we aim to take into account the various needs and the variability of accessible lexical data. Our
modelisation is evaluated with three existing systems of our team : EGAL (parsing), a builder
of Tag grammars and VULCAIN (information extraction).

Cet article a été rédigé a parts égales par les deux auteurs. Dj amé Seddah est actuellement doctorant et Evelyne
J acquey a soutenu sa these en décembre 2001.

Djamé Seddah et Evelyne J acquey

1 Introduction et problématique

Les travaux théoriques des linguistes sont le plus souvent fondés sur un lexique, supposé preex-
istant et pertinent pour le ou les phénomenes étudiés. Les faits ne valident cependant pas ce
présupposé. Dans le traitement automatique des langues, l’un des problemes récurrents est la
non-réutilisabilité des lexiques : ils sont le plus souvent construits empiriquement et liés ir-
rémmediablement a l’application visée, ils ne sont que tres rarement disponibles gratuitement
et sufﬁsamment standardisés. Le Lexique-Grammaire (LADL), n’est accessible gratuitement
qu’en consultation. Il existe un certain nombre de lexiques morpho-syntaxiques publics, tel
MULTEXT1, mais aucun ne contient des informations de valence ou de pronominalisation, des
informations sémantiques comme les restrictions sélectionnelles, les roles sémantiques, des in-
formations conceptuelles interfacées avec des hierarchies conceptuelles comme EuroWordnet
ou avec des thesauri.

Une solution possible serait de disposer d’une base de connaissances lexicales normalisées avec
trois objectifs principaux : (1) synthétiser les ressources lexicales disponibles, les faire colla-
borer et les enrichir, (2) éviter de construire un nouveau lexique dédié chaque fois qu’un nou-
veau systeme est construit, et (3), permettre a des applications différentes mais complémentaires
de collaborer pour mettre en oeuvre une tache multimodulaire.

Nous nous proposons d’amorcer ici les speciﬁcations d’un systeme d’informations lexicales en
précisant les axes qui ont permis sa modélisation tout en veillant a sous-spéciﬁer ce systeme
pour qu’un processus d’échange avec la communauté puisse l’enrichir sans en bouleverser les
fondements. Notre contribution se situe donc sur le premier axe de la réﬂexion, celui de la deﬁ-
nition d’un format abstrait et d’une organisation générique des données lexicales correspondant
aux besoins décelés dans la section (2). La méthodologie developpée (section 3) est celle de la
conception de bases de données relationnelle (Merise) qui sera ensuite étendue a une famille de
schémas XML compatibles dans nos futurs travaux (Romary, 2001). La validation conceptuelle
du systeme proposé se fera en la confrontant a trois types d’applications (un analyseur TAG,
une méta-grammaire et un systeme d’extraction d’information) en section (4).

2 Des besoins multiples

Avant d’ envisager une modélisation, nous résumons, en l’illustrant par quelques exemples, notre
analyse des besoins.

L’analyseur de grammaire d’arbres adjoints : La méthode usuelle d’ana1yse des parseurs
TAG2 consiste a préselectionner les arbres de la grammaire dont les ancres correspondent aux

1MULTEXT (Ide & Véronis, 1994), (Véronis & Khouri, 1995), est le plus gros proj et d’enVergure européenne
Visant a l’aVénement d’une base linguistique commune. Le succés de ce projet est Venu de la simplicité des obj ectifs
afﬁchés : standardiser des ressources textuelles et des données linguistiques, créer des ressources linguistiques
infonnatisées, monolingues et multilingues, et, créer des outils génériques pour l’annotation et l’exploitation de
corpus. La Inise au point des étiquettes s’est fait dans une optique de simplicité et de compromis Visant a leur
réutilisabilité évidente a travers une dénomination linguistique quasiment universelle au sein des langues indo-
européennes (Nom, Adverbe, Verbes...). L’un des aspects les plus intéressant est la sous—spéciﬁcation de chaque
langue par rapport au lexique initial qu’elle integre.

2Les grammaires d’arbres Adjoints (Joshi et al., 1975) sont un fonnalisme syntaxique o1‘1 l’on associe, a la
substitution classique des grammaires hors contexte, une opération appellée adjonction consistant en l’insertion

Conceptualisation d’un systeme d’informations lexicales pour le T.A.L

items lexicaux présents dans la phrase a analyser, (Vijay-Shanker & J oshi, 1985). Un des prob-
lemes connus du formalisme LTAG est l’explosion combinatoire de la quantité d’arbre due a la
lexicalisation de la grammaire3. Une solution repose sur l’élaboration d’une méta-grammaire
TAG (Candito, 1999) qui, a partir d’un systeme de regles, génere des schemes (arbres non in-
stanciés) ancrés par le lexique via une procédure basée sur le ﬁltrage de structures de traits. Bien
que cette approche simpliﬁe le processus, une modiﬁcation des structures de traits lexicaux ne
se propage pas sur la méta-grammaire sans une intervention humaine conséquente.

L’ idéal serait de pouvoir modiﬁer les entrées lexicales sans pour autant devoir modiﬁer l’interface
d’acces a ces mémes données. Un systeme répondant dynamiquement aux requétes d’une meta-
grammaire a travers un métalangage de descripteur serait une solution envisageable.

L’étiqueteur de E.Brill : Cet outil, servant a attribuer une étiquette morpho-syntaxique a un
mot d’un corpus, est l’une des applications les plus courantes dans le domaine du TAL. Un
processus relativement simple mais fastidieux permet de créer le lexique permettant le traite-
ment d’un corpus (Seddah, 1998). Néanmoins le lexique ainsi créé n’est que tres difﬁcilement
réutilisable, c’est pourquoi l’étiquetage, et les opérations qu’il englobe, seraient éminemment
simpliﬁés si on disposait en amont d’un lexique sufﬁsamment conséquent pour couvrir la plupart
des mots du corpus tout en permettant de faire varier la granularité des informations présentes
dans les étiquettes morpho-syntaxiques.

Notre systeme, pour étre réellement utilisable, doit pouvoir générer le plus grand lexique pos-
sible et éventuellement permettre de changer le jeu d’étiquette dynamiquement (en remplacant
éventuellement les étiquettes morpho-syntaxiques par des arbres TAG) sans modiﬁer le systeme
d’inférence du tagger (Brill, 1992; Deloupy, 1995).

Les systémes de génération de textes : Le principe de la génération de textes est 1’inverse
de celui de l’analyse : partir d’une représentation conceptuelle pour aboutir au texte contenant
l’information a communiquer, (Reiter & Dale, 2000), (Gardent, 2002). Les besoins vis-a-vis
d’un lexique sont inversés : ils vont des concepts aux lexemes.

En prenant pour élément central, une représentation conceptuelle du prédicat, le lexique doit
permettre d’accéder a plusieurs informations : (1) les déﬁnitions sémantiques correspondant
aux représentations conceptuelles du prédicat et des autres concepts Inis-en-jeu, et (2), pour
chaque déﬁnition sémantique, les roles associés aux participants ; roles thématiques, positions
dans les LCS (Lexical Conceptual Structures) de J ackendoff (J ackendoff, 1990). Muni de ces
informations, le systeme d’informations lexicales doit enﬁn fournir la ou les liste(s) de lexemes
a utiliser avec, de préférence, des informations statistiques de pertinence.

L’extraction d’informations : Le systeme VULCAIN (Todirascu & Romary, parution en mai
2002) a pour objectif d’extraire de l’information sur un domaine limité, celui de textes sur la
sécurité des systemes informatiques. Les données d’entrée sont des textes. A partir des resul-
tats partiels d’un analyseur LTAG, des listes de groupes signiﬁcatifs sont extraits, principale-
ment des groupes noIr1inaux simples de la forme Nom-Nom, Nom-Adjectif, GroupeNoIninal-
Préposition-GroupeNoIr1inal. En sortie de ce systeme d’extraction d’information, doivent appa-

d’un sous-arbre dans une branche d’un autre arbre.
3La grammaire FTAG (Abeillé, 1991), retranscrite en XML, devient trop lourde pour des systémes classiques :
dans sa Version actuelle, elle correspond a une dizaine de milliers de schemes.

Djamé Seddah et Evelyne J acquey

raitre des listes d’entités identiﬁées (instances et categories) et validées sur l’ontologie.

Les informations nécessaires au bon fonctionnement de ce systeme sont, outre l’analyseur
LTAG, un lexique TAG au format TAGML et des liens entre les entrées lexicales de celui-ci
et l’ontologie du domaine. La particularité du lexique TAG attendu repose sur les liens entre
lexique et ontologie, qui sont représentés par des correspondances entre les arbres élémentaires
et les structures conceptuelles associées aux concepts de l’ontologie du domaine. De plus, ces
structures conceptuelles sont écrites dans le formalisme des logiques de description.

L’interface syntaxe - sémantique : Les travaux actuellement en cours dans notre équipe de
recherche consistent, a partir des données sémantiques de la grammaire et de l’analyse syntax-
ique d’une phrase donnée, a enrichir l’analyse syntaxique issue d’un parseur LTAG (op cité)
d’un calcul de la forme logique correspondant a la forét partagée résultat. Les données néces-
saires se synthétisent principalement par l’intersection de plusieurs domaines : les informations
sémantiques propres a l’ancre lexicale et la structure argumentale du scheme que l’entrée lex-
icale instancie. Or pour récupérer ces données il est nécessaire de travailler sur la réalisation
de ces intersections paradigmatiques, le lexique. Notre systeme d’information Va donc pro-
poser un ﬁltrage des informations issues de la méta-grammaire et Va enrichir cette description
d’un lexique logique tout en inférant une sous-spéciﬁcations de ces types via le cadre de sous-
catégorisation de l’entrée lexicale.

Synthése des types de données : Les exemples que nous venons d’illustrer brievement mon-
trent l’étendue et la diversité des types de données attendus suivant les applications. Au vu de
ces quelques exemples, un systeme d’informations lexicales normalisées et partagées doit se
caractériser par plusieurs propriétés maj eures :

0 La modularité de l’information : les différents types d’informations lexicales ne peuvent
plus étre simplement organises autour de la classiﬁcation reposant sur les niveaux linguis-
tiques de description (phonétique, morphologie, syntaxe, sémantique). Les méthodes de
conception des bases de données, qu’elles soient relationnelles ou objet, nous semblent
appropriées dans ce cas pour plusieurs raisons :

— Via leurs différents niveaux de représentations schématiques, elles permettent d’ avoir
une vue globale du systeme ainsi que des vues plus partielles selon les besoins,

— Les représentations schématiques, si elles sont rigoureusement documentées, per-
mettent des échanges avec des chercheurs de toute culture scientiﬁque, ce qui per-
met une meilleure adéquation avec les besoins de la communauté et une Inise a jour
réguliere de ceux-ci,

— Elles reposent sur des meta-langages formels dont les propriétés ont été démontrées.

0 La diversité des formats de sortie des différents types de données attendus. L’ information
sémantico-conceptuelle est attendue sous la forme de A-termes typés ou de DRS (Dis-
course Representation Structure), sous la forme de structures de traits typées partic-
ulieres (elles sont destinées au ﬁltrage des schemes pertinents) avec les méta-grammaires,
sous la forme d’expressions en logique de description avec les systemes d’extraction
d’information comme VULCAIN, et enﬁn, sous la forme de structures conceptuelles con-
formes au formalisme de J ackendoff dans le cadre d’un processus de génération comme
celui qui sera défendu par le projet GENI.

Conceptualisation d’un systeme d’informations lexicales pour le T.A.L

Il nous semble donc important d’envisager le processus de réponses aux attentes des ap-
plications en deux temps : retour du résultat sous une forme standard déﬁnie dans le
systeme d’informations lexicales lui-meme, puis, traduction de ce format dans celui de-
mandé par l’application client.

3 Conception d’un systeme d’informations lexicales

Le systeme d’informations lexicales dont nous proposons une modélisation dans le formal-
isme des bases de données relationnelles comporte, comme nous l’avons vu plus haut, un nom-
bre conséquent de types d’informations. L’acces a l’information devant étre modulaire, dans
l’ensemble des types d’informations, nous avons différencié sept sortes principales : les re-
strictions sélectionnelles, les représentations conceptuelles, les représentations sémantiques, les
réalisations syntaxiques par argument, les informations ﬂexionnelles, les informations concer-
nant les faInilles de constructions syntaxiques, et par la suite, les informations dérivationnelles.
Nous donnerons dans un premier temps le schéma entité-association des données du systeme
envisagé ainsi que le schéma relationnel correspondant en 3FN (troisieme forme normale).

Dans un deuxieme temps, nous aborderons les actions subies par le systeme ou produites par
lui. Pour synthétiser les choses, nous proposerons un schéma conceptuel des traitements pour
les actions principales.

3.1 Schéma conceptuel et relationnel des données

Le schéma conceptuel des données du systeme d’informations lexicales proposé est représenté
dans la ﬁgure (1)4. Ce schéma comporte une entité par type d’informations identiﬁé ci-dessus.

I. . _ . _ . _ . _ . _ . _..!

 

! Restrictions ' C: x ' ARGn '
! " ’ ctiormelles i ':-\ (1-
!_ ............ ..‘ ) i‘ —> ( :1)
(0- \
_‘ — —n)
\/ _ \ (1 ARG3
( n) ___________ .__
._ , , I
 / ,-\ ( ) Realzsatum i
_ ............. _, __ -" ARG2 ‘y""m"I"9 i
i _ I K '/ ( ) I ........... _.1
i Rcyresenmtwn ! -___~.
i ceptuelle _ K‘ _
L ............. _.|
(0-
.- _/ _ .
\’ / -—».’ \ ARG1  
_ o_ . . _
 ‘ :* .\ , -.
" "- ‘\ .’ \ _/
X‘ / -11) (o 1
l,_,W_ . (0.11) (*4, (1.11) Lemme _° 1 Constructions
smmml-que (1-I1) ( 1- syntaxtques
/_
(1-n ‘ ._/
1 p - "" Lexeme
‘"1"’ (1-11) ~._. (1-1)

ﬂexionnelles

Figure 1: Le schéma entité association des données du systeme

4Dans ce schéma, toutes les entités entourées de rectangles en pointillés représentent des données non encore
accessibles.

Djamé Seddah et Evelyne J acquey

Par ailleurs, en termes d’organisation des informations lexicales classiques, nous avons in-
sisté sur plusieurs points : La variabilité sémantique et conceptuelle d’un meme lemme5
est représentée par les cardinalités (N-M) des associations entre ces deux types d’informations
et 1’entité LEMME.

La variabilité des réalisations syntaxiques des arguments est représentée par des associations
de type (N-M) entre les entités ARGUMENT et l’entité REALIsATIoN SYNTAXIQUE.

L’accés direct aux informations propres a chaque argument d’un lemme prédicatif est rendu
possible via la décomposition passant par les entités ARGUMENT.

Chaque forme ﬂéchie, c’est-a-dire chaque instance de l’entité LEXEME est supposée corre-
spondre a au plus une paire constr11ite a partir d’un lemme et d’une forme de ﬂexion.

Le reste des associations du schéma peut étre classé selon le type de cardinalité.

Les associations ((0-n) - (1-n)) caractérisent tout d’abord les liens entre les restrictions selec-
tionnelles, les représentations conceptuelles, les représentations sémantiques, les réalisations
syntaxiques, et les arguments. Cela signiﬁe que, pour tout argument, il y a au moins une infor-
mation de chacun des types cités ci-dessus et il peut y en avoir plusieurs. En revanche, certaines
instances des types d’informations citées peuvent ne pas caractériser une instance d’un argu-
ment donné, ou peuvent en caractériser plusieurs.

La meme type d’association caractérise le lien entre une instance de lemme et une instance de
CONSTRUCTIONS SYNTAXIQUES.

Les associations ((0-n) - (0-1)) caractérisent le lien entre une instance de lemme et des instances
d’arguments. Cela signiﬁe que pour une instance de lemme, il peut y avoir au plus une instance
de chaque type d’argument interne.

L’association ((0-n) - (1-1)) caractérise uniquement le lien entre une instance de lemme et une
instance d’argument externe.

Enﬁn, chacun des types d’entités du schéma en (1) comporte au moins un attribut IDENTIFI-
ANT et un attribut CONTENU dont la valeur est une chaine de caracteres. Pour tous les types
d’informations a valeur non atomique, nous créons un attribut RESSOURCES dont la valeur est
le chemin du ﬁchier contenant l’information, par exemple une description XML d’un scheme.
A terme, ces ﬁchiers contiendront l’information dans un format commun a l’ensemble du sys-
teme, mais qui reste a déﬁnir. Le format de cette information sera ensuite traduit par un ou
plusieurs module(s) particuliers dans le format requis par l’application client.

Le schéma entité-association ci-dessus peut étre transformé en schéma relationnel en 3FN
(troisieme forme normale). Etant données les cardinalités des associations, le schéma rela-
tionnel comporte treize tables correspondant aux entités et vingt tables correspondant aux asso-
ciations de type (N-M).

5Dans le cas de mots homonymes, nous supposerons deux lemmes différents, par exemplefraisel pour le fruit
et fraise2 pour l’outil. Dans le cas de mots lexicalement ambigu, un méme lemme correspondra a deux n—uplets
distincts de l’entité REPRESENTATION SEMANTIQUE, ce sera le cas de plateau par exemple.

Conceptualisation d’un systeme d’informations lexicales pour le T.A.L

3.2 Les différentes actions possibles

Comme le montre la ﬁgure (2), l’ensemble des traitements des données peut étre schématisé de
maniere globale. Ce schéma est représenté selon la méthode de conception MERISE6.

   

  

Cannzctian pmczu

   
   

         

Chzu

 

Fak: Connect Succzs
Data Data

um (rm, rights) | Admin

System
Exit

 
   

01m-ins
Dialog (2)

  
 

Actions
Paul (1!)

Result (1')

Ennr M5g(c) Enw Msg (1)
and < =2

  

R2; nut Tbalmznt Demnnmbn
Chzu Succzs Systnu M‘? 0')

Ext’!

Ennrlllsg 0:)

Figure 2: Le schéma conceptuel des traitements du systeme

On notera plusieurs points particuliers. Tout d’abord, lors de la procédure de connexion, le
systeme est supposé reconnaitre l’utilisateur désirant se connecter, et en particulier son type :
“utilisateur” ou “adrninistrateur”. S’il est du type “utilisateur”, le systeme est supposé détenir
les informations décrivant ses droits. Cela signiﬁe donc que le systeme dispose d’une base
contenant ces données. Nous ne l’avons pas représentée dans la mesure ou elle ne nous semble
pas centrale pour notre sujet, l’organisation des informations lexicales.

Ensuite, l’ensemble des traitements du systeme est subdivisé en deux sous-ensembles en fonc-
tion du type d’utilisateur : “utilisateur” ou “adrninistrateur”. En particulier, les réponses du
systeme varient d’un type a l’autre : plus conviviales et plus limitées (résultats d’interrogation
ou messages d’erreurs aussi explicites et informatifs que possible) avec le type “utilisateur”,
pas nécessairement conviviales et plus étendues avec le type “adrninistrateur” dans la mesure
o1‘1 celui-ci peut procéder a tout type d’opérations sur le systeme (interrogation, Inise a jour,
insertion, suppression). On pourrait encore imaginer un troisieme type, le type “contributeur”.
Les contributions seraient vériﬁées et intégrées ensuite par un administrateur.

Enﬁn, la procédure de connexion est autorisée a échouer deux fois seulement, ce qui est représenté
dans la condition de synchronisation “s1” par la condition “c<3”.

5Les ronds représentent des données ou “événements”, les rectangles représentent des operations avec des
données d’entrée et des données de sortie, et les triangles représentent des conditions de synchronisation entre les
données d’entrée pour le déc1enchementd’une operation.

Djamé Seddah et Evelyne J acquey

4 Validation conceptuelle de la modélisation proposée

Analyse syntaxique : L’ analyseur dont nous avons étudié les besoins est un analyseur TAG
(Lopez, 1999). Come nous l’avons vu en (2), l’une des difﬁcultés avec ce type d’analyseur
est l’explosion du nombre d’arbres formant le lexique, explosion qui rend leur gestion difﬁcile.
Le systeme d’informations lexicales proposé peut fournir une aide importante via l’organisation
des données qu’il suppose. Ainsi, pour instancier les arbres décrivant la construction passive
avec sujet nominal, une solution serait de sélectionner tous les lexemes étant au participe passé
avec l’auxiliaire étre et ayant un objet direct nominal. Une fois cette sélection faite, il suf-
ﬁt d’associer a chaque instance un arbre décrivant la construction passive en question. Pour
ce faire, une requéte appropriée en algebre relationnelle sera appliquée a l’ensemble des rela-
tions LEMME(id_lem, contenu, id_arg1, id_arg2, id_arg3, ..., id_argn), ARG2-RSYNT(id_arg2,
id_rsynt), RSYNT(id_rsynt, contenu), LEXEME(id_leX, contenu, id_lem, id_ﬂeX) et FLEX-
IONS(id_ﬂex, contenu). L’ ensemble des lemmes ayant un objet direct nominal est égal au ré-
sultat de la requéte

R1 = H,~d_l,,,,,(><,~d_,,,_,,2 (1><1,~d_,,y,,, ((a(c,,me,,,,::,,,,:)(RsYNT)), ARG2-RSYNT), LEMME)).

L’ ensemble des lemmes ayant une forme passive et un objet direct nominal est égal au résultat
de la requéte

R2 : Hid_lew ([Xlid_flew (0-(contenu=’ppassé—passif’) (FLEXIONS): [><‘id_lem  

I1 sufﬁt alors de modiﬁer la table LEXEME - CONSTRUCTIONS SYNTAXIQUES pour toutes
les instances différentes de l’attribut id_lex et de modiﬁer la table CONSTRUCTIONS SYN-
TAXIQUES en y insérant un nouvel n-uplet de la forme (csynt_0001, ’constr. passive en par’,
ﬁle=ArbrePassifPar).

Méta-grammaires : Telle qu’elle est construite actuellement, la méta-grammaire de B. Gaiffe
et de B. Crabbé7, basée sur (Candito, 1999), produit des schemes non instanciés décrits par des
structures de traits (cf. section 2.1). Ces structures de traits décrivent les propriétés des schemes,
ces propriétés n’étant pas forcément structurées comme le sont les informations lexicales. Les
schemes décrivant les différentes structures passives par exemple vont au moins contenir la
paire attribut-valeur [PASSIF = +].

Cette information n’étant pas directement accessible dans le systeme d’informations décrit
en section 3, deux solutions sont possibles. La premiere consiste a demander a l’utilisateur
de traduire les schemes en question sous la forme de requétes interprétables par le systeme
d’informations. Cette premiere solution n’est cependant pas conforme a nos objectifs, ni méme
avec le schéma conceptuel de traitement (section 3.2), car l’utilisateur n’est pas supposé con-
naitre la structure des données du systeme. Une seconde solution consiste donc a construire
un traducteur pour les structures de traits décrivant les schemes. Ce traducteur sera intégré
au systeme d’informations sous la forme d’un module indépendant, activé uniquement lorsque
l’application client sera une méta-grammaire.

La conception d’un tel traducteur demande néanmoins la synthese entre les informations lex-
icales, plus ou moins accessibles comme la valence, la realisation des arguments, l’existence
d’une forme participe passé avec auxiliaire étre par exemple, et le comportement syntaxique
des lexemes.

7Travai1 de doctorat en cours et non encore publié.

Conceptualisation d’un systeme d’informations lexicales pour le T.A.L

Extraction d’inforInations : Le systeme qui nous sert actuellement de “laboratoire d’expériences”
est le systeme VULCAIN (cf. section 2.4). L’une de ses particularités est le lien existant entre
les entrées lexicales et les concepts de l’ontologie du domaine.

Une fois ces liens déﬁnis dans (Todirascu & Romary, parution en mai 2002), i1 sera possi-
ble de les intégrer sous la forme d’instances de la table LEXEME - REPRESENTATION CON-
CEPTUELLE. Le systeme VULCAIN po11rra ainsi se décharger de cette information qui lui sera
rendue dynamiquement par le systeme d’informations lexicales.

Une telle perspective demande cependant la encore un coﬁt de traduction, et cela pour deux
raisons. Tout d’abord, le lexique de VULCAIN est décrit en TAGML. L’ extraction du lexeme de
chaque entrée lexicale demande donc une premiere traduction. Ensuite, VULCAIN attend une
représentation conceptuelle exprimée en logique de description, ce qui demande une seconde
traduction.

5 Conclusion et perspectives

Au vu du besoin croissant dans le domaine du TAL de ressources lexicales normalisées et li-
brement accessibles, et dans la suite du lexique MULTEXT, nous avons jeté les bases d’un
systeme d’informations lexicales destiné a répondre aux besoins des applications, différents par
leur nature et par le format des données attendues.

Les schémas conceptuels des données et des traitements peuvent étre vus comme une traduction,
dans le cadre des bases de données relationnelles, d’un format abstrait et d’une organisation des
données lexicales. Ces schémas, quoique non sufﬁsants, ont permis d’approcher plus precise-
ment le probleme complexe que constitue un tel projet. En particulier, les quelques exemples
d’applications pris en compte ont montré la diversité des données attendues, tant pour ce qui de
leur organisation que pour ce qui est de leur format.

Plusieurs directions de recherche nous semblent dont importantes. Tout d’abord, redéﬁnir un
format abstrait des données qui permettent une traduction aussi peu coﬁteuse que possible
dans les différents formats de données attendus (structures de traits, arbres TAG et TAGML,
logique de description, logique des prédicats, A-calcul). D’autre part, déﬁnir plusieurs formats
d’échanges entre le systeme d’informations lexicales d’un cote, et certaines applications carac-
téristiques du TAL. Enﬁn, mais cela restera une tache permanente, il nous semble indispensable
d’intégrer les résultats d’études lexicales existantes et exploitables pour enrichir les données
actuelles.

Références

ABEILLE A. (1991). Une grammaire lexicalisée d’arbres adjoints pour lefrancais. PhD thesis, Paris 7.

BRILL E. (1992). A simple rule-based part of speech tagger. In Proc. of the Third Conference on Applied
Natural Language Processing, p. 152-155, Trento, Italy.

CANDITO M.-H. (1999). Organisation modulaire etparamétrable de grammaires électroniques lexical-
ise’es, Application aufrancais et a l ’italien. PhD thesis, Université de Paris 7.

DELOUPY C. (1995). La méthode d’étiquetage d’Eric brill. Traitement Automatique des Langues.

Djamé Seddah et Evelyne J acquey

GARDENT C. (2002). Proposition d ’Action Concertée de Recherche INRIA pour le projet GENI. Rap-
port interne, INRIA.

IDE N. & VERONIS J . (1994). Multext (multilingual tools and corpora). In 14th Conference on Com-
putational Linguistics (COLING’94), Kyoto, Japan.

JACKENDOFF R. (1990). Semantic Structures. MIT Press, Cambridge, MA.

JOSHI A., LEVI L. & TAKAHASHI M. (1975). Tree adjunct grammars. Journal of the Computer and
System Sciences.

LOPEZ P. (1999). Analyse d ’énoncés oraux pour le dialogue homme machine a l ’aide de Grammaires
Lexicalise’es d ’arbres. PhD thesis, Université Henry Poincaré Nancy 1.

REITER E. & DALE R. (2000). Building Natural Language Generation Systems. Cambridge University
Press.

ROMARY L. (2001). Towards an abstract representation of terminological data collections - the tmf
model. In TAMA 2001, Terminology in Advanced Microcomputer Application.

SEDDAH D. (1998). Mesure des poids et distances pour l’inférence de grammaires stochastiques. Mas-
ter’s thesis, Université Paris 7.

TODIRASCU A. & ROMARY L. (parution en mai 2002). Le projet VULCAIN, rapport ﬁnal. Rapport
interne, LORIA.

VIJAY-SHANKER K. & J OSHI A. K. (1985). Some computational properties of tree adjoinig grammars.
In COLING, Chicago, USA.

VERONIS J . & KHOURI L. (1995). Etiquetage grammatical multilingue: le projet multext. Traitement
Automatique des Langues.

