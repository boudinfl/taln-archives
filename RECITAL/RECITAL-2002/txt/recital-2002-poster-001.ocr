K1;"(,'1'1AL ZUUZ, Nancy, Z4—Z'/ _]l11I1 ZUUZ

Un Modéle Distribué d’Interprétation de Requétes fondé sur
la notion d’Observateur

Guillaume Pitel
Lll\/[SI-CNRS F-91403 Orsay CEDEX
pitel@limsi.fr
date de soutenance prévue : ﬁn 2003

Résumé - Abstract

Nous proposons un modele de conception d’agent conversationnel pour l’assistance d’interface.
Notre but est d’ obtenir un systeme d’interprétation de requétes en contexte, générique pour l’in-
dépendance vis-a-vis de la tache, extensible pour sa capacité a intégrer des connaissances sur
un nouveau domaine sans remettre en cause les connaissances antérieures et uniﬁé dans le sens
o1‘1 tous les aspects du traitement de la langue naturelle, syntaxe, sémantique, ou pragmatique
doivent s’ exprimer dans un méme formalisme. L’ originalité de notre systeme est de permettre de
représenter des connaissances d’interprétation de niveaux de granularité divers sous une méme
forme, réduisant la problématique de communication entre sources de connaissances qui existe
dans les systemes modulaires. Nous adoptons l’approche des micro-systemes suivant laquelle
l’interprétation de la langue se fait selon un processus non stratiﬁé, et o1‘1 absolument tous les
niveaux peuvent interagir entre eux. Pour cela, nous introduisons et déﬁnissons un type d’entité
que nous avons nommé observateur.

This paper describes a conversationnal agent design model for interface assistance. The model
is meant to be generic, i.e. task independant extensible for the ability of integrating know-
ledge about a new task without revising previous knowledge, and uniﬁed because every level
of Natural Language, from syntax, semantics, pragmatics and dialogue to production should be
described within the same formalism. The main originality of the proposed system is its abi-
lity to represent in the same way various granularity levels of interpretation knowledge sources.
This avoids communication problems between heterogeneous knowledge sources, as they occur
in modular systems. Thus we adopt a micro-systemics approach, stating that the Natural Lan-
guage Interpretation, rather than being made of multi-layered processes, a process where all the
components levels can interact with each others. This is achieved by introducing the notion of
observer.

Mots-clefs — Keywords

Agents Conversationnels, Analyse Distribuée, Micro-Systemes, Sémantique Procédurale
Conversationnal Agents, Distributed Analysis, Micro-Systems, Procedural Semantics

1 Cadre et problématique

Le projet InterViews (Sansonnet, 1999) se donne pour objectif de concevoir un systeme de dia-
logue en langue naturelle pour supporter l’eXécution d’agents assistants d’interface. Nous nous
situons dans le cadre des applications interactives disponibles sur la toile. Le projet regroupe
des travaux sur le raisonnement sur le fonctionnement des composants (Sabouret & Sansonnet,
2001), l’analyse de textes par motifs et proximité sémantique (Gérard & Sansonnet, 2000), et
sur un modele d’interprétation des questions sur la structure des composants. A long terme,
l’objectif de ce projet est de pouvoir proposer un environnement de conception d’interfaces en
langue naturelle, a partir du systeme de dialogue proposé et des différentes recherches citées
précédemment. Concernant la langue naturelle, nous devrons vériﬁer par l’expérimentation les
problématiques d’analyse et d’interprétation qui seront ainsi supportées. Notre travail en étant
au stade préliminaire, nous n’avons cependant pas encore abordé le cas pratique de l’utilisateur
ﬁnal, primordial dans le domaine de l’interface homme-machine.

1.1 Probleme de la généricité dans l’interaction en langue naturelle

La maitrise de l’Interaction en Langue Naturelle (ILN) entre un utilisateur et une interface d’ap-
plication grand public a pour but de perInettre a une personne non initie’e d’accéder rapidement
aux fonctionnalités d’un logiciel. I1 existe des réalisations permettant de commander certains
types d’app1ications (Goddeau et al., 1994; Allen et al., 1996; Bennacef et al., 1996; Lamel
et al., 1998) par la voie de la langue naturelle, mais il n’y a pas actuellement de modele de des-
cription générique permettant de déﬁnir pour n’importe quelle tache son interface en langue
naturelle. D’une part, les systemes existants sont en grande partie concus de maniere ad hoc,
et d’autre part, on ne sait toujours pas dire pour une application donnée si on est capable de
produire son interface de langue naturelle. C’est pourquoi des chercheurs comme (Allen et al.,
2001a) ont posé clairement la problématique de produire des outils génériques pour l’ILN :

(apres avoir posé l’hypothese de l’indépendance vis-a-vis du domaine dans le
cadre des dialogues pratiques) « Si cette hypothese est vraie, il est rentable de s’in-
vestir massivement dans la conception d ’un systeme de dialogue générique, qui
sera alors assezfacilement adaptable £1 chaque nouvelle tdche. »1

1.2 Vers un systeme d’ILN générique, extensible et uniﬁé

Les premieres tentatives pour produire des systemes d’ILN ont suivi des approches monoli-
thiques, fortement dépendantes de la tache de dialogue spéciﬁque a laquelle on les destinait.
Depuis, des modeles issus des systemes multi-agents (Carvalho et al., 1998; Stefanini & De-
mazeau, 1995), et s’appuyant sur la communication entre modules de traitement indépendants
ont fait l’objet de recherches approfondies (Sabah, 1990; Boitet & Seligman, 1994; Stefanini &
Demazeau, 1995), et certains produisent déja des résultats encourageants (Allen et al., 2001b).
L’ adaptation de ces systemes a une nouvelle tache est plus aisée que dans les systemes monoli-
thiques, puisque seuls quelques modules doivent étre modiﬁés. Cependant il reste pour l’instant

1« If this hypothesis is true, it is worthwhile to spend a considerable effort building a generic dialogue system
that can then be adapted to each new task relatively easily ».

LJ11 J.V1\}\;l\/1\/ bl 1l1L\/1tI1\/L(l.Ll\}ll \al\/ J.\\/\ibl\/L\/D \J. 1 1L\/1

impossible de concevoir un systeme de dialogue permettant de décrire simplement n’importe
quelle tache.

Ces limitations nous ont conduit a proposer trois axes majeurs autour desquels les systemes de
dialogue modernes devraient étre concus : la généricité, l’extensibilité, et l’unité de la descrip-
tion. La généricité pour l’indépendance vis-a-vis de la tache, l’extensibilité pour sa capacité a
intégrer des connaissances sur un nouveau domaine sans remettre en cause les connaissances
antérieures, et l’unité dans le sens o1‘1 tous les aspects du traitement de la langue naturelle,
syntaxe, sémantique, pragmatique, dialogue ou réponse par production linguistique ou action,
doivent s’exprimer dans un méme formalisme, et donc tous communiquer entre eux de la méme
maniere, ce qui facilite l’ajout de nouvelles sources de connaissances.

Notre vision d’un systeme d’ILN adopte une approche fortement distribuée et a granularité va-
riable de l’interprétation. Notre systeme de dialogue possede trois caractéristiques principales :

Environnement L’ interprétation est idéalement appliquée a tout l’environnement, c’est-a-dire
que l’analyse ne porte pas seulement sur la phrase que vient de prononcer l’utilisateur,
mais sur l’ensemble du dialogue passé ainsi que les informations concemant l’application
ou les applications auxquelles le systeme sert d’interface.

Médiateur Le systeme d’ILN suit l’approche médiateur, qui implique que l’analyse doit non
pas amener a un formalisme de représentation centralisé (langage pivot) pour étre ensuite
interprété de maniere ad hoc, mais aller de l’observation a l’action grace a un systeme
uniﬁé.

Observateurs L’ interprétation est représentée par des observateurs, entités remplacant les regles
de réécriture d’un systeme d’analyse classique. Ils sont capables de donner un point de
vue sur l’environnement (ou la partie de l’environnement) qu’ils observent, ce point de
vue pouvant se traduire par une action.

2 Orientations théoriques

2.1 Théorie des Affordances

La théorie des aﬁordances (de to aﬁord : foumir en anglais) de l’ environnement sur les individus
telle qu’elle est déﬁnie par (Gibson, 1977; Gibson, 1979), propose que la perception ne consiste
pas a capter les dimensions et les propriétés absolues des objets de l’environnement, mais a cap-
ter les caractéristiques que ces objets fournissent, exposent aux observateurs. (Norman, 1988;
Norman, 1990) en fait l’interprétation suivante : « la référence aux objets et concepts sefait tels
qu’ils sont vus (pergus, catégorisés) par Z ’0bservateur », c’est-a-dire en fonction du phénoméne
de ces objets et concepts, et non pas en fonction de leurs caractéristiques implémentatoires.
Nous appellons phénoméne d’un objet son expression a travers le point de vue d’un observa-
teur donné, ce qu’il donne a voir de lui a celui-ci. En cela, le phénoméne n’a pas de réalité en
l’absence d’un observateur, et pour chaque observateur, il existe un phénoméne different.

A partir de cette théorie, nous avons choisi de concevoir notre systeme de dialogue comme un
médiateur, c’est-a-dire un systeme capable de faire le lien entre deux visions différentes du
monde : celle de l’utilisateur et celle de l’application. Notre systeme sera articulé autour de
1’idée sous-jacente de changement de point de vue, aﬁn d’amener 1e point de vue de1’utilisa-
teur vers le point de vue de l’application par traitements successifs.

2.2 Sémantique Procédurale

La théorie de la sémantique procédurale introduite par (Wittgenstein, 1953) et reformulée par
(J ohnson-Laird, 1977; Woods, 1981) pour les applications informatiques, a pose les bases d’une
vision fonctionnelle de la signiﬁcation. En effet, ses initiateurs proposent de considérer le sens
d’un symbole (puis par extension, de toute observation) comme sa réalisation ou encore son
application dans le monde réel par l’action de l’observateur. La sémantique n’a donc pas d’exis-
tence autre que celle de son expression dans un environnement, ce qui implique qu’il ne peut
étre remplacé que par un processus réalisant son interprétation. (Woods, 1981) exprime cette
idée de la facon suivante :

« [. . .] la signiﬁcation d’un symbole réside dans une procédure abstraite, pas
nécessairement exécutable, quifait le lien entre l’expression symbolique et le monde
réel par l’interme’diaire des opérations (de calcul, d’inférence) d’un interpréte
physique agissant a la fois sur des représentations intemes et sur ses connexions
sensori-motrices avec le monde. »2

L’un des travaux appliquant cette théorie est le classique SHRDLU de (Winograd, 1973). La
difﬁculté d’étendre son application hors du micro-monde o1‘1 elle était cantonnée a bloqué le
développement de son idée pourtant tres prometteuse. C’est donc tres probablement dans cette
extension qu’il faut travailler pour proposer des systemes de dialogue ayant des caractéristiques
de généricité améliorées.

2.3 Analyse guidée

Le Word Expert Parsing (Small, 1980; Adriaens & Devos, 1994) est une théorie de la com-
préhension du langage naturel, fondée sur l’hypothese que les objets du langage (les mots et
leur morphologie) sont individuellement autant porteurs d’information sur leur propre analyse
que d’information sémantique. Un systeme de compréhension du langage naturel devrait donc,
selon cette idée, diriger son analyse en fonction de la connaissance (pragmatique, sémantique,
lexicale, morphologique) apportée par chaque mot.

Cette représentation décentralisée du processus d’analyse conduit le systeme a se reposer sur
les actes de communication entre experts pour l’échange d’informations et les choix a faire
concemant la signiﬁcation globale vers laquelle le systeme doit se diriger. Pour controler cette
population d’experts, chacun d’entre eux doit étre décrit de maniere a se mettre en pause lors-
qu’il a besoin d’information provenant d’un autre expert, et a reprendre son activité lorsque
cette information arrive.

2« [. . .] the meaning of a symbol resides in an abstract procedure, not necessarily executable, linking the sym-
bolic expression to the physical world through the (computational / inferential ) operations of a physical interpreter
operating on a combination of internal representations and sensory/motor connections to the world. »

LJ11 J.V1\}\;l\/1\/ bl 1l1L\/1tI1\/L(l.Ll\}ll \al\/ J.\\/\ibl\/L\/D \J. 1 1L\/1

3 Proposition d’un modéle d’ILN

3.1 Notion de granularité

Dans l’ILN, le probleme de la granularité de l’interprétation se pose a deux niveaux :

— au niveau abstrait, la granularité de l’objet de l’interprétation. Ce sur quoi porte l’inter-
prétation (le mot, la phrase, le dialogue, ou la morphologie, la syntaxe, la sémantique, la
pragmatique, etc.).

— au niveau concret, la granularité de l’objet d’interprétation. Ce avec quoi on conduit celle-ci
(la forme prise par le logiciel d’analyse).

Dans les systemes de dialogue comme (Sabah, 1990; Allen et al., 2001b), l’interprétation porte
sur la syntaxe, la sémantique, la pragmatique, la planiﬁcation de tache et d’autres niveaux, et
chaque niveau est implémenté par un module. L’ objet de l’interprétation et l’obj et d’interpréta-

tion ont donc la meme granularité moyenne3.

Dans les systemes comme (Small, 1980), l’interprétation est conduite a partir de et par les mots,
l’objet de l’interprétation a donc une granularité tres grosse (restreinte au mot). En revanche,
comme chaque mot doit étre interprété, la granularité de l’objet d’interprétation est ﬁne.

Notre objectif en proposant ce modele est d’offrir dans les deux cas une granularité variable a
champ large (couvrant un maximum de niveaux), répondant aux besoins de l’interprétation des
différents niveaux de la langue, y compris en autorisant des interpretations nécessitant la prise
en compte simultanée de plusieurs niveaux.

3.2 Notation de l’environnement

L’ application et le dialogue avec l’uti1isateur sont décrits en texte et annotés avec des balises
dans un formalisme proche de XML, mais se différenciant de ce demier par plusieurs aspects.
En effet, il nous faut, grace a ces balises, marquer des zones éventuellement discontinues, en
leur donnant un contenu et une identiﬁcation unique. Pour cela, nous avons choisi le formalisme
de balisage suivant :

<T id = ’%IDUN%’ attributl = ’valeur1’  attributN = ’valeurN’>...<fI‘ id =
’%IDUN%’>...<T id = ’%IDUN%’>...<fT id = ’%IDUN%’>

on T est le type utilisé pour la reconnaissance, %IDUN% est une clef unique dans l’environ-
nement permettant d’identiﬁer la zone, attribut et valeur sont des informations utilisables par
les observateurs, qui correspondent au type T donné dans la balise. Les portions de l’environne-
ment délimitées par une balise de type <T id=’xxx’ v1=’ ...’ v2=’...’>...<fI‘ id=’xxx’> sont ainsi
marquées comme pouvant étre interprétées comme des entités T avec les attributs V1 et V2 ayant
leurs valeurs données. On aura donc par exemple (incomplet) :

<effacer id=’ 1’>Efface-moi</effacer id=’ 1’> <liste-mels id=’4’ contenu=’mel1,
mel23, ..., mel54’><liste-mels id=’2’ contenu=’mel1, mel2, ..., melN’>tous les
méls</liste-mels id=’2’> <date-restr id=’3’ condition = ’annees( aujourdhui() -
date(*) ) > 4’>de plus de quatre ans</date-restr id=’3’></liste-mels id=’4’>

3Entre 10 et 50 modules environ, chacun travaillant sur un niveau de la langue naturelle.

De plus, nous cherchons a vériﬁer la cohérence entre deux balises, c’est-a-dire le fait que les
deux interprétations données par deux balises ne soit pas contradictoires. En effet, si un obser-
vateur reconnait une certaine combinaison de balises, et que celles-ci sont présentes dans l’envi-
ronnement, mais en provenance d’observations contradictoires (se recouvrant l’une l’autre, par
exemple), il ne faut pas que son point de vue soit pris en compte. Aﬁn de savoir si une balise est
cohérente avec une autre, chaque balise créée devra ainsi conserver les identiﬁants des balises
qu’elle a reconnu faire partie du motif de sa regle d’activation.

3.3 Représentation du processus d’interprétation

La théorie de la sémantique procédurale implique que, quelque soit le niveau de granularite’
de l’observation auquel on se place (le mot, la phrase ou un échange verbal complet) l’entité
observée peut étre considérée comme le déclencheur d’une fonction dont le résultat Va étre
la réaction de l’observateur. Or si nous partons du postulat que cette théorie est applicable a
tous les niveaux, cela signiﬁe que la fonction totale est le produit de l’interaction de fonctions
d’observation a des niveaux inférieurs.

Selon la théorie de la sémantique procédurale, quelque soit le niveau de granularité de l’objet
de l’interprétation auquel on se situe, il existe une procédure interprétant la signiﬁcation des
symboles observés. Nous choisissons pour cette raison de représenter le processus d’interpréta-
tion avec de nombreux processus spéciﬁques plutot qu’avec quelques modules génériques, ceci
aﬁn d’obtenir justement la généricité de l’interprétation.

3.4 Mise en aeuvre
3.4.1 Observateurs

Conceptuellement, un observateur exprime un point de vue sur ce qu’il « voit ». Son champ
d’observation est principalement tourné autour du langage, mais il inclut aussi les perceptions
auxquelles il a acces, c’est-a-dire la représentation de l’application et l’historique du dialogue.
Un observateur Va donc « Voir » certaines balises a certaines positions les unes par rapport
aux autres, et écrire une interprétation de cette vision a partir de sa connaissance propre (sa
procédure de réécriture).

Forrnellement, un observateur est composé de trois éléments : une regle d’activation R, un
mode d’activation M, et un procédure de réécriture Pt ou t est le type de la balise produite par
la procédure.

— La regle d’activation est implémentée par une fonction d’appariement appliquée sur l’en-
vironnement. Elle va déterrniner s’il existe des éléments dans l’environnement susceptibles
d’étre interprétés par la procédure de réécriture B.

— Le mode d’activation M permet de déterminer le comportement de l’observateur pour le
mécanisme de prédiction expliqué plus loin. Le concepteur de l’observateur fait le choix du
mode d’activation (par défaut, on considere qu’un observateur est réactif et proactif a la fois) :

réactif s’il réagit a la présence de certaines balises dans l’environnement.

proactif s’il réagit au fait que d’autres observateurs attendent la balise qu’il sait produire.

— La procédure de réécriture Pt peut avoir trois actions différentes, au choix du concepteur :

LJ11 J.V1\}\;l\/1\/ bl 1l1L\/1tI1\/L(l.Ll\}ll \al\/ J.\\/\ibl\/L\/D \J. 1 1L\/1

— si l’observateur produit seulement une information pour d’autres observateurs, Pt modiﬁe
l’environnement en raj outant des balises 15, par exemple (<adjectzf ><n0m>bleu</adjectzf >-
</n0m> deviendra <c0uleur rvb=#0000FF><acﬁecty‘><n0m>bleu</adjecty‘></c0uleur>-
</n0m>)

— si l’observateur doit agir sur l’environnement, Pt effectue une opération sur l’application,
en appelant une fonction, ou en modiﬁant des données

— si l’observateur doit agir sur l’utilisateur, Pt produit un message pour celui-ci.

3.4.2 Mécanisme de prédiction

Pour diminuer la complexité du traitement, mais aussi pour assurer la convergence de notre
systeme, la théorie du Word Expert Parsing, et plus généralement les travaux sur les méthodes
d’analyse guidées par prédiction nous ont conduit a intégrer dans notre processus d’interpréta-
tion le fait qu’un observateur va avoir besoin pour étre déclenché de la présence de certaines
balises dans l’environnement sur lequel il est appliqué. Par exemple, considérons un observa-
teur qui reconnait ce motif :

<0rdre> <transferer>... </transferer> <designati0n_message>. ..
</designati0n_message > <desi gnati0n_destinatai re > . .. </desi gnati0n_destinatai re >
</ordre >

Cet observateur aura besoin des balises ordre, transferer, designati0n_message, designati0n_desti-
nataire. Si les balises ordre et transferer ont déja été produites par l’exécution de procédures
d’autres observateurs, il y a une chance importante que la suite de la phrase corresponde au
motif reconnu par cet observateur.

Le fait qu’un observateur ait presque tous les objets dont il a besoin va ainsi étre interprété
comme le fait qu’il attend certains objets encore absents. Le déclenchement de l’action d’un
observateur va donc étre dirigée aussi bien par la présence ou non de certaines balises dans
l’environnement que par le fait que la balise qu’il produit soit attendue ou non par d’autres
observateurs.

Nous mettons ce mécanisme en oeuvre en calculant le graphe de connexion implicite4 de la
population d’observateurs (cf. ﬁg 1).

3.4.3 Algorithme d’interprétation

L’ algorithme d’interprétation de l’environnement est une boucle qui s’exécute sans ﬁn, et a
chaque tour, on suit le cheminement suivant :

4La régle d’activation des observateurs est une fonction d’appariement portant sur les balises dont les types
sont ceux des procédures de réécriture. Nous considérons que le type de balise produit par un observateur est
connu a l’avance par le mécanisme d’interprétation. De fait, il se forme donc un graphe statique de propagation
de l’ana1yse dans la population des observateurs, les noeuds du graphe étant les observateurs, les entrées du noeud
sont les concepts attendus dans la régle d’activation, la sortie est le type de la procédure de réécriture.

L’ existence de ce graphe va nous permettre de guider l’analyse par une recherche accélérée des chemins pos-
sibles pour la satisfaction des prédictions. I1 permettra non seulement de réduire le nombre de régles essayées pour
trouver les observateurs a déclencher, mais aussi de trouver les chemins les plus probables pour arriver a obtenir
un certain type de balise dans une certaine zone.

ENVIRONNEMENT

( <dia1ogue> <app1ication> \
<transmettre—message><ordre> <1iste—dest nom="amis"><ami>
transmet ce message 51 Jean—Pau1 <nom>hermierdnom><prénom>.....
dordre>dtransmettre—message> .. ..dliste—dest><me1s><me1—grp nom=

"L11V[SI">...dme1—grp><me1—grp
nom="copains"><me1><auteur nom=
"\nico"><sujet>Je suis 1adsujet>

<pl“'ase>Est_°° que -rai re?“ des <contenu>...</contenu>

méls de mes amis récemment ?
</phrase>
ddialogue>

Requete
dapp1ication>

\ J

OBSERVATEURS

W N
O1:={R=(<ord1'e><transmettre—mes—

—sage>. .. .<message>M.. .<destina—

—taire>Dddestinataire></ord1'e>) L

M=(réactit)

Réponse Paction = (forward_mail(M,D))}

Utilisateur

O8:={R = (<me1 num=p1urie1>...</me1><de>
...<de><1iste—envoyeurs>...dliste—

envoyeuIs>)
M = (proactif) Graphe implicite
P1iste—me1s = (me1s=se1ect * from mels etc.) de connexions

K 1

FIG. 1 — Fonctionnement général du systéme d’analyse d’InterViews. Exemple de traitement
sur des objets de haut niveau, ici des listes de méls.

1. 1’a1gorithme étudie les concepts nouvellement entrés dans 1’ environnement d’observation,

— soit par 1’action des observateurs,
— soit par 1’action de 1’uti1isateur (1orsqu’il produit une phrase),
— soit par 1’action de 1’app1ication.

2. En priorité, on tente de satisfaire les demandes des observateurs en attente de balises,
grace £1 un algorithme de planiﬁcation, permettant de trouver les chemins possibles dans
le graphe de connexion des observateurs. Cette premiere étape permet de classer les obser-
vateurs $1 activer plus tard, et surtout $1 autoriser1’activation des observateurs uniquement
proactzfs.

3. Ensuite, £1 partir des balises nouvellement arrivées, on Va chercher dans le graphe de
connexion des observateurs re’actzfs et des observateurs proactzfs rendus activables £1
1’étape 2, ceux qui ont une de ces balises dans leur régle d’activation.

4. En exécutant la régle d’activation, on vériﬁe si les observateurs ainsi recensés deviennent
ou non activables.

5. Si leur régle d’activation n’est que partiellement reconnue, alors 1’a1gorithme met en mé-
moire les balises qui manquent pour vériﬁer la régle, et elles sont recherchées en priorité
£1 la prochaine itération.

6. Si la régle est totalement vériﬁée, la procédure de réécriture est déclenchée, provoquant
éventue11ement1’arrivée de nouvelles balises dans 1’environnement.

L’a1gorithme converge vers des interprétations locales, mais ne termine jamais, des interpréta-
tions faites par les observateurs pouvant toujours étre utilisées par la suite.

LJ11 J.V1\}\;l\/1\/ bl 1l1L\/1tI1\/L(l.Ll\}ll \al\/ J.\\/\ibl\/L\/D \J. 1 1L\/1

4 Conclusion

Aﬁn de permettre une plus grande genericite dans la conception des systemes d’ILN, comme
propose par (Allen et al., 2001a), nous avons construit un modele d’interpretation a partir des
theories cognitives des Aﬁordances et de la semantique procedurale. Ce modele, mis en oeuvre
par la construction d’un grand nombre d’entites que nous appelons observateurs, permet selon
nous de prendre en compte de larges aspects de la langue naturelle, gréce a sa conception qui lui
permet d’avoir une granularite variable. Nous pouvons dans le meme formalisme exprimer des
regles syntaxiques que des regles du discours. Plusieurs raisons nous font penser que ce modele
est capable d’atteindre les trois objectifs que nous nous etions ﬁxes 2

- Genericite, car sa granularite variable fait que plusieurs niveaux de la langue peuvent etre
traites en meme temps, et que de plus sa deﬁnition ne restreint pas son utilisation au langage,
puisque tout phenomene observable peut eventuellement etre pris en compte ;

- Extensibilite, car sa conception fortement modulaire permet de raj outer des observateurs pour
traiter tout nouveau cas particulier. Des heterogeneites peuvent toutefois apparaitre lorsque
des observateurs de haut niveau d’abstraction devront etre modiﬁes ;

- Unite, car tous les observateurs sont decrits dans un meme formalisme, supprimant le pro-
bleme de la communication entre modules qui apparait avec les systemes heterogenes.

L’ implementation de ce modele en Obj ective-Caml et Mathematica est en cours, et sera integree
a InterViews. Cela nous permettra de valider son potentiel, de l’ameliorer, ou de le rejetter le
cas echeant. De nombreux travaux vont decouler de sa mise en pratique effective, car si cette
approche s’avere valide, il restera a exprimer dans ce formalisme un grand nombre d’aspects de
1’ILN.

Références

ADRIAENS G. & DEvos M. (1994). The Parallel Expert Parser. In G. ADRIAENS & U. HAHN, Eds.,
Natural Language Processing, p. 350-375. Norwood, New Jersey 2 Ablex Publishing Corporation.

ALLEN J ., BYRON D., DZIKOVSKA M., FERGUSON G., GALESCU L. & STENT A. (2001a). Towards
conversational human-computer interaction. AI Magazine.

ALLEN J ., FERGUSON G. & STENT A. (2001b). An architecture for more realistic conversational
systems. In Proceedings of Intelligent User Interfaces 2001 (IUI-01), p. 1-8, Santa Fe, NM.

ALLEN J ., MILLER B., RINGGER E. & SIKORSKI T. (1996). A Robust System for Natural Spoken
Dialogue. In Proc. 34th Meeting of the Assoc. for Computational Linguistics.

BENNACEF S. K., DEVILLERS L., ROSSET S. & LAMEL L. (1996). Dialog in the RAILTEL
Telephone-Based System. In Proceedings of the International Conference on Speech and Language
Processing, p. 550-553, Philadelphia.

BOITET C. & SELIGMAN M. (1994). The “whiteboar ” Architecture 2 A Way to Integrate Heteroge-
neous Components of NLP Systems. In Proceedings of COLING’94, volume 1.

CARVALHO A., D.S. P., SICHMAN J ., SILVA J ., WAZLAWICK R. & STRUBE DE LIMA V. (1998).
Multi-Agent Systems for Natural Language Processing. In Proceedings of the Second Iberoamerican
Workshop on Distributed Artificial Intelligence and Multi-agent Systems, Toledo, Spain.

GIBSON J . J . (1977). The theory of affordances. In R. SHAW & J . BRANSFORD, Eds., Perceiving,
Acting and Knowing, p. 67-82. New York 2 Wiley.

GIBSON J . J . (1979). The Ecological Approach to Visual Perception. Boston 2 Houghton Mifﬂin.

GODDEAU D., BRILL E., GLASS J ., PAo C., PHILLIPS M., POLIFRONI J ., SENEFF S. & ZUE V.
(1994). GALAXY 2 A Human-Language Interface to On-Line Travel Information. In Proceedings
of the International Conference on Spoken Language Processing, p. 707-710, Yokohama, Japan 2 The
Acoustical Society of Japan.

GERARD S. & SANSONNET J .-P. (2000). A Spatio-Temporal Model for the Representation of Situa-
tions Described in Narrative Texts. In Proc. NLP2000, Patras.

JOHNSON-LAIRD P. (1977). Procedural Semantics. Cognition, (5), 189-214.

LAMEL L., ROSSET S., GAUVIN J ., BENNACEF S. & PROUTS G. (1998). The LIMSI ARISE sys-
tem. In Proceedings of IEEE 4th Workshop on Interactive Voice Technology for Telecommunications
Applications, p. 209-214, Torino, Italy.

NORMAN D. A. (1988). The psychology of everyday things. New York 2 Basic Books.

NORMAN D. A. (1990). The design of everyday things. New York 2 Doubleday.

SABAH G. (1990). CARAMEL 2 A Computational Model of Natural Language Understanding Using a
Parallel Implementation. In Proceedings of the Ninth ECAI, p. 563-565, Stockholm.

SABOURET N. & SANSONNET J .-P. (2001). Automated Answers to Questions about a Running Process.
In Proc. CommonSense 2001, p. 217-227.

SANSONNET J .-P. (1999). Presentation de VDL 0.1. Rapport interne 99-10, LIMSI-CNRS.

SMALL S. (1980). Word Expert Parsing : a Theory of Distributed Word-based Natural Language Un-
derstanding. PhD thesis, University of Maryland.

STEFANINI M.-H. & DEMAZEAU Y. (1995). TALISMAN 2 A Multi-Agent System for Natural Lan-
guage Processing. In J . WAINER & A. CARVALHO, Eds., Lecture Notes in Artificial Intelligence 991,
Springer-Verlag.

WINOGRAD T. (1973). A procedural model of language understanding. In R. SCHANK & K. COLBY,
Eds., Computer Models of Thought and Language, p. 152-186. W. H. Freeman.

WITTGENSTEIN L. (1953). The Philosophical Investigations. New York 2 Macmillan.

WOODS W. (1981). Procedural Semantics as a theory of meaning. In A. J OSHI, B. WEBBER & I. SAG,
Eds., Elements of Discourse Understanding. Cambridge, MA 2 MIT Press.

