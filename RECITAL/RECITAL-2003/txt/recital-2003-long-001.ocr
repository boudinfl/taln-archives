RECITAL 2003, Batz-sur-Mer, 11-14 juin 2003

Analyse syntaxique de l’Arabe: Le systéme MASPAR

Chafik ALOULOU

Faculté des Sciences Economiques et de Gestion de Sfax
Laboratoire de recherche LARIS, B.P. 1088
3018 - Sfax — TUNISIE
Tel. (216) 74 27 87 77, Fax (216) 74 27 9139
chafik.aloulou@fsegs.mu.tn

Mots-clefs

Analyse syntaxique, Robustesse d’analyse, HPSG, systeme multi-agent, AgentBuilder.

Syntactic Analysis, Robust analysis, HPSG, multi-agent system, AgentBuilder,.

Resume

De nombreux systemes de Traitement Automatique des Langues (TAL) utilisent une
architecture sequentielle basee sur la transmission, a la fin de chaque phase d’analyse, des
resultats trouves a la phase d’analyse suivante. Ces types de systemes sequentiels posent
plusieurs problemes (i.e. explosion combinatoire des solutions, lourdeur d’analyse, etc.). Pour
remedier a ces problemes, plusieurs solutions de remplacement ont vu le jour, nous pouvons
citer par exemple, l’utilisation des approches multi-agent que nous avons adopte pour faire
l’analyse syntaxique de textes Arabes, et que nous presentons dans cet article.

1 Introduction

Le traitement automatique de la langue naturelle (TALN) touche plusieurs domaines, telles
que, les applications de correction grammaticale, les applications de communication
homme/machine, les applications de traduction automatique, etc. L’automatisation de l’une de
ces applications necessite en general une etape d’analyse du texte ou document source, qui se
fait a son tours par la decomposition de cette analyse en sous-taches calquees sur les
differents niveaux d’analyse linguistique a savoir l’analyse lexicale, l’analyse morphologique,
l’analyse syntaxique, l’analyse semantique et l’analyse pragmatique. Cette decomposition
permet de se ﬁxer un objectif moins ambitieux, mais il est clair, d’un point de Vue
linguistique, que les taches ne sont pas independantes les unes des autres et qu’a chaque
niveau, les connaissances des autres niveaux sont necessaires (Abeille, 2000). En plus, ces
differents niveaux d’analyse sont couples, en general de maniere sequentielle, ce qui suppose
que les phases d’analyse sont quasi-dependantes.

ChaﬁkAl0ul0u

Les systemes bases sur un couplage sequentiel presentent des inconvenients majeurs pour
l'analyse de la langue Arabe: absence d'interaction entre les niveaux de representation,
absence de distribution du contr6le et des connaissances, systeme difficilement evolutif. La
principale consequence etant une explosion combinatoire qui peut étre resorbee par une
cooperation entre les differentes phases d'analyse ou les differents modules. Cette cooperation
doit permettre de trouver les bonnes analyses syntaxiques d'un morceau de texte tout en
eliminant rapidement les solutions parasites et par la suite aboutir a une analyse robuste
(Warren et Stefanini, 1996).

Dans cet article, nous nous interessons principalement a la phase d’analyse syntaxique, qui
constitue, a notre sens, la base du traitement automatique de tout enonce ecrit en langage
naturel, et nous presentons les limites des methodes sequentielles, dites classiques, de
couplage des niveaux d’analyse linguistique. Nous mettons l’accent sur l’aspect robustesse,
qui constitue une qualite tres recherchee des analyseurs, etant donne que les textes bien
formes sur le plan linguistique sont de plus en plus rares. Nous introduisons ensuite les
systemes multi-agents afin de pouvoir decrire notre systeme d’analyse de la langue Arabe, qui
est deja base sur une approche multi-agent.

2 La robustesse d’analyse

Les textes libres peuvent contenir des erreurs de tout genre (i.e., des fautes d’orthographe, de
grammaire, des omissions, des mots inconnus ou ambigus par rapport au lexique de
l’analyseur). Les analyseurs robustes doivent fournir systematiquement une analyse
syntaxique de chaque phrase contenue dans le texte concerne y compris celles qui sont mal
formulees ou dont la structure n’est pas couverte par la grammaire du systeme (Giguet, 1997),
(Shalen, 2000). En effet, Vu la versatilite des langues, il est impossible d’ecrire une
grammaire complete, capable de traiter toutes les phrases imaginables dans une langue. Pour
cette raison, une strategie d’analyse partielle est souvent adoptee : l’analyseur examine autant
que possible chaque phrase en entree et renvoie une analyse partielle lorsqu’une analyse
complete n’est pas possible.

Plusieurs strategies sont adoptees afin de gerer ces problemes. Il existe des analyseurs non
deterministes qui generent plusieurs analyses par phrase et utilisent ensuite des statistiques ou
des regles de grammaire basees sur des heuristiques afin de selectionner l’analyse la plus
probable parmi les reponses. D’autres analyseurs sont deterministes : ils ne rendent qu’une
seule analyse par phrase meme si plusieurs sont possibles en termes reels. Les grammaires
sont limitees dans ces cas-la et un certain taux d’erreur est accepte d’aVance.

La Vitesse de la reponse est une autre contrainte importante pour les analyseurs car, afin d’étre
utile dans le monde reel, ils doivent retourner une reponse tres rapidement.

La quéte pour un analyseur syntaxique robuste, capable d’analyser des textes libres en
profondeur, a mene au developpement de toute une gamme d’analyseurs syntaxiques ces
demieres annees. Ces analyseurs Varient en termes de strategies (i.e., le deterrninisme contre
le non-determinisme, l’analyse partielle contre l’analyse complete ou approfondie), de base
theorique (i.e., les analyseurs statistiques contre les analyseurs symboliques et les analyseurs
bases sur la grammaire syntagmatique contre ceux bases sur la grammaire de dependances,

Analyse syntaxique de l'arabe.' Le systeme M4SPAR

etc.) (Giguet, 1997). Cependant, alors que chaque analyseur a ses points forts et fonctionne
bien pour certaines taches, aucun d’entre eux n’est capable de faire une analyse complete de
toutes les phrases dans un corpus de texte libre. Les méthodes statistiques, quoique
prometteuses, ne suffisent pas, a elles seules, pour régler toutes les taches du traitement
automatique de la langue. Les grammaires symboliques sont également nécessaires afin
d’obtenir une représentation précise et ﬁable de la sémantique, ce qui est crucial pour
beaucoup de taches de traitement automatique des langues. Récemment, il y a une tendance
croissante a mélanger les approches différentes envers l’analyse syntaxique afin de profiter
des points forts des différents types d’analyseurs.

Pour l’analyse de la langue Arabe, et afin d’aVoir une analyse robuste, nous avons choisi
d’adopter une autre approche d’analyse qui se base, d’une part sur la distribution des
traitementsl et d’autre part, par l’application du formalisme HPSG (Head-Driven Phrase
Structure Grammar, ou Grammaire syntagmatique endocentriquez) qui privilégie une
composante lexicale riche perrnettant de réduire au minimum le nombre de regles syntaxiques
et qui propose des représentations lexicales riches et structurées. Ceci nous permettra de
disposer du maximum d’informations sur les mots composants le texte en cours d’analyse et
par la suite de réduire au maximum le nombre d’ambigu'1'tés qui se génerent au cours de
l’analyse. Nous présentons dans les paragraphes suivants une description de notre systeme
d’analyse ainsi que la méthode adoptée.

3 L’approche multi-agent

Le terme << agent >> est tres répandu en informatique et il est utilisé dans plusieurs contextes.
Plusieurs definitions d’agent existent aujourd’hui. D’apres Ferber (Ferber 1995), “ On appelle
agent une entité physique ou abstraite qui est capable d’agir sur elle—méme et son
environnement, qui dispose d ’une représentation partielle de cet environnement, qui, dans un
univers multi-agent, peut communiquer avec d ’autres agents, et dont le comportement est la
consequence de ses observations, de ses connaissances et des interactions avec les autres
agents ”.

Cependant, les agents peuvent étre décrits au moyen de plusieurs concepts. Les principaux
concepts des agents ‘logiciels’ sont : l’autonomie, la réactivité , l’orienté-but (Goal-Oriented),
la continuité, la communication, la coopération, l’anthropomorphisme, la mobilité,
l’apprentissage, l’adaptabilité et l’auto-déclenchement (self-starting).

En respectant ces concepts, les agents peuvent communiquer entre eux, pour résoudre des
problemes, et forment par conséquent un systeme multi-agent. La communication entre les
différents agents peut se faire par partage d’une zone de données communes dans laquelle les
agents peuvent mettre et/ou trier des conclusions (tableau noir), ou aussi par envoi direct de
messages a l’agent ou bien aux agents concernés. Dans ce type de communication les agents
se connaissent les uns les autres.

1 Plus pre’cise'ment, une approche d’analyse multi-agent.
2 Cette Iraduction de "Head-driven" de’crit également les structures endocenlriques, "headed phrase" en anglais,
c'est-a-dire celles qui possedent une seule téte.

ChaﬁkAl0ul0u

Les domaines d’application des systemes multi-agents sont tres Variés, tels que par exemple
notre domaine d’application qui est le traitement automatique de la langue naturelle Arabe.
Notre choix de l’approche multi-agent se justiﬁe par nos propos de remédier aux problemes
de robustesse d’analyse déja présentés dans le paragraphe précédent, et aussi de résoudre
certains problemes rencontrés dans les systemes classiques d’analyse basés sur des approches
séquentielles. Parmi ces problemes nous pouvons citer :

0 le manque d’interaction entre les niveaux de représentation,
0 le manque de distribution des connaissances et du contr6le,
0 la rigidité de l’architecture,

0 la lourdeur de traitement,

0 la difﬁculté d’éVolution du systeme

Ainsi nous avons proposé dans (Aloulou 2002-A), (Aloulou 2002-B) un systeme d’analyse de
textes Arabes que nous avons baptisé MASPAR (Multi-Agent System for Parsing ARabic).
Dans ce qui suit, nous présentons ce systeme en exposant le role de chaque agent qui le
constitue. Nous présentons ensuite la plateforrne utilisée pour le développement de MASPAR
en justiﬁant le choix de cette plateforme. Nous expliquons, ensuite le modele agent de
MASPAR et nous illustrons son fonctionnement par un exemple d’exécution.

4 Présentation du systéme MASPAR

Notre systeme d’analyse est compose, a l’état actuel, de six agents, a savoir l’agent
‘Segmenteur’, l’agent ‘lexical’, l’agent ‘morphologie’, l’agent ‘syntax’, l’agent ‘anaphore’ et
l’agent ‘ellipse’ (figure 1) (Aloulou 2002-A):

0 l’agent ‘Segmenteur’: cet agent a pour objectif de décomposer le texte brut en
paragraphes et en phrases.

0 l’agent ‘Lexical’ : cet agent propose une multitude de décomposition de mots en un
ensemble de triades affixales (préﬁxe, afﬁxe, suffixe) et de racines (Ben Hamadou
1993). Ensuite, il Vériﬁe l’appartenance au langage de chaque mot, obtenu a partir de
l’agent ‘Segmenteur’ en se basant sur les différentes décompositions obtenues.

0 l’agent ‘Morphologie’ : cet agent a pour objet de déterminer les caractéristiques
morpho-syntaxiques de chaque mot (Belguith 1999). Ainsi, par exemple, le mot
‘Jéé=’3 (a appris) aura les caractéristiques suivantes :

0 Type : Verbe
0 Personne : 36"“
0 Temps : Accompli

3 Vu que nous Iravaillons sur l’Arabe non voyelle', le mot Jé-‘Ia peut élre interpre'te' de la maniere suivante : Type :
Nom, Genre: Masculin, Nombre: singulier,

Analyse syntaxique de l'arabe.' Le systeme M4SPAR

0 l’agent ‘Syntaxe’ : cet agent determine si une phrase (ou une succession de mots)
appartient ou non au langage et respecte donc les regles de grammaire de la langue
Arabe. Dans notre cas nous avons choisi de representer notre grammaire selon 1e
formalisme HPSG (Head-Driven Phrase Structure Grammar) qui s'inspire de
plusieurs theories syntaxiques contemporaines, dont GPSG, la theorie
gouvernement-liage et la grammaire categorielle. HPSG se distingue, notamment,
par un hyper-lexicalisme qui reduit au minimum 1e nombre de regles syntaxiques et
propose des representations lexicales riches et structurees. L’application de HPSG
pour la langue Arabe a necessite une modiﬁcation des schemas standards pour
pouvoir integrer les particularites de la langue Arabe.

0 l’agent ‘Ellipse’ : cet agent a pour but de reconstruire les differents types d'el1ipses.
I1 detecte et reconstruit, suivant les cas, 1'e1lipse du sujet, du Verbe, du complement
ou de la proposition.

0 l’agent ‘Anaphore’ : 1e but de cet agent est de retrouver l'antecedent d'une forme
anaphorique. I1 etablit aussi le lien entre la forme anaphorique et son antecedent.

Entree : Document a analyser

 
 
      
 

Phrase Reconnaissance

Segrnentee exicale des mots
T»


     
    
  
          

Segmenteur Morphologie

Mots etiquetes

Recouvrement

Resolution des anaphores des ellipses

Anaphore

Sortie : Phrase d’entree analysee Message d'inforn1ation
- En cas de succes de l’analyse zpresentation de la structure T. conduisant a la solution
syntaxique de la phrase.
- En cas d’echec de l’analyse : presentation de la structure Message d'inforn1ation
syntaxique des fragments reconnus. """"""""""""""""" "' (Protocole d'affirn1ation)

Figure I .' Architecture générale du systeme M4SPAR

ChaﬁkAl0ul0u

Les differents agents de notre systeme communiquent entre eux par un echange dynamique de
messages. Ces messages varient selon le type de document et le type de la phrase donnee en
entree. Le premier agent qui se lance, suite a la reception d’un document electronique a
analyser, est l’agent de segmentation (‘Segmenteur’). Suite a l’identiﬁcation de la premiere
phrase, et suite a l’identiﬁcation du premier mot de cette phrase, un message est envoye a
l’agent ‘Lexical’. Ce dernier genere toutes les decompositions possibles du mot en racine,
preﬁxe, inﬁxe et sufﬁxe. Ainsi des que l’agent ‘Lexical’ genere une decomposition, il
l’envoie a l’agent ‘Morphologie’. Cette tache se repete au fur et a mesure qu’une
decomposition est generee et pour chaque mot de la phrase4.

L’agent ‘Morphologie’ utilise ses competences pour determiner les caracteristiques
morphologiques du mot recu. Signalons qu’une decomposition donnee peut generer plus
qu’une seule liste de caracteristiques morphologiques possibles.

L’agent ‘Syntax’ sera lance des la reception des caracteristiques morphologiques du premier
mot. A ce moment, cet agent commence par generer la matrice attribut/valeur relative au mot
obtenu, et selectionne par la suite, la liste des regles de la grammaire validant ce premier mot
trouve. Cette liste de regles, qui est deja classee par ordre d’apparition des regles dans le
corpus, sera rafﬁnee au fur et a mesure de l’evolution de l’analyse. L’agent ‘Syntax’ peut
orienter l’agent ‘Morphologie’ dans le choix des caracteristiques morphologiques des mots
suivants. Ceci se fera par envoie de messages d’inforrnation presentant les caracteristiques
morphologiques des mots attendus. Ainsi, les solutions parasites seront eliminees dans la
progression de l’analyse. Dans le cas ou plusieurs familles de regles sont applicables, et aﬁn
d'eviter des retours en arriere dans l'analyse, nous appliquons un nombre de clonages de
l'agent ‘Syntax’ en fonction des regles partiellement applicables. L'instance clonee non
validee au cours de l'analyse sera detruite.

Toutefois, et dans le cas de blocage de l’analyse, l’agent ‘Syntax’ prendra l’initiative de
debloquer la situation. Selon les caracteristiques morphologiques des mots deja traites et
selon le groupe de regles de la grammaire deja selectionnees, l’agent ‘Syntax’ peut, ou bien
demander l’aide de l’agent Ellipse, ou celui de l’agent Anaphore qui vont utiliser leurs
competences pour recouvrir les structures elliptiques ou anaphoriques, ou peut meme
demander a l’agent ‘Morphologie’ de proposer d’autres caracteristiques morphologiques qui a
son tour peut demander a l’agent decoupage d’autres alternatives de decomposition (c’est le
cas par exemple de groupement de mots). L’analyse s’acheve par la reconnaissance d’une
structure syntaxique valide, ou bien se limite a la presentation des fragments syntaxiques
reconnus.

L’agent de segmentation (‘Segmenteur’), qui se base en grande partie sur les indicateurs de
surfaces pour identifier les phrases et les paragraphes, necessite dans certains cas de connaitre
le type de quelques mots du texte ou meme leurs enchainements. Ceci necessite d’anticiper
dans l’analyse et de declencher le phenomene d’analyse pour agir localement sur une partie
du texte. Cette liste d’alternatives ou de modeles de communication entre les differents agents
n’est pas exhaustive, et d’autres cas sont envisageables selon la complexite des textes traites
et les ambigu'1'tes qui s’y trouvent.

4 Ceci conceme uniquement les mots qui vont subir une decomposition, sont exclus les particules, tel que, les
pronoms personnels, etc.

Analyse syntaxique de l'arabe.' Le systéme M4SPAR

Cette suite de modeles de communications a débouché sur la conception détaillée de notre
systeme. Cette conception respecte au niveau des speciﬁcations, les différents modeles
donnés par AUML (Agent Unified Modeling Language) qui représente une extension de la
méthode UML, elle est employée principalement pour la modélisation des interactions multi-
agent, elle introduit principalement deux nouveaux concepts au niveau de la représentation
des protocoles et au niveau de la représentation des interactions entre agents (Odell, 2000).

5 Présentation de la plateforme
de développement

Aﬁn de choisir une plate-forme de développement de notre systeme, nous avons mené une
étude comparative de quelques plates-formes disponibles. Notre étude s’est portée
principalement sur les trois plates-formes suivantes :

0 Dima : Développement et Implémentation de Systemes Multi-Agents
http://www-poleia.lip6.fr/~guessoum/dima.html

0 EMAC : Environnement Multi-Agent a mémoire Collective

0 AgentBuilder

http ://www.agentbuilder.com/

Le tableau ci-dessous résume les différents criteres d’évaluation que nous avons pris en
considération pour comparer les trois plates-formes, ainsi que les valeurs attribuées pour

chacun de ces criteres.

Criteres DIMA EMAC AgentBuilder
Architecture Centralisée Décentralisée Décentralisée
Type d’agent Hybrides Réactifs Cognitifs
Compétences Réduites Etendues Tres étendues

Langage de Non Oui Oui
communication

Contréle Centralisé Distribué Distribué

Niveau de coopération Coopération faible Coopération Coopération
moyenne complete
Langage de Java C++ Java
programmation
Systeme d’exploitation Win-NT, Win95 Unix Win-NT, Win95,
Unix
Classement et Par modification du Par copie
Réutilisabimé importation ou code source
modification du code
source

ChaﬁkAl0ul0u

Suite a cette étude comparative, nous avons remarqué que la plate-forme a agent hybride
présente un cycle de conception et d’implémentation non complet, quant a la plate-forme
EMAC, elle présente un cycle de conception et d’implémentation acceptable alors que la
plate-forme AgentBuilder présente un cycle de conception et d’implémentation relativement
complet. Notre choix s’est ﬁxé donc sur la plate-forme AgentBuider, que nous essayons de
décrire d’aVantage.

AgentBuilder est une suite d’outils intégrés permettant de construire des agents intelligents,
développée par Reticular Systems Inc.

L’étape d’analyse consiste en la specification en OMT (Object Modelling Technique) des
objets du domaine et des opérations qu’ils peuvent effectuer, puis en la production d’une
ontologie du domaine. Des outils graphiques sont fournis pour effectuer ces taches.

L’étape de conception avec AgentBuilder consiste en la décomposition du probleme en
fonctionnalités que les agents doivent avoir. Puis les agents sont identiﬁes, leurs roles et leurs
caractéristiques sont définis, puis les protocoles d’interactions qu’ils utiliseront sont spécifiés.

L’étape de développement consiste en la deﬁnition du comportement des agents, par
l’intermédiaire de leurs regles de comportement, croyances initiales, intentions et capacités.

La figure 2 représente le modele de protocole agent de notre systeme de traitement
automatique de la langue naturelle

Détection fin
Initial phrase

  
     
  

Demande mot
s 'vant

  
    
  

Demande
écompo sition

  
   
  
  
   
  
 

Mot
décom posé

morphologique

Demande
caractéristiques
morphologiques

Mot rafﬁné

Rafﬁnement
reconnaissance

Vérification

Figure 2 .' Modéle de protocole du systéme M4SPAR

Les agents engendrés au cours de la phase précédente sont exécutés par un Run-Time Agent
Engine, qui interprete le code des agents. Un outil de déboguage est également fourni,
permettant le suivi des états mentaux des agents et de leurs interactions. A cause du modele
purement BDI choisi, seuls des systemes multi-agents composés d’un petit nombre d’agents
intelligents sont envisageables. La complexité du déploiement est réduite par la nature
conviviale des outils de déploiement.

 

Analyse syntaxique de l'arabe.' Le systéme M4SPAR

L’exécution de notre systeme par AgentBuider nous donne un ensemble de fenétres dont
chacune représente un agent. Comme ca nous pouvons suivre l’état d’éVolution de l’analyse.
Nous donnons a titre d’exemple dans la ﬁgure suivante (ﬁgure 3), l’état initial et l’état ﬁnal
de l’analyse de la phrase suivante :

.ol=:5‘ J.‘ J.=L€-J‘ ¢+J

(est revenu l’émig'rant au le patrie.)5

Ainsi, la premiere fenétre représente tous les agents de notre systeme qui sont a l’état inactif,
dans l’attente de la ﬁn de la saisie de la phrase a analyser. La deuxieme fenétre représente
notre systeme apres la ﬁn de l’analyse. Nous remarquons que nous avons obtenu l’arbre
syntaxique de la phrase analysée.

_|— J Li E%AnentNv-vhvlvniuue
nmchm lies rénles ullllsées | 

[ﬁgment 5 Qt: nl Muwhulugique
.  :»'».;»..-

PD1 PD2 PD3 PD4 PD5 PDE PD? umhre game We lemma P08 Mm
;Gv we we we \/ME we
> ov lGN was was W12 was W12

umbvi Him? we temps FOS
,, )9, 4-(4(-ée( M,

“,9. yr.‘

SBISIE d’un texte

0595‘ .4‘ gale-A5‘ <1-=4

t sans déterminant : '
t sans déterminant : ' .
t sans déterminant : '
tsans déterminant : ' '

Figure 3 .' Exemple d ’exécuti0n du systéme M4SPAR

6 Conclusion

Dans cet article, nous avons présenté le systeme MASPAR d’analyse de textes Arabes non
Voyellés permettant de reconnaitre les structures syntaxiques. Nous avons commencé par
déﬁnir l’analyse syntaxique et son utilité dans les systemes de TALN, ensuite nous avons
déﬁni la robustesse d’analyse qui est une qualité exigée au niveau de notre systeme d’analyse.
Avant de déﬁnir l’architecture de notre systeme, nous avons décrit le modele de
communication qui peut se dérouler lors de l’analyse d’un texte. Signalons que ce systeme a
été implémenté en utilisant la plate-forme AgentBuilder.

La premiere Version de ce systeme s’est limitée au développement de l’agent ‘Lexical’,
‘Morphologie’ et ‘Syntax’, et accepte en entrée une phrase. Les résultats obtenus sont
encourageants. Nous sommes actuellement en train d'implémenter une deuxieme Version de
ce systeme en intégrer les agents ‘Ségmenteur’, ‘Anaphore’ et ‘Ellipse’. Ainsi notre systeme
sera capable d’analyser un texte électronique composé de plusieurs phrases et paragraphes.

5 La traduction de la phrase est faite mot a mot.

 

ChaﬁkAloulou

7 Références

Abeillé A., Blache P., (2000) “Grammaires et anabzseurs syntaxiques”, dans J.-M. Pierrel
édition Ingénierie des Langues, Paris, Hermes.

Aloulou C., Belguith Hadrich L. et Ben Hamadou A. (2002-A) MASPAR: “Multi-agent
System for Parsing Arabic”, IEEE international conference on systems, man and cybemetics,
du 6 au 9 octobre 2002 a Hammamet - Tunisie.

Aloulou C., Belguith Hadrich L. et Ben Hamadou A. (2002-B), “Utilisation des grammaires
HPSG pour l ’anab2se de l’Arabe”, JEI’2002, 2eme journée des jeunes chercheurs en
électronique et Inforrnatique, 26 — 28 Mars 2002, Hammamet, Tunisie.

Belguith L. (1999), “Traitement des erreurs d ’accord de l’arabe basé sur une analyse
syntagmatique étendue pour la vériﬁcation et une analyse multicrite‘re pour la correction”,
These de doctorat en Informatique, Faculté des Sciences de Tunis, Février 1999.

Ben Hamadou A. (1993), “Veriﬁcation et correction automatique par analyse aﬂixale des
textes écrits en langage naturel .' le cas de l ’arabe non voyellé”, These d’Etat en
Informatique, Faculté des Sciences de Tunis, Mars 1993.

Delisle S., Boufaden N, Moulin B. (1998), “L ’anab/se syntaxique robuste de dialogues
transcrits .' de la parole aux actes en passant par l ’écrit”, Actes des XXIIemes Journées
d’Etudes sur la Parole (JEP 98), Martigny (Suisse), 15-19juin’98, 359-362, 1998.

Ferber J.,(1995), “Les syste‘mes multi-agents vers une intelligence collective”. InterEdition,
Paris, 1995.

Giguet E., Vergne J. (1997), “Syntactic analysis of unrestricted French”, Actes de la
conférence “Intemational Conference on Recent Advances in Natural Languages Processing”
(RANLP'97), pages 276-281, Tzigov Chark, Bulgaria, 11-13Septembre 1997.

Jacobs P. (1990), “To parse or not to parse: Relation-driven text skimming”, Actes de 13eme
conference COLING, Volume 2, pp 194-198, Helsinki , 1990.

Odell, J., Van Dyke Parunak, H., Bauer, B. (2000): “Extending (MIL for Agents”. Workshop
AOIS dans la conférence A1 2000. Austin, Texas, Juillet 2000.

Shaalan K., Farouk A et Rafea A. (2000), “Towards An Arabic Parser For Modern Scientiﬁc
Text”, Actes de la conference “International Conference on Artificial and Computational
Intelligence for Decision, Control and Automation in Engineering and Industrial
Applications” : ACIDCA ’2000, pp 228 — 235, Monastir, Tunisie,.Mars 2000.

Warren K., Stefanini  (1996), “Modélisation et validation de protocoles de
communication dans l’architecture TALISAMN’, Actes de la conference “Natural Language
Processing and Industrial Applications” : NLP+IA'96, pp 270 — 276, Moncton, Canada,.Juin
1996.

