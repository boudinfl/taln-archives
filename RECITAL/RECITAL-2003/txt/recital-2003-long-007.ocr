RECITAL 2003, Batz—sur—Mer, 11—14juz'n 2003

Vers une Approche Fonctionnelle de la
Résolution de la Référence dans le
Dialogue Finalisé

Guillaume Pitel

LIMSI — CNRS
Bat. 508 BP 133 F-91403 Orsay CEDEX
Guillaume.Pitel@limsi.fr — Soutenance prévue en 2004

Keywords — Mots Clefs

Résolution de la Référence Intrinseque, Approche Fonctionnelle, Dialogue Homme Machine
Reference Resolution, Intrinsic Reference, Functional Approach, Human Computer Dialogue

Résumé — Abstract

Dans cet article, nous montrons l’insuff1sance du pouvoir d’expression des approches par
prédicats pour la résolution de la référence en extension dans un cadre générique de dialogue
homme-machine. Cette insuffisance oblige pour l’instant les concepteurs de tels systemes de
dialogue a concevoir des heuristiques ad hoc impossibles a intégrer dans un cadre de
description unifié. Nous montrons que la résolution des expressions référentielles nécessite la
prise en compte du contexte meme pour les termes portant sur des caractéristiques
intrinseques aux éléments. Nous proposons alors un formalisme pour représenter la
sémantique des extracteurs référentiels intrinséques. Ce formalisme repose sur trois
fonctions, la premiere permet de calculer le rapport de similarité de deux éléments en fonction
d’une certaine dimension et dans un certain contexte, les deux autres permettent de
partitionner un domaine de référence trié par l’utilisation de la premiere fonction.

In this paper, we show the lack of expressiveness of predicative approaches for extensional
reference resolution. This drawback forces dialogue systems designers to develop specific
heuristics for solving some reference cases they can’t integrate in a uniﬁed representation
framework. As we focus on extensional reference resolution in a generic framework for
human computer dialogue system, we point the fact that the process of resolving referential
expressions needs to take context into account even for expressions involving intrinsic
characteristics of elements. Thus we propose a representation model for the semantic of
intrinsic referential extractors. This model is built on three functions, the first one serves to
calculate the similarity ratio between two elements, the two others serve to partition a
reference domain which is previously sorted by the first function.

G. Pitel

1 Introduction

La genericite est un objectif crucial dans de dialogue homme-machine, et ce pour deux
raisons, l’une quantitative : le coﬁt de developpement et d’adaptation des systemes de
dialogue ; l’autre qualitative : la coherence theorique du cadre dans lequel sont construit ces
systemes de dialogue. Nous etudions le cas extensionnel des expressions référentielles, deﬁni
par (Byron et Allen, 2002) Come la recherche des éléments de l’applz'catz'0n médiéel
designes dans un enonce2. Ce traitement a longtemps ete soit construit comme un filtrage
successif par predicats, soit construit autour d’heuristiques speciﬁques (Winograd, 1973). Ces
deux approches ne permettent pas de deﬁnir un cadre generique pour la resolution de la
reference dans le cadre du dialogue ﬁnalise. Dans cet article, nous presentons un modele
permettant de representer les extracteurs référentiels de maniere fme et qui s’appuie sur le
modele de resolution de la reference de (Salmon-Alt, 2001). Dans la terrninologie de cette
auteur, les terrnes composant une expression referentielle et que nous designons par
<< extracteurs référentiels », sont representes par des critéres de dzﬂérentiation, utilises dans le
proces de selection d’element3, et l’ensemble des entites a partir duquel l’operation de
selection s’opere est represente par des domames de référence. Nous adoptons sur les
extracteurs referentiels un point de vue procedural, en les envisageant en tant qu’operateurs
actifs de selection d’elements dans un ensemble, plutot que comme des formules de logique
utilisees pour selectionner les elements repondant a certaines conditions de verite. L’idee
directrice est d’utiliser des fonctions de differentiation a la place des criteres, nous montrons
en effet dans la section 2 que representer l’action des extracteurs referentiels par des predicats
ne perrnet pas de prendre en compte leur dependance vis-a-vis du contexte. Nous proposons
alors dans la section 3 de considerer l’acte d’extraction comme une differentiation dependante
du contexte, effectuee par ces fonctions. Dans la conclusion, section 4, nous presentons les
problemes que nous n’avons pas pu traiter jusqu’a maintenant, et proposons quelques pistes
de recherche pour les aborder.

2 Etude d’extracteurs referentiels intrinséques
Dans une expression referentielle qui designe un ou des objets du monde, nous appelons

extracteurs référentiels les terrnes jouant un role dans la construction de l’extension de
l’expression par extraction d’elements dans la representation du monde. Le probleme de la

1 Nous designons sous le terme «application médiée >> le programme inforrnatique avec lequel on souhaite

que l’utilisateur puisse interagir par l’interrnediaire de la langue.

Le traitement extensionnel s’oppose au traitement anaphorique, consistant a chercher un antecedent
linguistique dans les enonces passes, et au traitement logique consistant a construire une representation
logique d’une expression referentielle sans prendre en compte l’etat de l’application mediee.

Les criteres de differentiation sont classiquement utilises par les modules de traitement de la reference pour
representer la semanlique des expressions referentielles. Chaque element de l’expression est transforrne en
predicat (par exemple « grand carre >> —) grand(x) ET carré(x)), et utilise ensuite pour ﬁltrer successivement les
entites accessibles a l’interlocuteur aﬁn de produire le ou les elements compatibles avec l’expression
referentielle.

Approche F onctiormelle de la Résolution de la Référence dans le Dialogue F inalisé

représentation des objets4 de l’applz'catz'0n médiée et de leur lien avec les expressions
référentielles qui les désignent n’a pas été beaucoup exploré. La représentation sur laquelle se
fait la recherche référentielle est généralement une base de connaissances composée d’objets
adéquats pour l’application ou meme représentée en logique du premier ordre. On constate
ceci meme dans les travaux récents, comme (Salmon-Alt, 2001 :149), (Byron et Allen, 2002)
ou (Dale et Reiter, 1995). Typiquement, (Byron et Allen, 2002) expriment les champs de
restriction par des propositions de la forme (color x RED). (Dale et Reiter, 1995) distinguent
trois types de composantes pour caractériser un élément : les propriétés intrinseques (p. ex.
taille, couleur), les propriétés relationnelles (p. ex. position spatiale), les propriétés
typologiques des objets (p. ex. triangle, carré). Nous étudierons dans cet article les extracteurs
référentiels qui portent sur les caractéristiques intrinseques. Les caractéristiques relationnelles
pures, comme les prépositions spatiales (Dzikovska, 2000) ne seront pas étudiées ici.

Les extracteurs intrinseques s’appuient sur les caractéristiques intrinseques, qui sont des
caracteres stables (toujours présents) et indépendants du contexte. Nous allons nous attacher
dans cette section a démontrer que méme si ces caracteres sont effectivement indépendants du
contexte, il n’en reste pas moins que l’opération d’extraction du référent, effectuée dans les
expressions qui font reference a ces caracteres est, elle dépendante du contexte. Nous
parlerons du contexte opératoire pour parler de l’état de l’application avec laquelle
l’utilisateur dialogue ; du contexte ontologique pour parler de l’état des relations qui relient
les différentes catégories d’entités entre elles ainsi que les connaissances typiques qui y sont
liées ; du contexte dialogique lorsqu’il s’agira de faire reference a l’état de l’interaction entre
l’utilisateur et l’application. Nous étudierons tout d’abord une caractéristique intrinseque, la
taille, dont il est communément admis que l’utilisation dans les expressions référentielles la
transforme en une caractéristique relationnelle, et donc dépendante du contexte opératoire.
Nous aborderons ensuite le cas de la couleur, généralement considérée comme intrinseque et
indépendante du contexte mais dont nous montrerons qu’elle peut aussi étre dépendante du
contexte.

2.1 La taille

Salmon-Alt étudie les variantes de la reference a partir d’un corpus de dialogues (relatant les
échanges entre un utilisateur et un opérateur) destinés a faire réaliser un dessin complexe a
l’opérateur a partir d’un ensemble d’obj ets décrits dans la Figure 1. Ces dialogues sont tirés
d’un corpus construit a partir d’une expérimentation décrite dans (Ozkan, 1994). Dans cette
situation, l’approche prédicative est tout a fait efﬁcace, puisque toute entité X de l’application
est représentée par un schéma de la forme suivante :

EntitéType X = (taille, couleur) 01‘1

0 EntitéType e {BARRE, TRIANGLE, ROND, CARRE}
0 taille e {GRAND, PETIT},
0 couleur e {BLANC, NOIR, ROUGE, VERT, BLEU}.

4 Nous distinguerons d’une part les representations inforrnatiques de l’application médiée, que nous

appellerons objets, construits par un type et des attributs ; et d’autre part, les entités auxquelles l’utilisateur
fait référence, que nous désignons par le terrne éléments, ayant des catégories et des caractéristiques.

G. Pitel

 

Figure 2 I Probléme avec trois tailles (petit, moyen,
Figure 1 : Palette des formes disponiblesi corpus Ozkan grand) : Ie grand carré est-il en fait Ie carré moyen ?

Pourtant, il sufﬁt d’ajouter une taille possible (MOYEN) pour que cette approche soit mise en
defaut pour resoudre l’expression << le grand carré » dans le contexte presente Figure 2. Le
carre situe a gauche est en effet un grand carre par rapport a l’ensemble des carres de la
ﬁgure, mais son attribut taille ayant la valeur MOYEN, il ne peut pas etre recrute comme
candidat a l’expression referentielle << grand carre ». Comme le releve (Dale et Reiter, 1995)
la taille deﬁnie dans {PETIT, MOYEN, GRAND} ne peut etre liee aux adjectifs <<petit»,
<< moyen » et << grand», car ces termes designent aussi la relation entre les tailles, que nous
appelons grandeur pour la différencier. La taille contient uniquement les dimensions
objectives des objets. Ceci nous amene a conclure que la semantique dénotationnelle des
adjectifs n’est pas, meme dans un cas aussi simple que grand ou petit, reductible a une
approche par predicats de la logique du premier ordre.

2.2 La couleur

Nous considerons donc que la grandeur, contrairement a la taille, est une caracteristique
dependante du contexte opératoire. Le fait qu’il soit aise de se meprendre sur ce point
montre la difﬁculte qu’il peut y avoir a determiner exactement la categorie (typologique,
intrinseque ou relationnel) des caracteres deﬁnissant les elements.

Bleu Turquoise Violet
Cas 14' BT35 Cas 2

Figure 3 I Categorisation des couleurs en fonction de |'objet et du contexle5

Nous illustrons Figure 3 qu’il existe la meme difﬁculte pour les adj ectifs de couleur. En effet,
dans le cas 1, << la feuille bleue » designe la feuille de gauche (sur la version couleur), puis
lorsque l’on demande a des sujets6 de designer dans le cas 2 les carres qui ne sont pas de
couleur bleu, il choisissent les trois carres du bas. Si l’on demande la couleur de la voiture
dans le cas 3, la plupart des sujets repondent << noir », meme s’ils repondent aussi pour la

Le sujet du present article portant en partie sur la couleur, nous avons dﬁ en utiliser dans nos schemas. Une
version electronique est disponible a 2 http://www.sciences.univ-nantes.fr/irin/taln2003.

Nous avons procede a une experimentation avec une douzaine de sujets. Le protocole de test consiste en une
feuille o1‘1 est imprimee la ﬁgure avec les carres colores et des questions sur les objets.

Approche F onctiormelle de la Résolution de la Référence dans le Dialogue F inalisé

plupart par l’aff1rmative si on leur demande si la voiture est bleue. Pourtant, la feuille, le carré
en bas a gauche et la voiture ont tous la meme couleur. Une feuille, qui est typiquement dans
les couleurs vertes, jaunes, rouges ou marrons, peut donc étre catégorisée comme bleue des
l’instant ou sa couleur s’éloigne de ces couleurs typiques pour aller vers le bleu, tandis qu’une
ﬁgure géométrique de la meme couleur, qui en tant que ﬁgure a une couleur typique neutre,
ne pourra pas étre catégorisée comme bleue. C’est ce que nous appelons la dépendance au
contexte ontologique. D’autre part, si un obj et est percu entouré par d’autres obj ets, la couleur
des ces obj ets déterminera en partie la maniere dont sa propre couleur sera catégorisée par un
observateur humain. C’est ce que nous appelons la dépendance au contexte opératoire.

2.3 Importance du contexte pour certains attributs intrinséques

D’apres ces observations, le role du contexte ne peut pas étre négligé si l’on s’intéresse au
calcul référentiel des adjectifs de couleur. Cette conclusion rejoint celle de (Pateras et al.,
1995) portant sur des situations de dialogue ou les caractéristiques utilisées dans la référence
ne peuvent pas étre mises en relation directe avec un schéma de base de donnée, ou plus
généralement, avec une représentation prédicative des connaissances. La solution proposée
pour choisir le référent correctement consiste a utiliser des fonctions ﬂoues d’appartenance a
un ensemble. Cependant, ces fonctions sont déﬁnies par rapport a une situation spéciﬁque,
(voir Figure 4) et les auteurs ne proposent pas de moyen pour prendre en compte le contexte.
Il en est de meme dans (Lamrnens & Shapiro, 1993) ou les auteurs construisent par
apprentissage des fonctions de catégorisations de la couleur, fonctions qui sont au ﬁnal
indépendantes du contexte. Ces recherches montrent cependant clairement qu’une
représentation sémantique des adjectifs nécessite un formalisme permettant d’exprimer des
fonctions complexes, et permettant d’en déﬁnir précisément l’usage.

1 12‘ « lé er» « lourd »
0 -  kg

0 5 10 15 20 25

Figure 4 2 Catégorisation du poids par une fonction ﬂoue d'aprés (Pateras, 1995)

Notre proposition est que la représentation sémantique des extracteurs référentiels
intrinseques devrait pouvoir supporter les cas d’utilisation suivants (ici avec l’exemple de la
couleur bleue) : Choisir le bon référent en fonction du contexte. (<< Supprime la feuille bleue »
dans les Cas 1 et 2, Figure 3) ; Pouvoir dire si, dans un contexte donné, des objets peuvent
étre considérés comme bleus ou non (<< Montre-moi les objets qui ne sont pas bleus » dans le
Cas 2, Figure 3) ; Pouvoir étre utilisé pour determiner si X est plus ou moins bleu que Y (nous
considérons que cette capacité perrnet aussi de traiter les superlatifs).

3 Modéle de différentiation fonctionnelle

Nous proposons de représenter les extracteurs référentiels, c’est-a-dire les termes de la langue
qui servent a designer un élément parmi d’autres, par des structures de données contenant
des fonctions. Nous nous positionnons dans le cadre d’une application de dialogue ou
l’utilisateur peut parler d’éléments comme par exemple ceux visibles a la Figure 5. Nous

G. Pitel

considerons pour l’instant que les elements de l’application sous-jacente sont des objets (au
sens algorithmique du terrne) deﬁnis par leur type (ici tous sont de type carre’) et par deux
attributs: la couleur (un triplet de valeurs comprises dans [O,l]) et la taille (une valeur
comprise dans ]O,+oo[ ).

3.1 Modéle d’extraction préliminaire

Nous proposons comme base preliminaire de reﬂexion de def1nir les extracteurs referentiels
par une fonction de calcul de similarite qui suit. Nous discuterons ensuite cette premiere
proposition et proposerons d’y adjoindre un mecanisme supplementaire pour traiter les cas
problematiques.

_fSimil(entite' a, entité b) —)[-1, 1] U J_.

La fonction fSz'mz'l doit permettre de trier un ensemble d’elements en fonction d’une
caracteristique (ici, bleu ou grand). Pour l’extracteur bleu, elle donne le rapport entre les
couleurs de deux obj ets proj etees selon la dimension bleue7. Si a est plus bleu que b, la valeur
retoumee est positive, negative dans le cas contraire, si l’une des deux n’a pas de position
dans la dimension bleu, la valeur retoumee est J_. A partir de ces fonctions, il est alors
possible de trier les entites du domaine de reference, et de separer les entites a exclure des
autres. Nous verrons par la suite que cette hypothese ne permet pas de traiter certains cas de
reference.

 

1.
2.
1 I 3.
4. magenta
I I . 
I 6. vertfonce
E 7. orange
I 8. kaki

Figure 5 2 Situation detest pour la representation fonctionnelle des couleurs et des tailles.

A partir de la situation experimentale exposee Figure 5, nous illustrons l’utilisation des
fonctions de differentiation dans le cadre de la resolution de l’expression referentielle << grand
carre’ bleu ». Nous prenons comme point de depart pour le domaine de reference l’ensemble
des carres de la scene (ici tous les objets). Nous appliquons la fonction de differentiation de
l’extracteur referentiel << grand». On suppose ici que la grandeur est une relation transitive,
telle que sz'mz'lG(x,z) : sz'mz'lG(x, y) * sz'mz'l(;(y,z). On peut alors produire une liste triee d’entites
(les numeros dans les cases sont les numeros des objets), etape 1 de la Figure 6, et annoter le
lien entre deux cases par un rapport de similarite (ici case gauche par rapport a case droite)
qui a ete calcule entre elles. Puis nous appliquons, independamrnent de l’etape 1, la fonction
de differentiation de l’extracteur referentiel << bleu ». En theorie, si la couleur est representee

A ne pas confondre avec la composante bleue, dans le cas d’une decomposition en rouge, vert et bleu de la
couleur. La dimension bleue est avant tout une dimension cognitive, qui doit étre ﬁguree a l’aide de
fonctions mathematiques adequates.

Approche F onctiormelle de la Résolution de la Référence dans le Dialogue F inalisé

par un triplet de valeurs dans [O,l], la fonction de différentiation appliquée a toutes les entités
doit produire une matrice de nxn triplets. En pratique nous allons accepter ici une
simpliﬁcation consistant a calculer la distance entre le point bleu typique (qu’on suppose
déﬁni par défaut hors contexte, avant d’éventuellement le modifier) et le point de la couleur
de l’entité. Dans ce cas, la distance entre deux couleurs sur la dimension bleue est simplement
la différence des distances de ces deux couleurs par rapport a la couleur bleue typique. On
peut alors, comme dans le cas de la grandeur, utiliser un algorithme de tri pour produire une
liste triée d’entités, c’est l’étape 2 de la Figure 6. Il faut ensuite combiner les deux résultats.
La fonction de combinaison de ces deux tris est la suivante : sz'mz'l(x, y) : oc.sz'milB;e,,e(x, y) X
ﬂsimilgm,,d(x,y) ou 0: et ,6 sont des coefficients en rapport avec l’importance relative des
caracteres couleur et taille qui devraient étre déduits a partir d’une expérimentation. Pour or =
,8 = 1, on obtient l’étape 3 de la Figure 6. Le résultat du calcul << grand carré bleu » appliqué a
la situation Figure 5 donne donc le carré 1 come référent préféré. La meme méthode
appliquée a l’expression << petit carré bleu » produit comme référent préféré le carré n°5. Dans
les deux cas, cette méthode apporte un résultat cohérent avec ce a quoi on s’attend.

 

09 075 06 L L J. J.

’ ’ ’ n n Etavez-«hm»

 
 

Figure 6 2 Etapes de |'exlraction de « grand carré bleu »

3.2 Modéle d’extraction étendu

3.2. 1 Partitionnement

Il est nécessaire d’apporter des améliorations a la proposition préliminaire tout d’abord pour
assurer la gestion de réponses négatives, autrement dit comment répondre : << Il n’y a pas de
grand carré bleu », car, par exemple, la fonction de similarité de la grandeur ne perrnet pas
l’exclusion de candidats (alors que la validation expérimentale sur l’énoncé << le grand carré
orange» dans la situation décrite Figure 5 donne une réponse négative). D’autre part, le
modele de calcul référentiel doit étre utilisable pour la sélection de groupes d’éléments,
comme pour << les carrés bleus ». De meme la modele de calcul préliminaire ne perrnet pas
d’expliquer le phénomene observe autour du cas 2 de la Figure 3 (dépendance contextuelle
opératoire), qui montre que des couleurs acceptables pour un adjectif peuvent étre exclues
dans certaines situations et acceptées dans d’autres. La question est de savoir si le référent de
l’expression << les carrés bleus » dans cette situation est l’ensemble des carrés {l,3,4,5},
{l,3,4} ou {l,3} ou encore un autre ? L’expérience nous montre que les sujets donnent
majoritairement comme réponse l’ensemble {l,3,5}8. Ceci nous amene a conclure qu’il est
nécessaire d’adjoindre un mécanisme de partitionnement similaire au mécanisme proposé

8 Dans le méme ordre d’idées, il est a noter que la validation expérimentale sur « les petits carrés >> produit la

réponse {6, 7, 8}, alors que « le petit carré bleu >> produit bien la réponse {5}, qui n’est pas dans l’ensemble
{6,7,8} bien que dans les deux cas, l’adjectif « petit >> a été utilisé.

G. Pitel

par Salmon-Alt, mais etendu pour obtenir des partitions temaires. Pour cela, nous adj oignons
a la fonction de similarite deux autres fonctions permettant de produire une partition temaire
sur le domaine de reference, decoupee en exclus, possibles et typiques.

Concemant la dependance au contexte operatoire, nous supposons qu’il n’inﬂuence pas la
fonction de similarite. En revanche, la selection des elements exclus et typiques est, elle,
dependante de ce contexte, comme le montrent les phenomenes autour du cas 2 Figure 5. Les
fonctions de partitionnement sont pour cette raison parametrees par un domaine de reference,
contenant tous les candidats potentiels a la reference. La dependance des fonctions de
partitionnement au contexte operatoire implique que les etapes d’extraction doivent etre
ordonnees. En effet, une etape a besoin du domaine de reference calcule par l’etape
precedente pour partitionner correctement. Il est a noter que la phase de partitionnement
negative (entites exclues) est obligatoire dans le processus, alors que la phase de
partitionnement positive (entites typiques) n’est necessaire que lorsque l’expression
referentielle designe un ensemble d’elements.

Pour justifier l’ordonnancement des etapes d’extraction, nous nous appuyons sur les
observations emises dans (Dale et Reiter, 1995) a propos de l’importance relative a attribuer
aux caracteres des obj ets pour la generation d’expressions referentielles. Ces observations ont
une forte correlation avec les maximes de (Grice, 1975), et suivent globalement le principe
d’economie maximum. Les auteurs proposent de prendre en compte les caracteres dans
l’ordre suivant: type > propriete intrinseque > propriete relationnelle. A partir de cette
proposition, nous exprimons une regle plus generale pour l’ordonnancement par la
proposition suivante: Plus le contexte opératoire est signifzcatif dans la sémantique d’un
extracteur référentiel, plus tard cet extracteur référentiel doit étre mis en oeuvre dans la
chaine de résolution. La perception des couleurs etant peu modiﬁee9 par le contexte
operatoire, contrairement a la perception de la grandeur, l’ordre d’interpretation est donc bien
couleur puis grandeur.

3.2.2 Représentation des extracteurs re_'fe'rentiels

D’apres les propositions que nous avons emises precedemment, un extracteur referentiel est
represente par un agregat de trois fonctions (Figure 7), et utilise par l’algorithme Figure 8.

Une fonction fSimil, permet de trier des entites selon un critere donne en donnant un rapport
de similarite entre deux entites selon ce critere. En plus des deux entites dont elle calcule le
rapport, cette fonction peut prendre en argument un point de reference, optionnel ou non selon
l’extracteur. Ce point de reference est determine par le contexte ontologique, c’est-a-dire par
la categorie des entites du domaine de reference sur lequel la differentiation est appliquee.

Pour comprendre le calcul du coﬁt d’interpretation, il est nécessaire de voir le processus d’extraction
referenlielle comme un algorithme paresseux, ne prenant en compte les informations que lorsque c’est
nécessaire. La prise en compte du contexte opératoire pour l’operation d’exlIaclion sur la couleur n’est
nécessaire que si le rapport entre les elements d’un domaine de reference est inférieur a la variation
maximale apportee par la prise en compte du contexte. Meme si la couleur est tout autant dépendante du
contexte que la grandeur, le poids du contexte est moins important sur la premiere que sur la seconde.

Approche F onctiormelle de la Résolution de la Référence dans le Dialogue F inalisé

Une fonction fExclus, perrnettant de marquer le point d’exclusion dans le domaine de
référence produit par le tri effectué avec la fonction fSz'mz'l. Pour l’extracteur grand, le point
d’exclusion sera le demier rapport de similarité entre entités strictement inférieur a 1 (c’est-a-
dire les objets les plus petits). Pour l’extracteur couleur, ce point correspond au premier
rapport de similarité égal a J_.

Une fonction fTypique, perrnettant de marquer le point a partir duquel les entités ne sont plus
typiques pour un extracteur donné. Nous n’avons pu déterminer de regle générale pour cette
fonction, mais pour la taille par exemple, elle pourrait marquer le point ou le rapport de
similarité entre une entité et la premiere devient inférieur a un certain seuil, ou bien encore le
point ou le rapport de similarité d’entités consécutives tombe en dessous d’un certain seuil.

Extracteur :
° fSimiZ(enlilé a,entilé b, ref) —> [— 1,1] L} J.
9 fExclus(D0maineRef a’) —> D0maineRef
° fTypique (D0maineRef d) —> D0maineRef

Figure 7 2 Représentation d’un extracteur référentiel avec prise en compte des marques d'exc|usions et de typicalité.

1. Choisir Ie domaine de référence courant en fonction du type de |‘expression référentielle (définie, indéﬁnie,
etc.) tel que proposé dans (Salmon-Alt, 2001)
2. Parmi tous les extracteurs, faire dans |’ordre croissant de dépendance au contexte
a. Trier les entités non exclues du domaine de référence courant avec la fonction de similarité de
|’extracteur référentiel.
b. Marquer Ia borne d’exc|usion dans la Iiste triée.
Si Ia totalité du domaine de référence est exclu, fin et échec de la résolution
Si Ie type de |‘expression référentielle nécessite de sélectionner les référents typiques, alors 5 sinon 6
Parmi tous les extracteurs, faire dans Ie méme ordre que 2 : Marquer Ia borne typique dans la Iiste triée des
candidats référents. (Le calcul de la borne typique est effectué en fonction des entités présentes dans Ie
domaine non exclu)
6. A partir de la Iiste triée et marquée, extraire Ie ou les candidats référents vainqueurs en fonction du type de
|‘expression référentielle.
7. Mettre a jour Ie domaine de référence courant.

.°‘:'>F*’

Figure 8 2 Algorithme d’uti|isation des extracteurs référentiels

4 Travaux en cours et perspectives de recherche

Apres avoir constaté l’insuff1sant pouvoir d’expression des approches par prédicats pour la
résolution de la référence dans un cadre générique de dialogue homme machine, et qie cette
insufﬁsance oblige pour l’instant les concepteurs de tels systemes a concevoir des
heuristiques ad hoc impossibles a intégrer dans un cadre de description unifié, nous avons
proposé un formalisme pour représenter la sémantique des extracteurs référentiels
intrinseques. La prise en compte des extracteurs relationnels et typologique nécessite d’autres
mécanismes pour accompagner l’approche fonctionnelle que nous avons proposée, et nous
préparons actuellement une publication a ce sujet. L’utilisation des fonctions de
différentiation nous semble une voie prometteuse pour résoudre ces problemes. Grace a la
représentation utilisée, il est tres facile de prendre en compte les modiﬁcateurs d’intensité
(tres, peu, etc.) et la négation. Nous nous engageons dans une exploration approfondie de
cette voie de recherche.

Actuellement, l’équipe AMI du LIMSI-CNRS développe le proj et INTERVIEWS (Sansonnet et al.,
2002) (Sabouret et Sansonnet, 2001) autour du concept d’agents conversationnels

G. Pitel

d’assistance aux gens ordinaires pour l’aide a l’utilisation des composants et services WEB.
Le formalisme presente dans cet article est en cours d’implementation dans ce cadre
applicatif. Ce projet integre aussi des mecanismes pour le traitement des expressions
referentielles relationnelles et typologiques, issus de nos travaux, mais que nous n’avons pas
pu presenter ici. Il nous est pour l’instant impossible d’en donner une evaluation, les principes
sous-tendant son fonctionnement etant assez eloigne de ceux des outils existants, il nous est
necessaire de deﬁnir un grand nombre de connaissances avant de pouvoir l’exploiter.

Références

Byron D.K, Allen J.F. (2002) What's a Reference Resolution Module to do? Redeﬁning the
Role of Reference in Language Understanding Systems, Actes de DAARC2002.

Dale R., Reiter E. (1995), Computational Interpretation of the Gricean Maxims in the
Generation of Referring Expressions. Cognitive Science.

Dsikovska M.O., Byron D.K. (2000), When is a union really an intersection? Problems
interpreting reference to locations in a dialogue system, Actes de GOTALOG'2000.

Grice H.P. (1975). Logic and conversation. In P. Cole and J. Morgan, editors, Syntax and
Semantics: Vol 3, Speech Acts, pages 43--58. New York, Academic Press.

Lamrnens J.M., Shapiro S.C., Learning Symbolic names for Perceived Colors, in Machine
Learning in Computer Vision: What, Why and How?, AAAI-TR FSS93-04.

Ozkan N. (1994), Vers un modele dynamique du dialogue .' analyse de dialogues ﬁnalises
dans une perspective communicationnelle, These, INP Grenoble.

Pateras C., Dudek G., Mori R. D. (1995), Understanding Referring Expressions in a Person-
Machine Spoken Dialogue, Actes de ICASSP'95, Detroit, MI.

SabouretN., Sansonnet J.P. (2001), Un modele de requetes sur le fonctionnement de
composants actifs, Actes de MFI'01.

Sansonnet J .P., Sabouret N., Pitel G. (2002), An Agent Design and Query Language dedicated
to Natural Language Interaction, Poster a AAMAS 2002.

Salmon-Alt S. (2001), Reference et dialogue ﬁnalise .' de la linguistique a un modele
operationnel, These d'inforrnatique, Universite H.Poincare - Nancy 1, France. Mai 2001.

Schang D. (1995), Application de la notion de cadre aux enonces de positionnement et de
reference, Rapport de recherche n° 2529, Unite de Recherche INRIA Lorraine.

Winograd T. (1973), A Procedural Model of Language Understanding, Computer Models of
Thought and Language, Roger Schank & Kenneth Colby editeurs., W. H. Freman Press.

