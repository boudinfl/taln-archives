RECITAL 2003, Batz-sur-Mer, 11-14 juin 2003

Un outil de représentation et de développement
des Grammaires de Propriétés

Marie-Laure Guénot & Tristan Van Rullen

Laboratoire Parole et Langage — CNRS — Université de Provence
29 avenue Robert Schuman, 13621 Aix-en-Provence cedex l

{m1g, tristan}@1p1.univ—aix.fr

Mots-clefs — Keywords

Linguistique descriptive — Linguistique formelle — Grammaires de Propriétés (GP) — Traite-
ment Automatique des Langues Naturelles (TALN) — Syntaxe.

Descriptive linguistics — Formal linguistics — Property Grammars (PG) — Natural Language
Processing (NLP) — Syntax.

Résumé — Abstract

Nous présentons dans cet article un outil graphique de développement de grammaire, basé sur
le formalisme des Grammaires de Propriétés. Nous y exprimons les raisons pour lesquelles
l’association d’une representation complete et ergonomique, et d’un modele formel ﬂexible et
homogene foumit un avantage considerable pour l’intégration des inforrnations issues de la
linguistique descriptive.

We present in this paper a graphical tool for grammar development, based upon the Property
Grammars formalism. We explain the reasons why the association of a complete and ergo-
nomic representation and a neutral and homogeneous model, provides the considerable ad-
vantage of integrating information coming from descriptive linguistics.

1 Introduction

La diversité croissante des besoins en TALN pousse aujourd’hui les recherches en linguistique
inforrnatique a développer des modeles grammaticaux aptes a traiter des productions de lan-
gue toutes hétérogenes qu’elles soient (e.g. sources orales, importants écarts a la norme). Or la
linguistique descriptive a d’ores et déja proposé quantité d’analyses empiriques approfondies
de ce type d’attestations protéiformes ; cependant leurs propositions ne sont actuellement pas
exploitées en informatique, faute d’un formalisme qui soit a méme de leur proposer un com-

Marie-Laure Guénot & Tristan van Rullen

pletude, une homogeneite et une ﬂexibilite suffisantes pour representer l’integralite de leurs
reponses sous une forme tout a la fois ergonomique et directement implementable.

Nous presentons dans cet article un projet qui Vise a permettre de representer et d’exploiter de
telles theories, en utilisant le formalisme des Grammaires de Propriétés. Nous proposons a
cette fin un format de representation de ces grammaires qui soit a la fois générique par
l’utilisation du langage XML pour l’encodage de la grammaire, et simple d’utilisati0n par la
mise en place d’une interface graphique dediee a la representation, la creation et l’utilisation
des Grammaires de Proprietes.

2 Contraintes formelles et informatiques

2.1 Contraintes formelles

Le modele des Grammaires de Proprietesl (ci-apres GP) repose sur la constatation que toute
information linguistique, quel qu’en soit le niveau, peut étre integralement exprimee en ter-
mes de contraintes (egalement appelees propriétés). L’utilisation d’un tel formalisme offre a
notre sens un certain nombre d’aVantages, et a d’importantes consequences sur le deVeloppe-
ment d’une grammaire. Plus precisement, puisque l’inforrnation n’est representee qu’en ter-
mes de contraintes, il est possible de concevoir une grammaire integrant des informations
aussi precises que celles fournies par les theories descriptivistes.

2.2 Contraintesinformatiques

Du point de vue informatique, integrer une grammaire a un systeme de TALN necessite la Veri-
fication de plusieurs contraintes, provenant autant du type de probleme a traiter que des futurs
utilisateurs du systeme. Tout d’abord le linguiste — qui developpe la grammaire — et
l’informaticien — qui l’integre a un programme de TALN — manipulent le meme formalisme ; il
est donc necessaire de convenir d’un modele de representation des objets de la grammaire
repondant simultanement aux besoins des deux protagonistes.

Il est essentiel, de plus, pour la Validite des outils ainsi que par economie de moyens, que les
modifications faites a une grammaire soient immediatement repercutees dans le programme
qui s’en sert sans modificationz. A cette fin la representation de la grammaire doit étre parfai-
tement independante de son utilisation, ce qui implique d’exclure toute procedure ad hoc.

Enfin, l’outil informatique est lui-meme soumis a des contraintes incontournables a plusieurs
niveaux, allant du choix d’un format standardise (tel que le XML), a celui de donnees et
d’algorithmes evitant l’explosion combinatoire des traitements (graphes, bottom-up parsing,
etc.). En consequence de quoi les grammaires seront representees en memoire sous forme de
structures de donnees suffisamment souples pour permettre a diverses applications de les ma-
nipuler et d’en obtenir rapidement les resultats attendus.

Ces contraintes interviennent simultanement dans les choix de representation. La problemati-
que qui les gouveme consiste a conserver un regard suffisamment en recul par rapport aux

1 Pour une description detaillee du formalisme des GP, on peut se reporter par exemple a Blache 2001.

2 On peut se reporter :21 cc propos a Kerrnes et Evert 2003.

Un outil de representation et de développement des Grammaires de Propriétés

relations qu’entretiennent modeles et théories linguistiques, et a choisir un modele en démon-
trant qu’il est a la fois représentatif de la totalité des obj ets du formalisme, et générique — ca-
nonique — dans les représentations qu’il permet.

Partant des considérations et de la problématique exposées ci-dessus, le choix d’une represen-
tation donnée pour les GP découle a la fois des travaux déja réalisés sur ces mémes grammai-
res et des perspectives de développement qu’elles offrent, tant dans le traitement de l’analyse
syntaxique a granularité variable (cf par exemple Balfourier et al. 2002) que dans les traite-
ments particuliers de la synthese vocale a l’aide de représentations sémantiques et prosodi-
ques au sein méme de la grammaire (cf par exemple Blache et Hirst 2001, ou Blache 2003).

Le format de fichier XML, qui permet a la fois une lecture humaine et informatique des don-
nées de la grammaire, une correction manuelle comme un chargement aisé et précontraint
grace a une specification de regles syntaxiques a verifier au sein méme de ce fichier (telle que
le format DTD), est notre point de départ pour représenter les obj ets de la grammaire (voir a ce
propos Simov et al. 2002 et Simov et al. 2001, par exemple).

Le modele informatique qui s’apparente directement aux données des GP est celui des gra-
phes, dans lesquels les noeuds sont associés a une structure << objet sémantique >> permettant
de les qualifier, et les arcs représentent les relations sémantiques entre ces obj ets.

2.3 Point de convergence de ces contraintes : l’outil Accolade

Les contraintes énumérées ci-dessus nous ont conduit a développer un outil, Accolade, réalisé
en Java, qui se positionne au coeur de la problématique du formalisme et du traitement auto-
matique. Cet outil réalise l’interface entre le développement assisté de grammaires (cf. Blache
et al. 2003), les ressources (notamment un lexique de 450 000 formes développé au Labora-
toire Parole et Langage) et les outils de TALN qui s’appuient dessus.

Cette application offre de fait la possibilité de compiler un graphe des GP en un analyseur su-
perficiel (shallow parser) immédiatement fonctionnel (cf a ce propos Blache et Van Rullen
2002), et ouvre une perspective pour la rédaction d’un analyseur syntaxique profond (deep
parser). Elle met en evidence a la fois les caractéristiques des ressources linguistiques (lexi-
que et grammaire) et celles des résultats (étiquetages, analyses syntaxiques, etc.) produits par
les outils de TALN traditionnels.

3 Définition des objets du modéle

Le modele formel des GP repose sur l’utilisation de deux couples de deux objets fondamen-
taux : categories et traits d’une part, propriétés et opérations d’autre part. Nous allons dans
cette partie les définir et donner a titre d’exemple un extrait de la grammaire du francais a
large couverture en cours de développement au Laboratoire Parole et Langage, et sa represen-
tation dans l’interface de développement Accolade.

3.1 Catégories

Chaque catégorie est une unité syntaxique, constituant le vocabulaire de base de la gram-
maire. Il est important de souligner qu’il n’est fait aucune différence explicite entre catégories

Marie-Laure Guénot & Tristan van Rullen

. . 3 . . . . , , .
d1tes << lex1cales >> et << s nta mat1 ues »4 ' cette d1st1nct1on n’est o eree u’en re ard au lexi-
5
que ut1l1se qui lu1, de fait, ne contient que des unites minimales.

Dans le logiciel Accolade (cf ﬁgure 1), la grammaire correspond a un noeud initial, qui est
relie a autant de noeuds-ﬁls qu’elle contient de categories (A pour l’adjectif5 et R pour
l’adVerbe dans notre exemple). Puis chaque categorie a elle-meme deux ﬁls : un noeud pour
rassembler ses traits (A_traits dans notre exemple, correspondant aux traits de l’adjectif), un
autre pour ses proprietes (A ﬂ‘0pS). Priorite a ete donnee a representer les informations de la
maniere la plus proche possible de l’encodage XML, de facon d’une part a perrnettre de Visua-
liser facilement l’integralite des informations linguistiques, d’autre part a fournir un reel outil
graphique de developpement de grammaire (en permettant d’editer, de modiﬁer, de creer en-
tierement une grammaire via le graphe qui la represente).

 

::1e1.'-en-;1:a.nn: e

V;

A_p1:ops

  

“H-‘“"""*=~“=_-_—— _ .
“'* II ‘_'_:%=j,=3
K“'w ., f
R _ genre
, B.
, , ‘I1 I E
 ° ;' 
: ‘Ft
£5” E
4 1 nature q

/” E

f nomhre

H L
C I3 1:

S

Figure 1 : Extrait de representation graphique dans Accolade.

3.2 Traits

A chaque categorie est attribue un ensemble de traits possibles, ordonne, dans lequel un trait
est, tout a fait usuellement, un couple attribut-Valeur apportant des speciﬁcations caracteristi-
ques. Cependant a la difference des theories classiques basees sur les contraintes, ces ensem-
bles de traits sont statiques dans le sens ou ils ne contiennent aucune information operation-
nelle (qui sont integralement releguees dans les proprietes).

Dans Accolade (cf ﬁgure 1), le noeud correspondant a l’ensemble des traits possibles
(Aftraits) presente autant de ﬁls que d’attributs deﬁnis pour la categorie (soit genre, nombre
et nature). Chacun de ces ﬁls a, lui-meme, autant de ﬁls que de Valeurs possibles (m et s pour
l’attribut nombre, par exemple).

Ou << terrninales », ou encore << minimales ».
Ou << non terrninales », ou encore << construites ».

Come on l’a fait remarquer precedemment, il est a noter que le terme adjectif s’applique ici a la fois aux
lexemes et aux syntagmes adjectivaux. 11 en est de meme pour adverbe, qu’on emploie pour signiﬁer a la fois
lexeme et syntagme adverbial.

Un outil de représentation et de développement des Grammaires de Propriétés

3.3 Propriétés

Les propriétés constituent des relations entre categories ou ensembles de categories. Elles
sont parfaitement independantes les unes des autres, et deﬁnies au meme niveau. Dans la
grammaire que nous mettons en place actuellement, nous utilisons le jeu de proprietes sui-
Vant6 : exigence (relations de cooccurrence), exclusion (restriction de cooccurrence), linéarité
(contraintes de precedence lineaire) et dépendance (relations de dependance lexico-
semantique).

Dans Accolade (cf ﬁgure 1), a chaque type de propriete (e.g. exigence, linéarité) correspond
un noeud, qui a comme ﬁls autant de noeuds que la propriete contient d’operations (on peut
ainsi Voir deux clauses de linearite developpees dans la ﬁgure 1, dont le symbole est <<), et
qui eux-memes ont deux ﬁls, un par operande, representant des references a des categories
(comme R etA ﬁls de << dans notre exemple). On remarque que chacune de ces references se
manifeste par la presence d’un noeud qui est relie a la fois a la propriete a laquelle on
s’interesse (on Voit que le noeud de reference R est le ﬁls de la clause de linearite <<), et a la
categorie correspondante (le noeud de reference R est relie au noeud de categorie R). Ceci
fournit un confort considerable dans la Visualisation des relations entre categories, peu evi-
dente dans le codage XML.

3.4 Opérations

Les ro rietes sont constituees d’un ensemble de clauses c’est-a-dire d’ex ressions mettant
P P = P

en relation un certain nombre de references a des categories donnees a l’aide d’une opération

, . . . . ‘ , . . 3 .

deﬁnie dans la gramma1re7. On ut1l1se a cette ﬁn des operateurs b1na1res , s’appl1quant sur
deux membres, chacun constitues d’une reference a une categorie ou d’un ensemble de refe-
rences a des categories (rassemblees a l’aide d’operateurs proches des ET et OU logiques).

L’ordre des operandes est pertinent pour les proprietes d’exigence, d’exclusion et de lineari-
te ; il ne l’est pas pour la dependance. Dans le premier cas, la differenciation entre les deux
membres d’une clause est essentielle puisque les deux operandes ne seront pas sujets au
meme traitement9 ; cette distinction doit donc ﬁgurer clairement dans Accolade (cf ﬁgure 1).

4 Conclusion

La representation formelle des resultats d’analyses descriptives des langues semble étre une
perspective enrichissante dans l’objectif d’un TALN qui soit capable de traiter des entrees
<< tout-venant >>. Cependant il est necessaire pour representer ce type d’inforrnations linguisti-

Dans sa forme actuelle, notre grammaire ne presente que des proprietes de niveau syntaxique, mais
l’integration de proprietes d’autres niveaux, notamment semantique, est en cours.

Pour étre tout a fait precis, la semantique des proprietes (i. e. le mode de fonctionnement de chacun des opera-
teurs de proprietes employes) est l’objet d’un ﬁchier separe, comparable a un DTD, independant de la gram-
maire et des logiciels l’exploitant, de facon a pouvoir en modifier le contenu sans avoir a modiﬁer le reste, et
vice versa.

Le fait que nous n’utilisions actuellement que des operateurs binaires constitue une coincidence et n’exclut
en rien le fait qu’on puisse en definir d’autres, non binaires, pour des proprietes differentes.

Pour plus de details a propos des operations des proprietes, on peut se referer a Van Rullen 2003.

Marie-Laure Guénot & Tristan van Rullen

ques extrémement ﬁnes de disposer d’un modele suffisamment souple, complet et accessible
— modiﬁable —. Nous proposons a cette fin d’associer la flexibilité du formalisme des GP (en-
tierement basé sur les contraintes), a la généricité du XML (pour faciliter l’exploitation des
données), et au confort de la plate-forme de développement Accolade (permettant une repre-
sentation graphique intégrale des informations linguistiques, et donc une visualisation des
relations nettement facilitées).

Références

Balfourier JM., Blache P., Van Rullen T. (2002), From shallow to deep parsing using cons-
traint satisfaction, in proceedings of C OLING-2002.

Blache P. (2001), Les Grammaires de Propriétés .' des contraintes pour le traitement automa-
tique des langues naturelles, Paris, Hermes Sciences Publications.

Blache P., Hirst D. (2001), Aligning prosody and syntax in Property Grammars, in procee-
dings of EuroSpeech 2001.

Blache P., Van Rullen T. (2002), An evaluation of different symbolic shallow parsing techni-
ques, in proceedings of LREC-02.

Blache P., Guénot ML., Van Rullen T. (2003), Corpus-based grammar development, in pro-
ceedings of Corpus Linguistics 2003, 124-131.

Blache P. (2003), Vers une théorie cognitive de la langue basée sur les contraintes, in actes de
TALN-2003 (a paraitre).

Butt M., King T., Nino ME., Segond F. (1999), A Grammar Writer ’s Cookbook, CSLI Publi-
cations.

Kaplan R., King T., Maxwell J. (2002), Adapting existing grammars: the XLE experience, in
proceedings of Workshop on Grammar Engineering and Evaluation (C OLING-02).

Kermes H., Evert S. (2003), Text analysis meet corpus linguistics, in proceedings of Corpus
Linguistics 2003, 402-411.

Kinyon A., Prolo C. (2002), A classification of grammar development strategies, in procee-
dings of Workshop on Grammar Engineering and Evaluation (C OLING-02).

Simov K., Peev Z., Kouylekov M., Simov A., Dimitrov M., Kiryakov A. (2001), CLaRK — an
XML-based system for corpora development, in proceedings of Corpus Linguistics 2001, 558-
560.

Simov K., Kouylekov M., Simov A. (2002), Cascaded regular grammars over XML docu-
ments, in proceedings of the 2nd Workshop on NLP and Iﬂlﬂ WLPIHWL-2002).

Van Rullen T., Guénot ML., Bellengier E. (2003), Formal representation of Property Gram-
mars, in proceedings of ESSLLI 2003 Student Session (a paraitre).

