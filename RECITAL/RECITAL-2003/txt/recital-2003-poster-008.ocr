RECITAL 2003, Batz—sur-mer, I I -1 4 juin 2003

Sélection de critéres
pour le ﬁltrage automatique de messages

0. Nouali

(1) Laboratoire des Logiciels de base, CE.R.I.S.T,
Rue des 3 freres A'1'ssiou, Ben Aknoun, Alger, Algerie
Fax: 213 21912126 - Tel. : 213 21916211
(2) LPL- Universite de Provence
29, Av. Robert Schuman, F-13621 Aix-en-Provence, France.
Fax: +33 (O).42.59.50.96- Tél.: +33 (0) 42.95.36.23
E-mail : onouali@mail.cerist.dz

Mots-clefs — Keywords
Filtrage d’information, e-mail, réseaux de neurones, apprentissage, spam.

Information ﬁltering, e-mail, neural network, learning, e-mail filtering, spam.

Résumé - Abstract

La plupart des systemes de filtrage du courrier électronique existants enregistrent des lacunes
ou faiblesses sur l’eff1cacité du filtrage. Certains systemes sont basés seulement sur le
traitement de la partie structurée (un ensemble de regles sur l’entéte du message), et d’autres
sont basés sur un balayage superficiel de la partie texte du message (occurrence d’un
ensemble de mots clés décrivant les intéréts de l’utilisateur).

Cet article propose une double amelioration de ces systemes. D’une part, nous proposons un
ensemble de criteres automatisables et susceptibles d’inﬂuer sur le processus de filtrage. Ces
criteres sont des indices qui portent généralement sur la structure et le contenu des messages.
D’autre part, nous utilisons une méthode d’apprentissage automatique permettant au systeme
d’apprendre a partir de données et de s’adapter a la nature des mails dans le temps. Dans cet
article, nous nous intéressons a un type de messages bien particulier, qui continue a polluer
nos boites emails de facon croissante : les messages indésirables, appelés spam. Nous
présentons a la fin les résultats d’une expérience d’évaluation.

Most of existing filtering messages systems exhibit weaknesses in term of efficiency. In fact,
there are systems that use only message header information and others use a superficial
processing of message body. In this paper, we try to improve the filtering processes
efficiency. First, we introduce a set of criteria which are cues related to the message structure
and content. Second, we use a machine learning method allowing the system to learn from
data and to adapt to the email nature. We are interested in a special type of messages that
continuously poluate our email boxes: spam email. At the end, to measure the approach
performances, we illustrate and discuss the results obtained by experimental evaluations.

0. Nouali

1 Introduction

Aujourd’hui, le courrier électronique est le mode de communication le plus populaire. Il est
devenu un moyen rapide et économique pour échanger des informations. Cependant, les
utilisateurs d’Intemet se retrouvent assez Vite submergés de quantités astronomiques de
messages dont le traitement nécessite un temps considerable.

Dans cet article, nous nous intéressons a un type de messages bien particulier, qui continue a
polluer nos boites emails de facon croissante : les messages indésirables, appelés spam. Par
exemple, messages proposant des services, des produits miraculeux (maigrir en un temps
record, etc.), offres de Voyages a prix attractif, opportunités d’inVestissement pour devenir
riche en peu de temps, propositions de cartes de credit a taux d’intérét réduit, messages
pomographiques, etc. Le spam est un phénomene mondial et massif. 11 cause de multiples
désagréments tels que l’engorgement des boites emails et des serveurs emails, dilution des
messages utiles, perte de temps et d’espace, etc. Certains systemes de ﬁltrage de spam
existants sont basés seulement sur le ﬁltrage des adresses émettrices en se basant sur une liste
noire des spammeurs, et d’autres permettent aux utilisateurs d’écrire manuellement de regles
logiques de ﬁltrage a base de mots clés. Le probleme avec ces systemes, est que d’une part, ils
sont moins précis et d’autre part la nature des messages spam Varie au cours du temps, ce qui
nécessite une mise a jour fréquente de ces regles. Pour palier ce probleme, une solution est de
développer des systemes évolutifs qui s’adaptent a la nature des mails au cours du temps et
donc utiliser les techniques d’apprentissage automatique a partir de données. De nombreux
travaux, dans le domaine d’apprentissage, ont porté sur la classiﬁcation de textes (Yang,
Pedersen, 1997; Sebastiani, 1999) et peu de travaux ont porté sur le ﬁltrage de spam (Sahami
et al., 1998; Orasan, Krishnamurthy, 2002). Une grande majorité de ces travaux utilise la
cooccurrence lexicale comme base de leur classification.

Dans cet article, nous proposons une solution évolutive qui s’adapte a la nature des mails dans
le temps et permet un ﬁltrage nettement meilleur en qualité, basé sur un ensemble d’indices
portant généralement sur la structure et le contenu des messages.

2 Les critércs dc ﬁltragc

Nous avons déﬁni et identifié un ensemble de criteres que nous avons classés en trois
types (table 1).

Mots simples HWS)
business, time, money, free, price, product, credit, opportunity, guarantee,
marketing, investment, risk, advertisement, sex, travel, miracle, etc.
Mots composés ou phrases tres courtes
business opportunity, credit card, free investment, half price, home business,
immediate release, investment report, limited time, special bonus, take action, etc.
Caractéristiques spéciﬁques
le domaine des adresses émettrices, la longueur de l’entéte, le type du
message, abréviations, les caracte‘res non alphanumérique, les caracte‘res
numériques, la langue, lesﬁchiers attachés, horaire d ’envoi, etc.

Table 1 : Principaux criteres de ﬁltrage

Les mots simples représentent le Vocabulaire de base, généré automatiquement a l’aide de la
mesure de l’information mutuelle (Yan, 1997). Les mots composés sont générés a partir des
listes bigrammes et trigrammes apprises par le systeme. Les caractéristiques spéciﬁques
représentent l’ensemble d’indices portant sur la structure et le contenu des messages.

Sélection de criteres pour le ﬁltrage automatique de messages

Voici quelques résultats de 1’étude de notre corpus:

0 Le domaine des adresses émettrices (.com, . gov, .edu, etc.) : 52% de spam contre 6% de non
spam pour le domaine com, 13% contre aucun pour le domaine net, etc.

0 La longueur de 1’entéte des messages: les messages spam subissent avant d’étre recus par le
destinataire, un certain nombre de relais par des serveurs de mails de facon a atteindre un
maximum d’uti1isateurs. 96 % de spam de la base subissent des relais contre aucun pour non
spaml.

0 Le type du message : 45% de spam sont de type html, contre aucun pour non spam.

0 La longueur du message : elle est évaluée par le nombre de mots. 85% de spam sont de
taille relativement courte contre 95% pour non spam.

0 Mots non fréquents (noms communs : catégorie non reconnue par 1’ana1yseur) : Ce sont
tous les mots qui commencent par une majuscule et les mots non étiquetés par 1’ana1yseur.
86% de spam contre 5% pour non spam.

0 Abréviations : 35% de spam contre 10% pour non spam.

0 Les caracteres non a1phanumérique($, !, #, %, *, &, etc.): 65% de spam contiennent des
caracteres non alphanumériques contre 2% pour non spam. 76 % de spam contiennent 1e
point d’exc1amation (ex : get rich quick!) contre 90% de non spam ne le contiennent pas. 43
% de spam contiennent le caractere $ (90% dans le champ subject) contre aucun pour non
spam.

0 Les caracteres numériques : 80% de spam contre 10% pour non spam.

0 La langue du message : 100% de spam sont en anglais contre 80% de non spam sont en
francais.

0 Les ﬁchiers attachés : 98% de spam n’ont pas de ﬁchiers attachés contre 92% pour non
spam.

0 La taille des phrases : 76% de spam contiennent des phrases courtes (<10 mots) contre 92 %
pour non spam.

0 Horaire d’enVoi (nuit/j our) : 65% de spam sont envoyés la nuit contre 88% de non spam,
sont envoyés le jour.

0 etc.

3 Le modéle de connaissance

I1 représente 1’ensemb1e des caractéristiques du domaine spam déﬁnies et identiﬁes par
apprentissage a partir d’un corpus de messages. Le modele adopté pour modéliser 1e proﬁl
spam est un réseau de neurones non récurrents (absence de boucles) a trois couches (figure 1).
Une couche en entrée qui recoit les entrées du réseau. Une couche cachée représentant
1’ensemb1e des caractéristiques du profil spam. Une couche de sortie qui représente deux
types de messages : spam et non spam.

Dans un réseau de neurones, la connaissance est codée par la Valeur des poids des différentes
connexions. Ce codage est estimé par apprentissage. I1 s’agit, a partir d’un ensemble
d’exemp1es observés, d’estimer les parametres du réseau de neurones. Le réseau est entrainé
par 1’a1gorithme de propagation arriere ou rétro-propagation qui consiste a corriger les poids
des connexions des différentes couches en fonction des erreurs commises. La correction se
fait de la couche de sortie a la couche d’entrée. La fonction d’actiVation choisie pour toutes
les couches est la fonction sigmo'1'de (Davalo, Naim, 1993).

1 Un relais est iden11'fie' dans 1’entéte du message par le mot c1e' : << Received : from... »

0. Nouali

spam non spam

Couche de sortie

Couche Cachee

Couche d’entree

 

C1 C2  Ci  Cn

Figure 1 : Architecture d’un réseau a trois couches
L’algorithme d’apprentissage est décrit briévement comme suit:

(1) Etiqueter chaque message du corpus (Spam ou non spam).

(2) Faire passer le corpus par les différents modules d’analyse pour avoir la représentation
associée de chaque Vecteur.

(3) Initialiser les paramétres du réseau : au départ les poids des connexions entre neurones des
différentes couches sont déﬁnis par défaut a 0.5, et le pas d ’apprentissage initialisé a 0.1.

(4) Lancer l’apprentissage qui consiste a : calculer la sortie du réseau pour chaque message,
comparer et calculer l’erreur, et mettre a jour les paramétres du réseau (ajuster les poids).

4 Le processus de ﬁltrage

En premier, un module de pré-traitement est lancé pour préparer les messages, récupérés de
la boite email, aux différentes étapes ultérieures de l’analyse. Il consiste a isoler les différents
champs et a identiﬁer la langue de chaque message parmi deux actuellement modélisées
(Francais, Anglais). Par ailleurs, le systéme est incrémental et perrnet facilement la prise en
compte de nouvelles langues (aj outer un anti-dictionnaire propre a chaque nouvelle langue).

/’
  Message

I Reseau de neurones
 ’T.J.=="
. . .2.._ ..,.-_»~.'#‘_.._‘,
Pré-traitement Analyseur Caracterlstlques —> _°,;ln, ‘P L‘-’.=:-. —>
du message ' f '
r..'!. r -
in Categone

Figure 2 : le processus de ﬁltrage

Aprés l’étape de pré-traitement, le message est donné a un analyseur, qui a pour but
d’identif1er les informations pertinentes a représenter. Il s’agit d’extraire les différentes
propriétés permettant de le caractériser et de construire en sortie le Vecteur message associé.
En effet, le message est représenté conceptuellement par un espace Vectoriel de k dimensions:
M : {(TI,W1), (T2, W2,  , (Tic Wk)} (Ti: iéme caractéristique, W1": poids et k: espace des
caractéristiques). Cette représentation constitue l’entrée du réseau de neurones. Elle est donc
crée dynamiquement a chaque récupération d’un nouveau message. Ce Vecteur sera propagé a
travers les différentes couches du réseau pour donner en sortie le type du message : spam ou
non spam. L’identif1cation de certains critéres nécessite une phase d’étiquetage préalable. En
effet, nous avons utilisé un étiqueteur morpho-syntaxique, analyseur de Brill (Brill, 1992).

Sélection de critéres pour le ﬁltrage automatique de messages

Le systeme dispose d’un apprentissage assisté appeléfeed-back (Oubbad, Nouali, I999) ou
l’utilisateur est invite a donner son avis sur le comportement du systeme, ce qui lui perrnet
d’approcher la pertinence de l’utilisateur et de s’adapter ainsi a ses besoins.

5 Evaluation

Pour effectuer nos tests nous avons travaillé avec un corpus de 1000 messages construit a
partir d’un ensemble de messages que nous avons collectés pendant quatre mois, contenant
700 mails de classe spam et 300 non spam. Nous avons divisé le corpus en une base
d’apprentissage et une base de tests selon le découpage suivant :

0 Base d’apprentissage : 450 spam et 200 non spam.

0 Base detest : 250 spam et 100 non spam.
Pour mesurer les performances nous avons utilisé les mesures suivantes :

: , . . : a
Rappel a + 7 Preczszon a + '6
_ ,8 + 7 , . . _ a + 6
Erreurglobale — T Prec1s10n_gl0bale— T
a+,B+;/+5 a+,B+;/+6

avec : ot: Messages spam, correctement filtrés (classés) par le systeme.
[3 : Messages non spam, incorrectement filtrés par le systeme.
y : Messages spam, incorrectement non filtrés (rejetés) par le systeme.
5 : messages non spam, correctement non filtrés par le systeme.

Expérience 1: Performances en fonction des caractéristiques considérées
Nous mesurons les performances du systeme en considérant tout d’abord un modele de base
constitué uniquement de mots simples et lorsque nous ajoutons des criteres supplémentaires.

Caractéristiques Spam Non s am Performance globale
Précision Rappel Précision Rappel Erreur Globale Précision Globale
MS 97,8% 81,8% 77,2% 97,1% 12,2% 87,7%
MS + MC + CS 99,4% 86,3% 82,2% 99,2% 8,6% 91,4%
+Ponde'ration 99,5% 95,4% 93,2% 99,2% 3% 97%

Tableau 1 : les performances du systeme

Au début de l’expérience, on remarque un taux d’erreur de 12%, et un écart significatif entre
le taux de précision et le taux de rappel. En effet, le systeme considere certains spam comme
des messages légitimes. Nous reprendrons les tests en ajoutant les criteres déﬁnis
précédemment. Initialement, nous avons attribué un méme poids a tous les criteres de filtrage.
Nous constatons une amélioration des performances mais non maximale. Ensuite, nous avons
modiﬁé l’importance des différents criteres, en attribuant une forte Valeur du poids a certains
criteres et aux termes spécifiques, qui sont uniques dans le type spam. Les résultats des tests
étaient beaucoup meilleurs (95% de rappel).

Expérience 2: mesurer I ’imp0rtance et le r0‘le de I ’apprentissage

L’expérience consiste a presenter au systeme en deux cas différents, un ensemble de courriers
a filtrer en plusieurs sessions. Puis mesurer a chaque fois le taux global de succes du systeme
et effectuer un apprentissage assisté pour mesurer son efficacité et son inﬂuence sur les deux
facteurs (figure 3). Nous constatons que le modele nécessite plusieurs sessions
d’apprentissages assistés pour améliorer la qualité de ses résultats. Il est donc nécessaire de
lancer l’apprentissage feedback régulierement, par exemple apres chaque session de ﬁltrage.

0. Nouali

Perfomnanne globale

95

HQ‘
-35‘
B0‘

TD

Prélisian

IIIIIIII
12'345ﬁT391‘El11

Semiinn

Figure 3: l’importance de l’apprentissage assisté

6 Conclusion

Cet article propose une solution évolutive qui s’adapte a la nature des mails dans le temps et
permet un ﬁltrage beaucoup meilleur en qualité. En effet, un traitement statistique de corpus
nous permet de proposer un certain nombre de criteres perrnettant d’améliorer les résultats de
ﬁltrage. Ces criteres sont modélisés par un réseau de neurone. Chaque noeud du réseau
correspond a un critere, qui est pondéré par un poids qui représente son degré d'importance.
Un module d’apprentissage permet d’améliorer les résultats du systeme. Les résultats de tests
obtenus sur notre corpus semblent satisfaisants. Néanmoins, pour tester l’adaptabilité de
l’approche, il serait intéressant d’étendre les tests sur un échantillon de messages plus
important.

Référcnccs

Brill E., (1992), A Simple Rule-based Part of Speech Tagger, Proceedings of the Ihird
Conference on Applied Natural Language Processing, ACL, pp. 152-155, 1992.

Cohen W. W., (1996), Learning rules that classify e-mail, In Proceedings of the 1996 AAAI
Spring Symposium on Machine Learning in Information Access, 1996.

Davalo E., Naim P., (1993), Des Réseaux de Neurones, Edition Eyrolles, 1993.

Nouali 0., (2002), Classification Automatique de messages: une approche hybride,
RECITAL2002, Nancy, 24-27 juin 2002.

Oubbad L., Nouali 0., (1999), Systeme de filtrage du courrier électronique, Mémoire
d ’ingénieurs, INI, Alger, novembre 1999.

Orasan C., Krishnamurthy R., (2002), A corpus-based investigation of junk emails, In
Proceedings ofLREC—2002, Las Palmas, Spain, 2002.

Sahami M., Dumais S., Heckerman D., Horvitz E, (1998), A Bayesian approach to filtering
junk e-mail, In Learning for Text Categorization Papers from the A] Workshop, pp. 55-62,
Madison Wisconsin, AAAI Technical Report WS-98-05, 1998.

Sebastiani F., (1999), A Tutorial on Automated Text Categorisation, Proceedings ofASAI-99,
I st Argentinean Symposium on Artificial Intelligence, 1999.

Yang Y., Pedersen J. 0., (1997), A comparative Study on Feature Selection in Text
Categorization, International Conference on Machine Learning, ICML, Nashville, TN, USA,
1997.

