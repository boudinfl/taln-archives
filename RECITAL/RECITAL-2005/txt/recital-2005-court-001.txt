RECITAL 2005, Dourdan, 6-1 0ju1'n 2005

Synchronisation syntaxesémantique,
des grammaires minimalistes catégorielles (GMC) aux
Constraint Languages for Lambda Structures (CLLS)

Amblard Maxime (1)
(1) LaBRI —UniVersité de Bordeaux 1
351 cours de la liberation
33405 Talence cedex amblard@labri.fr
date de soutenance prévue : novembre 2006

Motselefs — Keywords

logique, grammaires rninimalistes catégorielles, Acalcul, portée des quantiﬁcateurs, Constraint
Language for Lambda Structures

logic, minimalist grammars, Acalculus, quantiﬁers scope, Constraint Language for Lambda
Structures

Résumé -Abstract

Ces travaux se basent sur l’approche computationelle et logique de Ed Stabler (?), qui donne
une formalisation sous forme de grammaire du programme minimaliste de Noam Chomsky (?).
La question que je Veux aborder est comment, a partir d’une analyse syntaxique retrouver la
forme predicative de l’énoncé. Pour cela, il faut mettre en place une interface entre syntaxe
et sémantique. C’est ce que je propose en utilisant les Grammaires Minimalistes Catégorielles
(GMC) extension des GM Vers le calcul de Lambeck. Ce nouveau formalisme permet une
synchronisation simple avec le Acalcul.

Parmi les questions fréquemment rencontrées dans le traitement des langues naturelles, j ’interroge
la performance de cette interface pour la resolution des problemes de portée des quantiﬁcateurs.
Je montre pourquoi et comment il faut utiliser un Acalcul plus élaboré pour obtenir les dif-
férentes lectures, en utilisant Constraint Languages for Lambda Structures CLLS.

This work is based on the computational and logical approach of Ed Stabler (?), which gives a
formalization of the minimalist program of Noam Chomsky (?). The question I want to solve
is, starting from a syntactic analysis, how to ﬁnd the predicative forms of a sentence.

I propose an interface between syntax and semantic by using Categorical Minimalists Gram-
mars (CMG) extension of the MG towards the Lambeck calculus and Constraint Language for
Lambda Structures (CLLS). This interface is powerful for the resolution of quantiﬁer scope
ambiguities.

637

638

Amblard Maxime

Introduction

Dans un premier temps, le formalisme des GMC, extension des grammaires minimalistes vers
le calcul de Lambeck, (?) et (?), sera présenté. Puis une interface entre syntaxe et sémantique —
calcul des formes prédicatives en logique d’ordre supérieur —sera exposée. Mais cette interface
ne sufﬁt pas pour conserver tous les calculs possibles avec les grammaires de Lambeck. Dans
une seconde partie, j’étudie une solution qui consiste a utiliser des Atermes structures avec
contexte, via CLLS (?).

1 Grammaires Minimalistes Catégorielles -GMC

1.1 Syntaxe

Ce formalisme, présenté dans (?), est l’extension de la formalisation des grammaires minimal-
istes de Stabler (?). Tout comme ces demieres, les GMC sont lexicalisées et les expressions
sont des arbres ﬁnis, ordonnées avec projection. La projection est la relation er1tre les elements
permettant de retrouver la téte du constituant.

Les fonctions génératrices dans les grammaires minimalistes sont de deux types. La premiere
est la fusion qui permet d’agglomérer deux structures. La seconde est motivée par Chomsky
comme la nécessité de veriﬁer certains traits, mettant en relation deux elements de l’analyse,
permettant de faire monter dans la derivation une feuille en position basse : le déplacement.

Fusion : elimination de / ou \ —structurellement la concatenation droite ou gauche. Ce qui se
traduit sous forme de séquents par les formules suivantes :

l‘—>a::A/B A—>y:B A—>y:B l‘—>$:B\A

F,A—>a:y:A [6/] F,A—>a:y:A [e\]

Graphiquement, on ajoute une branche binaire a notre arbre entre une nouvelle feuille et la
structure actuelle. Le nouveau sommet contiendra la reduction des types.

Déplacement : cette operation se base sur la notion de lien entre deux positions d’une deri-
vation. Elle se déroule en deux temps. Dans la derivation principale, on introduit certaines
hypotheses. Dans une seconde derivation, on construit un element de type ><. Si le type des
elements autours du >< est le meme que celui des hypotheses dans la derivation principale, on
peut substituer dans cette derniere les elements de la seconde.

F—>w:A><B A,$:A,y:B,A'—>z:C'[
A,F,A’ H let(av,y) : (7r1(w),7r2(w)) m 2 ; 0 6

on 7T1 est la projection de la premiere composante et 772 de la deuxieme.

Selon l’hypothese de Chomsky, les formes phonologiques et logiques fonctionnent séparément.
Le déplacement met en relation deux positions dans l’analyse et ces formes peuvent se substituer
soit en position basse, soit en position haute ce qui motive cette operation.

Graphiquement, on ajoute une branche unaire a l’arbre pour marquer que la substitution a eu
lieu. Pour une meilleure visibilité, on marquera les projections reliant les deux derivations.

La section suivante présente un calcul semantique parallele a l’analyse syntaxique, dont un
exemple est expose.

Synchronisation syntaxe sémantique, GMC et CLLS

1.2 Interface syntaxe -sémantique

La sémantique utilisée est la forme prédicative des constituants formant l’énoncé. Pour l’obtenir,
le Aealcul est la Voie la plus naturelle. Cependant un Aealcul classique ne permet pas d’aboutir
au résultat escompté car les hypotheses utilisées pour le déplacement excluent une construction
itérative.

L’ analyse syntaxique est supposée normalisée pour rencontrer l’objet puis le sujet, ce qui donne
l’ordre des Variables dans le Aterme du Verbe.

Les regles de l’interface Atermes contextués. A chaque regle syntaxique correspond une
regle sémantique : la fusion est une application dans la contrepartie sémantique. On aura donc
 ou  devenant [—> 

L’ équivalence du déplacement est un peu plus complexe. Il faut distinguer deux situations. On
peut introduire soit une Variable de type simple et dans ce cas, il faut faire une application stan-
dard, soit une Variable de type supérieur, ayant subi un typeraising, donc inverser l’application.
Ce qui se traduit par les deux regles suivantes :

Al-z:T—>U—>V l‘U[a::T]|-y:U
AUl‘|-z()\av.y):V

[RA] SE /]

Al-z:T—>U—>V l‘U[a::T]|-y:U
AUl‘|-()\av.y)(z):V

Pour les hypotheses, nous introduisons des Variables neutres. Mais, avant qu’un déplacement
n’interVienne, une Aabstraction sur cette Variable est nécessaire. Pour éviter de perdre la posi-
tion relative a cette Variable lors d’applications précédentes, on utilise un contexte. Les Variables
neutres ont une redondance dans le contexte et lors de leur extraction de ce dernier, on abstrait
sur la bonne Variable. Les contextes se conservent par application et sont marqués par le sym-
bole I-.

[NORAISE/]

Interface syntaxesémantique SYN est le calcul syntaxique (><, / et \) et SEM le calcul
sémantique (—>, [RAISE] et [NORA]SE]).

Chaque étape dans un calcul trouve sa contrepartie dans l’autre. Deux preuves, l’une dans SYN
et l’autre dans SEM sont dites synchronisées si : Chaque feuille dans SEM est en bijection
avec une feuille de SYN et Chaque étape et sa contrepartie sont réalisées en méme temps. Pour
synchroniser ces deux calculs, on construit pour la sémantique un arbre binaire en utilisant le
Aterme associé dans la partie syntaxique.

Exemple d’ analyse sémantique synchronisée a l’analyse syntaxique : Les enfcmts prendront une

pizza.

items lexicaux Aterme sémantique types syntaxique

prendre |- )\u)\v. p7“end7“e(v, u) (d\k;\v)/d
les |- )\P)\QVa:. P(a:) —> Q(av) k X d/n
une |- )\P)\QE|av.P(a:) /\ Q(av) k X d/n
pizza |- )\av.p2'zza(a:) n
enfomts |- )\av.enfant(a:) n

mfl |- )\P.P7"es(P) (k;\v)/U

639

640

Amblard Maxime
F V z . enf(z) => Pres(3 x. pizza (x) /\ prendre (v,x))

F A Q V z. enf (z) => Q(x) F A V3 x. Pres(pizza (x) /\ prendre (v,x))
y F 3 x. Pres(pizza (x) /\ prendre (y,x))

F AP. Pres (P) y F 3 x. pizza (x) /\ prendre (y,x)

F A Q 3 x. pizza (x) /\ Q(x) y F A u. prendre (y, u)
x, y Fprendre (y, x)

kx

  
 

(kxd)/n n
Les enfants

y P y x F /\v. prendre (v, x)

xtx

F /\u)\v. prendre (v, u)

SYN SEM

La premiere partie de l’analyse syntaxique sature les positions du Verbe avec des hypotheses
dans les deux calculs. On obtient dans SEM : av, y |- prendre(y, av) ou deux Variables neutres
ont saturé les positions dans le Verbe et sont également présente dans le contexte.

Puis le déplacement relatif a l’objet est déclenché dans SYN, marque par une branche unaire.
Dans S E M , une Aabstraction s’ opere par extraction d’un element du contexte. Le déplacement
permet l’aIriVée effective de la forme logique, ici : |- )\QE|av.pz'zza(av) /\  Une application
est donc possible et suit immédiatement cette arrivée dans la derivation.

La derivation se poursuit avec l’inﬂexion qui apporte dans la derivation la nécessité d’une hy-
pothese de type cas. Celleci correspond a la Veriﬁcation que le constituant introduit Via sa
position aura le bon cas, en l’occurrence le nominatif pour le sujet. Elle déclenche le second de-
placement, avec projection des formes logiques et phonologiques. La contrepartie dans SEM
est une Aabstraction puis une application.

L’ analyse syntaxique est terminée et acceptante. Dans le meme temps la formule sémantique
Voulue a été construite : |- Vz.enf(z) => Pres(E|a:.pz'zza(av) /\ p7"end7"e(v, 

Cependant, a chaque analyse syntaxique ne correspond qu’une forme sémantique. Or, lorsqu’un
énoncé contient des quantiﬁcateurs, plusieurs lectures sont possibles. La section suivante présente
une extension de l’interface pour calculer les différentes formules.

2 Utilisation de Astructures

CLLS (Constraint Language for Lambda Structures) est un formalisme élaboré par Markus Egg
et al en Allemagne. L’ idée est de représenter les Atermes par des arbres binaires et de relier ces
arbres entre eux par deux types de relations pour permettre la sousspéciﬁcation.

Il existe donc trois types de liens possibles entre les divers elements de la structure.

1. une arréte d’un arbre qui est une application d’un terme a un autre, notée @.

Synchronisation syntaxe semantique, GMC et CLLS

2. une relation de substitution qui lie une Variable a une autre suite at une application entre
deux arbres. Graphiquement ce lien sera une ﬂeche en gras.

3. une relation de dominance entre deux arbres, reliant une feuille d’un arbre au sommet
d’un autre, graphiquement celuici sera en pointilles. Elle intervient lorsque deux ar-
bres entrent en relation par application. La racine d’un arbre peut étre sujet de plusieurs
relations de dominance.

Grace a ces deﬁnitions, la construction de representations sousspeciﬁees entre les differents
constituants est permise. En effet, les relations de type 2 permettent de conserver l’ordre dans
lequel les Variables sont substituees et la relation de dominance (type 3) permet de modiﬁer la
portee des quantiﬁcateurs.

Exemple de CLLS et de réductions : les enfants prendront une pizza

 

lecture lecture
Astructures contextués nombre enfcmts = nombre pizzas‘ une unique pizza

Pour synchroniser les GMC et CLLS, il faut conserver la notion de contexte dont on a Vu la
necessite dans la partie precedente.

Pour cela, on ajoute sur la racine de la CLLS une liste representant le contexte, notee entre
crochet : [  On admettra la propriete selon laquelle les contextes sont sedentaires. Ce qui
signiﬁe que lorsque la structure est liee par une application a une autre structure, on maintient
le contexte sur la racine de la sousstructure.

Details du calcul dans la partie semantique pour le deplacement :

 

(1) (2) (3)
\ o
E’ 3
C \
EN ,3 @ 0 It
ur.1e pizz.a /,’ ur'1e/ pizz°a .'l
 ﬂ, ————  .
\
.y°\ vam ‘g/\. VQ y°\
Prendfe varx 3 prendre varx . prei1dre varx .

(1) verbe charge de ses deux hypotheses avec redondcmce dans le contexte

641

642

Amblard Maxime

(2) premiere phase du deplacement, lambdaabstraction, une variable est liberee en fonction
du contexte. Ici, celle correspondant a l ’objet est a nouveau libre.

(3) application avec l ’arbre correspondant a l ’objet. Les deux arbres sont maintenant lies et on
peut realiser une reduction de la relation de dominance. La variable esseulee disparait.

Cette representation est nécessaire car, par deﬁnition, l’apport lo gique d’un constituant dans les
grammaires minimalistes se fait toujours en position haute.

Le defaut de ce modele est qu’il est ﬁnalement trop souple. En effet, pour une phrase avec deux
quantiﬁcateurs, toutes les lectures (2! : 2) sont possibles. Par contre pour une phrase a trois
quantiﬁcateurs, il n’y a pas 6 (3! : 6) lectures mais seulement 5. Une des solutions a l’etude
est d’ajouter un ordre sur les relations de dominance. Pour cela il faut différencier ces relations
selon leur genre. Une classiﬁcation sur ces demieres est en cours d’étude.

Conclusion

A partir d’une idée calculatoire simple qui soustend la théorie de Stabler et qui encode le

programme minimaliste, on obtient un systeme formel pour l’analyse syntaxique, les GMCs.
A partir de cette analyse, j’ai propose une interface pour le calcul de la sémantique ou chaque
utilisation de regle dans la partie syntaxique trouve sa contrepartie dans celle sémantique, par

l’utilisation de Atermes structures avec contexte. L’utilisation du Acalcul est naturelle pour le

calcul de la forme predicative d’un énonce, cependant, il ne sufﬁt pas dans sa forme standard.
CLLS avec contexte est une solution Viable qui permet de reprojeter la structure obtenue Vers
plusieurs formules et d’ obtenir les différentes lectures.

Le concept de synchronisation entre analyse syntaxique et sémantique montre qu’il est difﬁcile
de mettre en place un systeme formel répondant a toutes les caractéristiques de la langue, car il
se heurte a de nombreuses questions. Celle de la portée des quantiﬁcateurs reste ouverte. Une
implementation a partir de celui des GM devient envisageable.

Références

Amblard M., Lecomte A. et Retoré C. (2004), Synchronization Syntax Semantic for a minimalism theory
Journe’e Sémantique et Mode’lisation 2004,

Chomsky Noam (1995), The Minimalist Program, Cambridge, MIT Press.

Egg M., Koller A. et Niehren J. (2001) The Constraint Language for Lambda Structures, Journal of
Logic, Language, and Information, To appear.

Heim I. et Kratzer A. (1998), Semantics en Generative Grammar, Oxford, Blackwell.
Koller A., Burchardt A. et Walter S. (2004), Computational semantics, Actes de ESSLLI 2004.

Lecomte A. et Retoré C. (2001), Extending Lambeck Grammars, Actes de Algebraic Mahods in Lanuage
Processing 2003, 354361

Stabler Ed. (1997), Derivational Minimalism, Actes de Logical Aspect of Computational Linguistics
1996, vol 1328, SpringerVerlag.

Stabler Ed. (1999), Remnant movement and structural complexity, Actes de Constraints and Resources
in Natural Language Syntax and Semantics 1999, 299326.

