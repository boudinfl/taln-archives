RECITAL 2009, Senlis, 24-26 juin 2009

Modélisation des mouvements explicites dans les ACG avec le
produit dépendant

Florent Pompignel
(1) ENS Cachan / INRIA Nancy - Grand-Est
ﬂorent.pompigne@loria.fr

Abstract. Abstract Categorial Grammars (ACG) is a grammatical framework based on li-
near lambda-calculus. As in Muskens’ Lambda Grammars, an abstract term in this kind of cate-
gorial grammar can be realized in different directions, such as syntactic and semantic ones. This
structure provides autonomy for these different processings. ACG’s architecture is independent
from the logic used and so the type system is easily extensible in order to deal better with some
linguistic phenomena. We will ﬁrst introduce ACGs and the dependent product construction
.This paper will then be concerned with the issue of overt grammatical movements, in particu-
lar extraction constraints in relative propositions, and how several close frameworks deal with
it. Last we will show how to capture this phenomenon in extended ACG.

M0tS-CléS I syntaxe, grammaires catégorielles abstraites, types dépendant, mouvements
explicites, extraction.

Keywords: Syntax, abstract categorial grammars, dependant product, overt movements,
extraction.

Florent Pompigne

1 Introduction

La description de la syntaxe d’une langue naturelle et de la relation entre ce niveau syntaxique et
le niveau semantique est traditionnellement operee en Traitement Automatique des Langues par
un formalisme grammatical. Les Grammaires Categorielles Abstraites (ACG), proposees par de
Groote (de Groote, 2001), se distinguent dans le paysage des formalismes existants par des
proprietes heritees des grammaires categorielles (sensibilite aux ressources) et des proprietes
propres a leur architecture : elles s’appuient sur un langage abstrait, dont les termes corres-
pondent a des structures de derivation, et un langage objet dont les termes correspondent aux
structures derivees.

Les mouvements grammaticaux explicites designent les deplacements qui ont lieu dans des
constructions comme les formes interrogatives ou les propositions relatives par rapport aux
phrases correspondantes. L’extraction d’un composant de la phrase par ces constructions peut
s’effectuer a distance arbitraire, et selon des contraintes precises de la langue qui sont bien etu-
diees et transcrites dans de nombreux formalismes grammaticaux. Le propos de cet article est
de presenter une modelisation de ce phenomene pour les ACG.

Dans la partie suivante on introduira le formalisme des ACG ainsi que l’extension du systeme
de type avec le produit dependant. Dans la partie 3 sera presente le probleme des mouvements
explicites, a travers les contraintes a l’extraction dans les constructions relative en frangais, et
les reponses apportees dans plusieurs formalismes voisins, et la partie 4 detaillera la solution
proposee pour les ACG.

2 Grammaires Catégorielles Abstraites

Avec une approche similaire aux Lambda Grammars (Muskens, 2007) ou aux Convergent
Grammars (Pollard, 2007) , (Pollard, 2008), chaque ACG introduit une fonction d’un espace
de termes dits abstraits vers un espace de termes objets. Ces termes objets peuvent representer
differentes structures de donnees utilisees en traitement automatique des langues, comme des
arbres ou des chaines de caractere, et on choisit donc de les construire sur le A-calcul lineaire.

2.1 Architecture du formalisme

Intuitivement, une ACG consiste en deux signatures, appelees vocabulaire abstrait et vocabu-
laire objet, qui declarent des types et des constantes typees dans le fragment implicatif de la
logique lineaire, et d’un homomorphisme, appele lexique, de la premiere vers la seconde. Une
Grammaire Categorielle Abstraite genere deux langages, un langage abstrait et un langage ob-
jet. Le langage abstrait est deﬁni comme l’ensemble des A-termes lineaires (chaque abstraction
lie une unique variable) clos construits sur le vocabulaire abstrait qui sont du type speciﬁque S .
Le langage objet est alors l’image du langage abstrait par le lexique.

Cette architecture permet a l’aide de deux ACG partageant un meme langage abstrait (corres-
pondant au niveau tectogrammatique) de realiser ces termes abstraits vers un langage decrivant

Modélisation des mouvements explicites dans les ACG avec le produit dépendant

leur sémantique et un langage décrivant leur forme de surface (correspondant au niveau phé-
nogrammatique). Nous ne nous intéressons uniquement dans ce papier a la description de la
syntaxe et donc a la relation entre tectogrammatique et phénogramatique. Donnons un exemple
d’une telle ACG :

N, NP, S : type (vocabulaire abstrait)
hommec, villagec, amic : N

joyeuxc : N —o N

unc, lec : N -0 NP

dormirc : NP -0 S

aimerc, rencontrerc : NP -0 NP -0 S

Jeanc, Mariec, Paulc : NP

dec : NP -0 N —o N

string : type (vocabulaire objet)
homme, joyeux, un,  zstring
N, NP, S —> string (lexique)

hommec —> homme

joyeuxc —> )\1:.a: + joyeua:
unc —> Aazun + II?

dormirc —> )\J:.J: + dart
aimerc —> )\1:,y.y + aime + II?
J eanc —> Jean

dec —> )\1:,y.y + de + II?

(on note par "+" 1’opération de concaténation des chaines de caractere)
On peut vériﬁer que le terme suivant appartient au langage abstrait

NP

JL

rencontrerc fang (dec M ariec amicﬁ J eanc
mm

N

\ 4
V

S

Son image par le lexique fait donc partie du langage objet

rencontrerc (unc (dec M ariec amic)) J eanc
—> ()\1:,y.y + rencontre + 1:)  + 1:) (()\J:, y.y + de + 1:) Marie ami)) Jean

—> Jean rencontre un ami de M arie (B-réduction)

A 1’inverse, la possibilité de partir d’un terme de surface et de décider s’i1 appartient au langage
d’une ACG est un probleme ouvert equivalent a la décidabilité du fragment exponentiel multi-
plicatif de la logique linéaire (Salvati, 2005). Cependant, si on se restreint a la classe des ACG du

Florent Pompigne

second ordre, dans lesquelles les termes du langage abstrait sont de la forme ql —o  —o qk —o p
011 les qi sont des types atomiques , ce probleme de 1’appartenance est décidable en temps po-
lynomial.

2.2 Extension par les produits dépendants

L’ architecture des ACG ne dépend pas de la logique sur laquelle elles reposent. Contrairement
aux autres constructions proposées par Philippe de Groote et Sarah Maarek (de Groote & Maa-
rek, 2007)(imp1ication non linéaire, produit cartésien, union disjointe et type unit) pour étendre
1e systeme de type, 1e produit dépendant ne correspond pas a une primitive de la logique li-
néaire. I1 vient de la théorie intuitionniste des types de Martin-Lof (Martin-Lof, 1973) et a été
utilise dans le contexte de la logique linéaire par Cervesato et Pfenning (Cervesato & Pfenning,
2002). Le produit dépendant permet d’introduire des types qui dépendent de termes. Le forma-
lisme ainsi étendu est Turing-complet, et le probleme de 1’appartenance est donc indécidable
(de Groote et al. , 2007). I1 reste a étudier quels fragments utilisant 1e pouvoir d’expression ainsi
gagné restent décidables. Cet exemple montre comment utiliser les types dépendants pour ins-
tancier un groupe nominal par son genre.

gender = {m, f} : type (vocabulaire abstrait)
NP,N : (gender) type
S : type

villagec : N m

villec : N f

une : (Ha: : gender) N :13 -0 NP :1?
joyeuxc : (Ha: : gender) N :13 —o N :13
dormirc : (Ha: : gender) NP :1? —o S

gender = {m, f} : type (vocabulaire objet)
string : type
ville joyeux, joyeuse, un, une,  : string

gender —> gender

N, NP —> )\a:.string (lexique)

S —> string

villec —> ville

villagec —> village

unc —> Ag. Ax. {m —> un, f —> une} g+J:

joyeuxc —> Ag. Am. 1: + {m —> joyeux, f —> joyeuse} g
dormirc —> Ag. Am. 1: + dart

On peut veriﬁer que le terme suivant appartient au langage abstrait.

Modélisation des mouvements explicites dans les ACG avec le produit dépendant

NPf

dormirc f r(1mc f (joyeuxc f m'llec))‘
\ 

Nf

E

On en déduit que son image par le lexique appartient au langage objet

dormirc f (une f (joyeuxc f m'llec))

—> une ville joyeuse dart

3 Mouvements grammaticaux explicites

Les mouvements grammaticaux explicites sont ceux visibles au niveau de surface du langage :
ce sont les extractions de constituants syntaxiques par des constructions comme les interroga-
tives en qu, les relatives, ou les semi-clivées en francais. On s’interessera ici a la modélisa-
tion des contraintes d’extraction par les constructions relatives dans la langues francaise, ces
contraintes étant tres proches pour les autres mouvements explicites (Abeillé, 2002).

3.1 Propositions relatives en francais dans les ACG

Dans les ACG le pronom relatif sujet qui serait représenté au niveau abstrait par le terme
quic:(NP—oS) —oN—oN

Le premier argument correspond a la suite de la proposition relative : c’est une phrase a laquelle
il manque un sujet. Le second argument correspond au nom complété par cette proposition.
L’image de cette constante par le lexique serait alors : AS. An. 72 + qui + (S 6). On peut par
exemple vériﬁer que la phrase suivante appartient au langage objet de surface :

dormirc (lee (quic ()\1:.aimerc M ariec 1:) h0mmec))

—> l’ homme qui aime Marie dart

Il faut noter que le systeme de type, contrairement a la tradition des grammaires catégorielles,
n’opere aucun controle sur l’ordre des mots dans les ACG. Cet ordre des mots est géré par le
lexique. On n’a donc pas ici de probleme a générer des extractions non-périphériques (Z ’h0mme
que Marie aime passionnement dart) ou in distance arbitraire (l ’h0mme que Jean dit que Pierre
croit que Marie aime dort). D’un autre cote, sans controle sur la construction de nos termes
abstraits, on rencontre plusieurs phénomenes de surgénération. Le premier est lié a l’absence
de contraintes sur le role du constituant grammatical extrait. Rien n’empéche en effet de recon-
naitre l ’h0mme qui Marie aime dort de maniere similaire a l’exemple initial. L’ autre contrainte

Florent Pompigne

qui doit étre prise en compte est l’existence d’ilots d’extraction a l’intérieur desquels l’extrac-
tion est impossible depuis l’eXtérieur. Les propositions relatives elle-mémes sont un exemple
d’ilot d’extraction, et en effet L’h0mme que ma soeur qui aime dort ne devrait pas étre reconnu
comme une phrase de la langue francaise. Pourtant le terme

le (que ()\x.d0rmir (ma (qui ()\y.aime :13 y) s0eur))) homme)

fait bien partie de notre langage abstrait. Les propositions complétives ne sont, elles, des ilots
que pour l’eXtraction de sujet : l ’h0mme qui Marie crois que vient est grammaticalement incor-
rect.

3.2 Le probléme dans quelques autres formalismes

Les phénomenes d’eXtraction ont été considérés sous de nombreux angles différents. EXaIni-
nons rapidement les solutions adoptées dans quelques formalismes voisins aux ACG.

Les Tree Adjoining Grammars permettent de bien rendre compte du phénomene (Abeillé, 2002).
Le schéma de formation des arbres élémentaires a complement relativisé modiﬁe les arbres a ra-
cine phrastique pour placer le complément en téte de phrase avec un trait <qu>. Ce complément
pouvait se trouver a profondeur arbitraire dans l’arbre initial puisqu’il apparait sur le schéma
sous un lien de dominance sous-spéciﬁé. Dans le cas d’une proposition relative, l’arbre obtenu
est dominé par un noeud de catégorie N qui domine un autre noeud de catégorie N décrivant
l’antécédent. Dans tous les cas un noeud intermédiaire phrastique est ajouté : il permet avec
l’opérateur d’adjonction d’ajouter un nombre arbitraire de constructions comme Marie croit
que. L’ extraction du sujet est traitée de maniere siIr1ilaire mais distincte.

Dans les grammaires d’interaction, chaque pronom relatif est décrit par un arbre dans lequel
le complément extrait apparait mais est morphologiquement vide. Cette trace du complément
po11rra donc étre uniﬁée avec les autres arbres ou le complément est décrit, mais elle n’apparaitra
pas en surface. Aﬁn de permettre une dépendance a distance arbitraire entre le pronom relatif et
le complément extrait, la trace est surmontée d’une relation de dépendance sous-spéciﬁée. Ce-
pendant, pour bloquer la traversée d’ilots d’extraction, cette relation est controlée : elle ne peut
franchir que des noeuds étiquetés S et de fonction objet ou nulle (contraintes satisfaites par que
Marie aime par exemple). L’ arbre décrivant le pronom relatif sujet se distingue par l’absence de
trace : le pronom assure la fonction de sujet. (Perrier, 2007).

Les grammaires catégorielles s’appuient traditionnellement sur le calcul de Lambek. Le connec-
teur implicatif est double : le / prend son argument directement a sa droite et le \ directement a
sa gauche. L’ordre des mots est donc géré dans le systeme de type. Ce systeme est trop rigide
pour les constructions relatives puisqu’il empéche les extractions non-périphériques : l’argu-
ment d’un pronom relatif est une phrase a laquelle il manque un constituant a sa droite ou a
sa gauche seulement. Une possibilité est d’ajouter un constructeur T et sa regle d’introduction,
ATB étant le type d’un terme qui complété quelque part d’un terme de type B serait de type A.
On peut alors donner au pronom qui le type N\N/(STNP). On retrouve a ce moment la méme

Modélisation des mouvements explicites dans les ACG avec le produit dépendant

surgénération que dans les ACG. La modélisation des ilots d’extraction peut se faire a l’aide de
constructeurs modaux rattachés a l’extracteur et a la trace qui doivent se combiner tandis que
les ilots d’extraction jouent le role de portes verrouillées a ces constructeurs (Moortgat, 1996) ,
(Carpenter, 1997). C’est également l’approche présente dans les Lambda Grammars (Muskens,
2007). On verra que c’est de cette technique qu’on s’approchera le plus.

Dans les Convergent Grammars, les pronoms relatifs (et les autres constituants opérant des
mouvements explicites) sont affectés d’une catégorie spéciale G[A,B,C] indiquant que ce terme
se combine avec un terme de catégorie A contenant une variable libre de type B et renvoie un
terme de type C tout en liant cette trace. Cette catégorie spéciale permet de ne construire aucun
terme par lambda-abstraction. I1 sufﬁt donc de vériﬁer que des variables libres ne sortent pas
des ilots d’extraction.

4 Modélisation des contraintes d’extraction dans les ACG
étendues

Le systeme de type étendu va nous permettre de controler la construction des termes du langage
abstrait dans le respect des contraintes de la langue. Le premier terme dont doivent dépendre
les types de nos constantes est un marqueur de cas, qui vériﬁera le role des constituants extraits
(come on ne s’intéresse ici qu’a la signature abstraite on omettra d’indicer chaque nom de
constantes par c).

cas = {n0m, acc, gen, comp} : type

NP, N : (cas) type

S : type

Jean, Marie, Paul, Laurent : (Hc : cas) NP c
chien, maison, homme : (Hc : cas) N c

un,le: (ﬂczcas) Nc—oNPc

aimer, rencontrer : NP (100 —o NP nom —o S
dormir : NP nom —o S

qui: (ﬂczcas) (NPn0m—oS) —oNPc—oNPc

La phrase suivante n’appartient plus au langage : aimer contraint la variable X a prendre comme
argument le cas acc, et qui le cas nom. Le terme ne peut donc pas étre typé.

dormirc (lee nom (quic ()\1:.aimerc {I3 (100 M ariec nom) hommec n0m))

—> l’ homme qui M arie aime dart

On introduit un autre marqueur, de type ext pour extraction. L’idée est que les pronoms relatifs
forcent les propositions relatives a étiqueter la variable trace de l’eXtraction par ce marqueur a
0. Ce marqueur est propagé aux niveaux syntaxiques supérieurs mais ne peut pas franchir les
ilots d’extraction. I1 reste alors au pronom relatif de controler que la proposition relative est bien
étiquetée par 0. Une troisieme valeur du marqueur permet d’indiquer qu’un ilot a l’eXtraction

Florent Pompigne

de sujet a été franchit. Cette valeur intermédiaire sera donc également acceptée par tous les
pronoms sauf le qui extracteur de sujet.

ext = {0, 1, 2} : type

NP : (ext) (cas) type

N : (ext) (cas) type

S : (ext) type

S* : (ext) type

chien, maison, homme : (Hc : cas) N 2 c

1m,le,m0n :(Hc : cas) N 2 c —o NP 2 c

marcher, dormir :(Hy : ext) NP y nom —o S y

aimer, rencontrer :(Hy1, yg : ext) NP yl (100 —o NP yg nom —o S mi11(y1 yg)
qui :(Hc:cas) (NP0n0m—oS0) —oN2c—oN2c
que:(Hy:ext,c:cas) (NPOacc—oSy—1)—oN2c—oN2c
que’ :(Hy : ext) S y —o S * max(y, 1)

(je crois *que* l’idée est bonne)

croire, dire :(Hy1, y2 : ext) S * yl —o NP yg nom —o S min(y1 yg)

On peut vériﬁer que ce terme n’est plus typé par la grammaire : (on omet d’écrire les termes du
produit dépendant pour une meilleure lecture)

L’ homme que ma soeur qui aime dort
le (que ()\x.d0rmir (ma (qui ()\y.aime x y) s0eur))) homme)

En effet les deux variables qui jouent le r6le de traces X et y doivent porter le marqueur 0 (exi-
gence du type des pronoms relatifs). Ce marqueur Va étre consommé par le qui, et le marqueur
d’ extraction qui arrivera au que ne pourrait étre que 2, ce qui rend le terme intypable. A l’inverse
le terme suivante reste toujours typable :

L’ homme que ma soeur qui dort aime

SA0
le (que ()\x.aime x (ma (qui ()\y.d0rt y )s0eur))) h0mme))
NP 0 “CC NP 0 nom
N 2:om

V

N2c

Enﬁn, on vériﬁe que ce groupe nominal n’est plus typable :

Pierre qui je crois que vient
qui; ()\x.cr0ire (que’(vem'r je) Pierre
SS

S*1

\ 4

V
NP 0 nom—oS 1

Le marqueur 0 de la variable trace devient 1 en passant par le je crois que. Le terme résultant
n’a donc pas le bon type pour étre argument de qui.

Modélisation des mouvements explicites dans les ACG avec le produit dépendant

Pierre que je crois que Marie aime

a la meme forme de dérivation de type, a la différence de que qui, lui, accepte ce type pour son
argument.

Ce controle s’étend aisément aux autres pronoms relatifs et aux autres ilots d’extraction, comme
les si ou les propositions inﬁnitives. Les ilots lexicalisés, comme le verbe hurler ne posent pas
plus de problemes. De plus les autres phénomenes de mouvements explicites (interrogatives
en qu, seIr1i-clivées) peuvent utiliser le meme marqueur et la meme structure de controle. No-
tons enﬁn que l’on pourrait avoir démultiplié les entrées lexicales plutot qu’utiliser les types
dépendants, on est donc resté dans un fragment réversible des ACG.

5 Conclusion

Un atout des ACG est de proposer directement un controle sur les structures de dérivations, qui
constituent notre langage abstrait. Il est ainsi possible de modéliser des phénomenes linguis-
tiques sans quitter le formalisme ni le lambda-calcul typé. Cette technique de modélisation des
contraintes a l’extraction propose une illustration pratique des possibilités offertes par l’exten-
sion du systeme de type des ACG.

D’autres phénomenes de déplacement peuvent étre modélisés selon le meme schéma. En par-
ticulier, les mouvements grammaticaux implicites, qui sont visibles au niveau de la réalisation
sémantique, présentent des caractéristiques proches des mouvements présentés dans cet article,
sur la nature des extractions (opérées dans ce cas par les prises de portée des quantiﬁcateurs)
comme sur celle des ilots d’extraction (Ruys & Winter, 2008).

Références

ABEILLE A. (2002). Une grammaire e’lectronique dufrancais. CNRS Editions.
CARPENTER B. (1997). Type-Logical Semantics. The MIT Press.

CERVESATO I. & PFENNING F. (2002). A linear logical framework. Information and Com-
putation, 179(1), 19-75.

DE GROOTE P. (2001). Towards abstract categorial grammars. In Association for Computa-
tional Linguistics, 39th Annual Meeting and 10th Conference of the European Chapter, Pro-
ceedings of the Conference, p. 148-155.

DE GROOTE P. & MAAREK S. (2007). Type-theoretic extensions of abstract categorial gram-
mars. In New Directions in Type-Theoretic Grammars, proceedings of the workshop, p. 18-30.

DE GROOTE P., YOSHINAKA R. & MAAREK S. (2007). On two extensions of abstract cate-
gorial grammars. In N. DERSHOWITZ & A. VORONKOV, Eds., Logic for Programming, Arti-
ﬁcial Intelligence, and Reasoning, 14th International Conference, LPAR 2007, Yerevan, Arme-
nia, October 15-19, 2007, Proceedings, Volume 4790 of Lecture Notes in Computer Science,
p. 273-287 : Springer.

Florent Pompigne

MARTIN-L(")F P. (1973). An intuitionistic theory of types : Predicative part. In F.ROSE &
J .SHEPERDSON, Eds., Logic Colloquium ’73, p. 73-118.

MOORTGAT M. (1996). Categorial type logics. In J . VAN BENTHEM & A. TER MEULEN,
Eds., Handbook of Logic and Language, p. 93-177. Amsterdam : Elsevier Science Publishers.

MUSKENS R. (2007). Separating syntax and combinatorics in categorial grammar. Research
on language and computation.

PERRIER G. (2007). A french interaction grammar. In 6th International Conference on Recent
Advances in Natural Language Processing, Borovets, Bulgaria, 2007., p. 463-467.

POLLARD C. (2007). The logic of pied-piping. Presentation at the Colloquium in Honour of
Alain Lecomte.

POLLARD C. (2008). An introduction to convergemt grammar. Presentation at Calligramme
Seminar.

RUYS E. & WINTER Y. (2008). Quantiﬁer scope in formal linguistics. To appear in D. Gabbay
(ed.), Handbook of Philosophical Logic - Second Edition.

SALVATI S. (2005). Problemes de ﬁltrage et problemes d’analyse pour les grammaires cate’-
gorielles abstraites. PhD thesis, Institut National Polytechnique de Lorraine.

