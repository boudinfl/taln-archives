RECITAL 2010, Montréal, I9-23 juillet 2010

Inférences aspecto-temporelles analysées avec la Logique Combinatoire

Hee—J in R01

(l)Laboratoire LaLIC (Langues, logiques, Informatique et Cognition), Université
Paris—Sorbonne, Maison de la Recherche, 28 rue Serpente, 75006 Paris
heejinro@yahoo.fr

Résumé Ce travail s’inscrit dans une recherche centrée sur une approche de l’Intelligence Artifrcielle
(IA) et de la linguistique computationnelle. Il permet d’intégrer différentes techniques formelles de la
Logique Combinatoire avec des types (Curry) et sa prograrnrnation fonctionnelle (Haskell) avec une
théorie énonciative du temps et de l’aspect. Nous proposons des calculs formels de valeurs aspecto-
temporelles (processus inaccompli présent, processus inaccompli passé, événement passé et état-
résultant présent) associées 21 des représentations de signiﬁcations verbales sous fonne de schemes
applicatifs.

Abstract This work is in line with the research centered on an approach of the Artiﬁcial Intelligence
and the Computational linguistic. It allows integrating different fonnal technologies of the Combinatory
Logic with types (Curry) and their functional programme (Haskell) with an enunciative theory of the
tense and the aspect. We propose formal calculus of aspecto-temporal values (present unaccomplished
process, past unaccomplished process, past event and present résultative-state) associated with
representations of verbal meanings in the form of applicative schemes.

Mots-clés : Logique Combinatoire, Référentiel énonciatif, Scheme sémantico-cognitif, Grarnrnaire
Applicative et Cognitive, Haskell

Keywords: Combinatory Logic, Enunciative Frame of reference, Semantic-cognitive scheme,
Applicative and Cognitive Grammar, Haskell

1 Introduction

Le temps et l’aspect sont étroitement liés dans une catégorie grarnrnaticale. Il est donc difﬁcile de relever
les marqueurs grarnrnaticaux tels qu’ils soient uniquement temporels ou uniquement aspectuels.
Cependant, selon Desclés (1990a), nous pouvons distinguer ces deux notions par commodité : d’une part
l’aspect construit un proces 21 partir d’une relation prédicative atemporelle ; d’autre part le temps renvoie
plutot 2; un repérage du proces par rapport 21 l’énonciateur. Autrement dit, l’aspect renvoie a une visée de
la relation prédicative que se représente l’énonciateur, et le temps renvoie 21 des relations qui situent le
proces soit dans le référentiel de l’énonciateur soit dans un autre systeme référentiel. Aucune langue n’a
de marqueurs uniquement temporels ou uniquement aspectuels. Nous partons, donc, du principe qu’il
n’existe pas de distinction nette entre les marqueurs grammaticaux aspectuels et les marqueurs

grarnmaticaux temporels. Ce sont des valeurs aspecto-temporelles qui présentent a la fois des
caractéristiques aspectuelles et temporelles.

HEE-J IN R0
Le cadre théorique dans lequel nous développons nos analyses linguistiques est celui de la Grarnrnaire
Applicative et Cognitive (Desclés, 1990a; Desclés et alii., 2010) - désonnais GA&C. Ce modele
linguistico-computationnel est polystratal avec 7 niveaux de représentations, dont chaque niveau
s’articule er1tre eux par des roles d’équivalences entre definiendum et deﬁniens, pour des transfonnations
de representations.   

® Schérncs Fguratirs ct cogniti Fs

 C A/féralfnguisrique 
 E-{css0urccsi| 

    

 

dc SCTS

 ’ ® Rep1‘ésentations sérnantico—cogr1iti\/es
® Analyse du prédicat @ Analy;sc dc:". cchnditions
lexical el"I()I'1C]at]\/6S

   

‘\/V

® Analyse des opérateurs grainrnaticaux

T

Encprcssion applicative typée
(sLrucLu1‘c d'0pL3ra1.cur cL d'upérar1du)

AK
Grarnrnaire Catégorielle (extension GCCA)

 
  

Régles
énonciatives
Lg

_ Régles
 d'équi\/alence

/\

® Conﬁgurations rr1orpho—syr1taxiques d'une
langue naturelle (structure syntagrnatique)

Figure 1 : Sept niveau de l’architecture computationnelle de la GA&C

Ce modele est analogue a la compilation de programme et implémentable sur des machines
infonnatiques a l’aide de langages de prograrnmation fonctionnelle comme HASKELL, F#, Lisp, etc.
Pour analyser certains phénomenes aspecto-temporels et énonciatifs, ce modele met en oeuvre des
opérateurs aspecto-temporels qui portent sur une relation prédicative propositionnelle donnant des
valeurs aspectuelles (état, événement, processus, ...), et des relations sur des intervalles topologiques
(ouverts, fenné, ...). Notre travail differe de la DRT (Kamp et Reyle, 1993) qui traite aussi le temps et
l’aspect; mais comme la DRT ne dispose pas d’opérateur topologique, il lui est difﬁcile de représenter la
valeur de l’état résultant et du processus inaccompli.

Ce modele fait appel a un fonnalisme unique, la Logique Combinatoire (LC) de Curry (1958, 1972), ce
qui amene a représenter chaque énoncé en une expression applicative ou les opérateurs de différents
types s’appliquent a des opérandes. La LC a été utilisée pour la premiere fois par Shaumyan (1987) pour
décrire et analyser les phénomenes linguistiques. Ce type d’approche s’est étendu au domaine de la
sémantique cognitive dans la GA&C. La caractéristique fondamentale de la LC est applicative: un
opérateur s’applique a un opérande pour fabriquer un résultat. Les combinateurs sont des opérateurs
abstraits qui s’appliquent a des opérandes pour les composer ou les transformer. Les expressions
applicatives constituent des expressions combinatoires. Les combinateurs élémentaires se combinent
entre eux et construisent des combinateurs plus complexesl. La signiﬁcation de chaque combinateur est
déﬁnie par son action sous fonne d’une [3—réduction (par des regles d’introduction et d’élimination). La
B—réduction vériﬁe la propriété de Church-Rosser, c’est-a-dire la propriété de conﬂuence: la forme

1 Les combinateurs dérivés (E1 puissance et 2‘: distance) sont déﬁnis 2‘: partir de ces combinateurs élémentaires qui étendent la

portée d’un combinateur ou agissent 2‘: distance. (Curry, 1958, 1972)

INFERENCES ASPECTO-TEMPORELLES ANALYSEES AVEC LA LOGIQUE COMBINATOIRE
réduite, si elle existe, est unique. Donnons quelques combinateurs avec leurs regles d’action2 :
B (composition fonctionnelle) : B X Y Z 25X (Y Z)

C (conversion des deux arguments d’un opérateur binaire) : C X Y Z 25 X Z Y

Notre analyse utilise les concepts de base de la théorie aspecto-temporelle développée dans le courant
européen (Benveniste 1966, Comrie 1976, Culioli 1999, Desclés 1995, ...). La distinction de base er1tre
état, événement et processus (Desclés, 1990b) implique la prise en compte d’intervalles topologiques sur
lesquels se réalise la relation prédicative. Cette relation aspectualisée (sous la forme d’un état réalisé sur
un intervalle ouvert, ou d’un événement réalisé sur un intervalle fermé, ou encore d’un processus réalisé
sur un intervalle fermé a gauche et ouvert a droite, car inaccompli) doit étre prise en charge par un
énonciateur (‘JE’) sous la forme d’un opérateur d’énonciation (ou opérateur de prise en charge) ‘JE-
DIS’, l’énonciation étant elle-meme un processus inaccompli réalisé sur un intervalle ‘J0’, d’o1‘1
l’opérateur aspectuel ‘PROCJO’ (processus réalisé sur ‘J°’). Nous ferons appel aux représentations des
signiﬁcations lexicales sous forme de schemes sémantico-cognitifs (désormais SSC) qui sont organisés
par des 7L-expressions typées. Un certain nombre de primitives cognitives générales utilisées dans la
construction des schemes (Desclés, 1990a) sont liées a la perception (primitive relationnelle de
mouvement ‘MOUVT’, primitive de repérage ‘REP’, primitive d’accessibilité ‘ACCS’, ...) et a l’action
(primitive d’effectuation ‘FAIRE’, primitive de controle par un agent ‘CONTR’, primitive de visée
téléonomique ‘TELEO’). Dans cet article, nous allons montrer comment intégrer dans une meme
approche formelle : (i) les représentations aspecto-temporelles avec un calcul opérant sur les intervalles ;
(ii) les représentations des signiﬁcations lexicales en particulier verbales sous forme de SSC; (iii)
l’utilisation des opérateurs généraux de la LC pour exprimer les représentations et les calculs effectués.

2 Analyse formelle par représentation applicative

Pour illustrer nos propos, partons des exemples suivants et de leurs formules de représentations
métalinguistiques associées que nous allons commenter:

(1) processus inaccompli actuel : [En ce moment, ] Luc donne le livre a Jean

(1’) Pnocm ((JE-DIS) (& (PROCJ1 (donner T3 T3 T1)) ([503) = 5(J°)])))

(2) processus inaccompli passé : Luc donnait le livre a Jean [quand Marie est arrive’e]
(2’) Pnocm ((JE-DIS) (& (PROCJ1 (donner T3 T3 T3)) ([503) < 5(J°)])))

(3) événement passé : Luc a donne’ le livre a Jean

(3’) Pnocm ((JE-DIS) (& (EVENF1 (donner T3 T3 T3)) ([5(F1) < 5(J°)])))

(4) état-résultant : Lac a donne’ le livre a Jean, [donc maintenant le livre est la possession de Jean]

2 Un opérateur ‘X’ qui s’applique a un opérande ‘Y’ construit un résultat ‘Z’. Le programme de l’application de ‘X’ a ‘Y’

est noté par une simple juxtaposition (non associative) qui préﬁxe l’opérateur a son opérande, d’ou l’écriture: ‘Z = X Y’.
Pour simpliﬁer les écritures et en évitant ainsi des parentheses superﬂues, nous posons : ‘X Y Z =déf (X Y) Z’ ; il est alors
clair que les deux expressions ‘X Y Z’ et ‘X (Y Z)’ ne sont pas équivalentes et ne signiﬁent pas le meme programme
applicatif.

HEE-JIN R0
(4’) Pnocm ((JE-DIS) (& (ETAT-RESULU1(donner T3 T2T1)) ([5(U1) = 5(J°)])))

Les jeux de coordonnées temporelles expriment des relations de concornitance (par exemple 5(J1) et
5(J°) sont les bornes droites ouvertes de ‘J1’ et ‘J0’, [5(J1) = 5(J°)])3 ou de non-concornitance (par
exemple [5(J1) < 5(J°)]). Les représentations sont exprimées dans un langage applicatif ou fonctionnel ou
un opérateur ‘X’ s’applique a un opérande ‘Y’ en notant cette application par ‘X Y’. A chaque exemple,
nous associons un diagrarnrne ﬁguratif et formel et le nom de la valeur aspectuelle correspondante.

Diagrarmnes ﬁguratifs de chaque énoncé Noms des valeurs aspectuelles

1) 1:11 (’(" 11707116}?! Luv r/(n1;1c J4» /1'1-re 1} .,/can

J ‘ . .
E J0 ».—~ Processus inaccompli actuel

1/U‘) v(J°) 50“) : 5-(J') : T“

2). L114’ donnail .72 .711-re 51 Jean quana' .-’L1’c.tr.ic c'.s'.r ur)‘I'1?ée.

 [?zr4xnd .. . :1 F E0
|_ F ' _| |_ J " |_

Processus inaccompli translaté

(ou processus inaccompli passé)

1-'(J') 8<J*):«.r(F‘) 50“) *.«(J‘’) 6<J”):T"
3). L110 a donnc? /p /11-re (‘J .Icz.rn. ,
f h 0 Evénement passé
F‘ |_ J " |_T
VG.) 5(F1) N/(TU) 5(JU):T,, (ou evenement accomph passe)
-1). Luz‘ LI 6/onné ,7p In-7-4» c‘: .1cun. cit,-no r11uir.ItL'r1c.rnI Ic fivry es! fa })<)_s'sc.s'.s‘i()n ck: .1-can.
F : U‘ h ’: Etat-résultant
L F] _ L J0 In
_ _ (ou état accompli présent)
y(l-") 5(r'1):«,( U ') ~,»(J“) 5(U ' ):5(J“):T"

Tableau 1 : Diagrarmnes ﬁguratifs et fonnels

Les représentations figurales, sous fonne de diagrarmnes expriment bien les relations temporelles er1tre
les intervalles de réalisation des relations prédicatives (processus inaccompli ‘J 1’ ou événement ‘F1’) et
l’intervalle de ‘J 0’ (processus énonciatif) de la prise en charge énonciative par l’énonciateur. L’interva1le
‘U1’ dans l’énoncé (4) est un intervalle de réalisation de valeur aspectuelle de l’état-résultant de
l’événement passé (réalisé sur ‘F1’) ; ‘U1’ est un intervalle ouvert qui est immédiatement contigu a
l’intervalle fenné ‘F1’; cet état-résultant réalisé sur ‘U1’ correspond a l’état acquis « Luc a acquis une
nouvelle propriéte’ (avoir-donne’ le-livre 61 Jean)», c’est-a-dire que l’intervalle ‘U1’ a sa borne droite qui
coincide avec la borne droite de ‘5(J°)’ [5(U1)=5(J°)] ; l’état-résultant est un « present » (en anglais,
present perfect) et non pas un passé (voir Benveniste 1966, Desclés et Guentchéva 1995).

La théorie représentative de Reichenbach (1947), reprise par plusieurs linguistes, opere avec des instants
alors que notre approche opere avec des intervalles d’instants, ce qui pennet de rendre compte des
oppositions aspectuelles entre (i) les inaccomplis (état ou processus) réalisés sur un intervalle ouvert ou
serni-ouvert avec une borne droite ouverte (indiquant la non prise en compte d’un dernier instant de
réalisation) et (ii) les événements accomplis réalisés sur un intervalle fenné (pas nécessairement
ponctuel) avec la prise en compte d’un dernier instant de réalisation.

3 Nous noterons les bornes droite et gauche d’un intervalle quelconque ‘I’ par respectivement ‘8(I)’ et ‘7(I)’. Elles peuvent

étre ouvertes ou ferrnées selon qu’e]1es n’appartiennent ou n’appa11:iennent pas 2‘11’interval1e ‘I’.

INFERENCES ASPECTO-TEMPORELLES ANALYSEES AVEC LA LOGIQUE COMBINATOIRE
2.1 Représentation de la signiﬁcation du lexique verbal

La représentation de la signiﬁcation de « donner >> a été largement étudiée en science cognitive (par
exemple, « to give >> Langacker 1991, Pottier 2000), et dans le cas de la GA&C, ce verbe a été analysé en
frangais, en coréen et en russe (Son 2006, Ivanova-Tarasova 2009). La représentation de la signiﬁcation
relative a notre exemple est donnée par la 7L—expression applicative du SSC:

7Lz. 7Ly. xx. (CONTR (FA1RE(MOUVTF12(SIT1o1 [x,y,z]) (SITZQZ [x,y,z])) x ) x)
avec: srrlol [X,y,z] = ET (ACCS x y) (NOT (ACCS z y))
SITZQZ [X,y,z] = ET (ACCS z y) (NOT (ACCS x y))

L’expression au-dessus signiﬁe (voir aussi la ﬁgure 2) : l’agent ‘X’ exerce la capacité de mouvement
d’une situation ‘SITIO1’ a une autre situation ‘SITZOZ’ ; ce mouvement est effectué et réalisé pendant
l’intervalle fermé ‘F12’ des instants de l’événement du mouvement (‘MOUVTF12’) er1tre deux situations ;
dans la premiere situation ‘SITIO1’, ’entité ‘y’ est accessible a l’entité ‘x’(ACCS x y)4, et non pas a
l’entité ‘z’ ; cette situation est réalisée (est vraie) durant l’intervalle de validation d’état ‘O1’ ; dans la
deuxieme situation ‘SITZOZ’, l’entité ‘y’ est accessible a ‘z’ mais cette fois, n’est pas accessible a ‘X’ ;
cette situation correspond a l’intervalle de validation d’un autre état ‘O2’. Ainsi, le mouvement de
l’accessibilité d’une entité ‘y’ est effectué en passant d’une situation a une autre, et tout ce passage n’est
pas he a l’énonciation. Le scheme décrit représente la signiﬁcation du prédicat « donner »5 hors de toute
prise en charge par un énonciateur ; ce prédicat étant événementiel, nous pouvons poser6 :

donner A3 A2 A1 = (3 intervalle F”) EVENF12 (donner A3 A2 A1)

Le probleme auquel nous sommes confrontés est le suivant: Comment le scheme (sous forme de 7L-
expression) peut-il étre “re’unitarise”’ en un prédicat verbal avec trois places d’arguments ? En effet la
prédication verbale dans une langue n’opere pas avec le scheme mais avec les unités linguistiques qui
sont des prédicats verbaux. La LC est convoquée pour exprimer cette synthese integrative. Pour cela,
nous partons du scheme et nous introduisons successivement un certain nombre de combinateurs de la
LC de fagon a dégager les places d’arguments et a faire apparaitre un opérateur fonctionnel, une certaine
composition entre ‘X’, qui compose entre elles les primitives en un tout intégré. Nous ne donnons pas,
ici, la forme exacte de ‘X’ (car cela exigerait des développements techniques de la LC).

2.2 Prise en charge d’une prédication verbale

ll s’agit maintenant de montrer comment la relation prédicative (donner A3 A2 A1) peut étre prise en
charge par un processus énonciatif réalisé sur ‘J0’. Peut-on exprimer cela a l’aide d’un calcul formel
faisant apparaitre l’analyse sémantique des marqueurs morphologiques (marqueurs de temps au sens de
« tense ») dans une démarche « top-down >> (c’est-a-dire descendante) ? La encore, la LC nous permet de

4 ACCS est un domaine des entités accessibles 2‘: une autre entité. ‘ACCS x y’ : c’est le domaine des entités ‘y’ qui sont

accessibles 2‘11’entité ‘x’.

Nous ne précisons pas, ici, les types fonctionnels des primitives MOUVT, CONTR, FAIRE, etc. et les types des
arguments (ici, ‘x’, ‘y’, et ‘z’ ont le meme type de ‘J’, entité individuelle).

Pour simpljﬁer les écritures, introduisons le symbole ‘A’ qui désigne les termes nominaux (ou les actants) ; ‘A3’, ‘A ’ et
‘A1’ associés aux trois syntagmes nominaux respectifs “le-livre ”, “Jean” et “Lac”.

HEE-J IN R0
réaliser ces calculs sous fonne d’une déduction formelle qui introduit successivement des combinateurs.
Avec l’analyse de la signiﬁcation du prédicat « donner >> par son scheme associé et suivant l’analyse
d’opération élémentaire d’insertion dans le référentiel énonciatif, nous sommes capables d’expliquer
l’inférence : Lac a donne’ le livre a Jean —> Maintenant, Jean a le livre et Lac n’a plus de livre

2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 _.
' I
I Typle die ‘I I : emtité i_I_1(1i‘|I.»'i(‘1'LJlEl1€
I ‘II; : 1-IfLuc)_ '5; : J (13 lir-..'re:}_ z : J (Jeilililjl I
I ’i
| SITI 0'1 ﬂ'\.-'J1CIU‘i.?"]I'1.—;_ EITI 01 :
I ACICS 3|: 3.’ 1‘-‘L-C‘C‘.':Ii 2 j.-' I
I ET ET
I NOT (A.CC‘S z 3,: ) ND‘T (.=u;:cs x 1.: } |
I
' : 1* : : I
I : :1=An:IE:_E : : |
I I K I I
. . . I
I I I I I I
I I CC)- TR I :
I I X I I I
I . . . . |
I .;, C-1 : F12 : 0; .:, I
I II‘ 47' I?! |'7 I
I _ - _, ET, |
I2 2 2 2 2 2 2 2 2 2 2 I 2 2 2 I2 2 2 2 2 2 2 2'4. 2 2
I I ‘
: : ‘~.
I I "-
I I II
‘V r‘ 3 _ J“ I —
r J. I II EL)-
L T. v T -11“

Figure 2 2 SSC de « donner » avec projection sur le référentiel énonciatif (REN)

En énoncant l’événement « Lac a donne’ le livre a Jean >> nous effectuons les relations temporelles : [F1
= F12] et [5(FI) < 5(J°)] ; l’état-résultant présent << [Maintenant] Jean a le livre » et le résultatif « Lac n’a
plus de livre >> engendrés par la réalisation de l’événement durant l’interva1le ‘F1’ conduit aux relations
temporelles : [5(FI) = y(UI)] et [5(UI) = 5(J°)]7. Dans le meme esprit, nous devons complexiﬁer le calcul
pour représenter l’ensemble des valeurs aspecto-temporelles du francais en utilisant la notion de
référentiel temporel (référentiel énonciatif (REN), référentiel non-actualisé (RNA), référentiel des
possibles, ...), et tenir compte des différents référentiels (Desclés et Guentchéva, 2006) ou la relation
prédicative peut venir s’insérer8. En effet, l’imparfait comme le passé composé peuvent fonctionner dans
des référentiels temporels qui ne sont pas nécessairement lies a l’énonciation. Par exemple : «Un jour,
Lac a donne’ le livre de geographie a Paul et c’est cela qui a declenche’ la vocation de Paul: aller
explorer les terres de la planete». Le marqueur ‘un jour’ est l’indication d’un changement de référentiel
puisque la narration évoquée ne peut plus étre repérée par rapport a son énonciation. De meme, dans une
narration : « Ce jour-la, Paul e’tait en train de donner sa pr0prie’te’ a son neveu lorsque son fils est
intervenu pour  >> La encore le marqueur ‘ce jour-la’ indique une narration autonome et indépendante
de son énonciation. Cette analyse peut étre représentée a l’aide de la ﬁgure 3 :

_ _ _ _ _ _ _ _ __£"¢’..r'@:1é___________

4- -F
——. .— , W ..—-
< :¢  a
_~ ._ \ . ,L_
. I‘ era 7 en rm 2': d’ don yer es! I‘ arerremu ’ RNA , ..
7 Nous ne donnons pas 1c 3‘ * , I I I I I gr’ Descles et a111, 2010).
\\\ Aujan'r:f’.i‘nn' 1’
, , I I , I I
8 Chaque referentiel s'org ‘-1-5 - - - - - - - - - - :_.=-— - - - - - - 4- , son enonc1at1on. Les
relations prédicatives q _J I —_ U __ D _ ,que ‘I’. Le référentiel
de base est le référenti», ‘I T , RE“ , , , _ _ énonciateur ‘JE-DIS’,

sous forme de processus, repere toutes les relations prédicatives des énoncés. Certains marqueurs (Ce (‘our-la, Un (our,
l’orage éclata, g tu fais...) permettent de ne pas repérer a REN inteme et créent un autre référentiel ou les relations
prédicatives qui les contiennent y sont insérées.

INFERENCES ASPECTO-TEMPORELLES ANALYSEES AVEC LA LOGIQUE COMBINATOIRE

Figure 3 2 Relation entre référentiels temporels

Dans ce diagrarnme 3, la relation ‘#’ exprime un changement de référentiel entre REN et RNA. Dans le
référentiel non-actualisé (RNA), tous les états, tous les événements et tous les processus sont repérés les
uns par rapport aux autres et non par rapport a ‘J0’. Le changement de référentiel permet de prendre en
compte l’opposition de Benveniste entre « discours » et « histoire » bien que Benveniste n’introduise pas
la notion de référentiel temporel. ll s’agit donc d’intégrer cette derniere notion dans un systeme de
changement de référentiel et les calculs formels qui s’y attachent. C’est la l’objet de notre travail.

Le travail formel nous a amer1é a introduire les relations temporelles dans la portée de l’opérateur de
prise en charge ‘JE-DIS’, ce qui n’était pas le cas dans les articles de Desclés (2004, 2005), qui analysait
(1’) et (2’) par : (1”) (PROCJO ((JE-DIS) (PROCJ1 (donner T3 T2T1)))) & ([501) = 5(J°)])

(2”) (pnocm ((JE-DIS) (PROCJ1 (donner T3 T2T1)))) & ([501) < 5(J°)])

La représentation que nous proposons est plus “naturelle” puisque la relation temporelle est bien un
constituant de << ce qui est dit ».

3 Traitement informatique de l’analyse aspecto-temporelle

Si l’étre humain a la capacité d’effectuer des inférences aspecto-temporelles, une machine doit étre
guidée par des regles explicites pour obtenir des résultats analogues. ll faut pour cela évaluer a chaque
étape de calcul la structure de l’expression et ses composantes logiques et sémantiques. Du point de vue
computationnel, il s’agit d’apporter la preuve que les analyses précédentes sont effectives et peuvent etre
réalisées automatiquement, ce qui permettra des applications ultérieures. L’utilisation de l’informatique
dans un mode expérimental pennettra de tester la force explicative et opératoire de la théorie aspecto-
temporelle et de la GA&C. La programmation fonctionnelle est un paradigme de programmation dans
lequel les notions de fonction et de récursivité tiennent une place essentielle, notamment a travers
l’importance de l’appel récursif de fonctions dans le programme. En particulier, l’action des
combinateurs, concus comme des opérateurs de composition, d’opérateur plus élémentaire, qui est
facilement réalisable et gérable en pro grarnrnation fonctionnelle. Pour faire des calculs automatiquement,
nous devons fournir a la machine toutes les informations nécessaires et adéquates aﬁn de réduire les
combinateurs par étapes. Pour cela, nous avons effectué une premiere réalisation informatique avec,
entre autres, le langage fonctionnel F# (R0, 2008), puis, avec Haskell. Le programme, implémenté a
l’aide de B.Djioua, prend en entrée une phrase comme << Luc a dome’ le livre 61 Jean » et renvoie sa
représentation sémantique sous la fonne d’un scheme instancié. Le programme procede a une premiere
analyse syntaxique dans le cadre des Grammaires Catégorielles construisant ainsi une expression
applicative associée (Biskri et Desclés, 2005) ; ensuite le programme construit les conditions
d’énonciation et parallelement engendre une représentation sémantico-cognitive a partir de la
décomposition de prédicat « donner >> a l’aide de l’opérateur ‘X’. Le programme tennine par une
integration des conditions énonciatives et du scheme instancié donnant l’analyse sémantique de la phrase
présentée en entrée. Ainsi, nous pouvons rendre compte automatiquement de certaines inférences comme
celle que nous avons vu au §2.2. Le travail est en cours pour traiter un plus grand nombre d’exemples.
Dans cet article, nous montrons uniquement une partie de l’implémentation, relative aux opérations

HEE-J IN R0
aspecto-temporelles. Plus précisément, nous avons réalisé un programme de reconnaissance chargé de
reconstruire les conditions aspecto-temporelles a partir des marqueurs morphologiques.

3.1 Combinateurs et opérateurs aspecto-temporels

La premiere partie de l’implémentation consiste a définir les combinateurs élémentaires et dérivés
(puissance et a distance) de la LC dans le programme. La réduction que nous allons utiliser traite du
combinateur effectuable le plus a gauche dans l’expression applicative considérée. Les schémas de types
combinateurs sont fonctions de types variables que nous déterrninons par l’opération d’uniﬁcation (Les
types ‘t1’, ‘t2’ et ‘t3’... sont des types variables, ils sont identiﬁés par unification). Nous montrons ici
les déﬁnitions de quelques combinateurs et leurs schémas de types (fenétre a gauche — déﬁnitions des
combinateurs dans un éditeur de code, fenétre a droite — schémas de types des combinateurs défmis en
Haskell via l’interpréteur interactif ‘GHCi’):

_/_l C:iDocumenis end SetlingsihroiBuienutREC|TittiHaske||iRecita|_Heske||.its - Notepad“ 5”“
Loading package §_[l1c-131-in ... I!.in]_1ing  done.
Fichier Edition Recherche Atiichage Format Langage Paramétrage Macro Execution TextFX Piugins Document ?   ]1]:§§9‘_“_'_'iinﬁﬂ‘;"f_' ;h;ng‘f"°'

  

,.‘ _._.1 _ f # E? = Pl-elude) :t:d C:\])ocuments ar_|d Setting.=:\}11-o\BLu-eau\RECITﬂL\Haske11

;i.‘ :.. :1 ﬂ 1 La 0 E in W  E A V E ‘> PI-elude) :set [)l.'0ITI1Jt "Hee-J1n)"

I 5 ‘ ' "’ " “‘ 1 ‘ Hee-J1n) :1 Rec1tal_Haskell.}|s
[1 of 1] Compiling Hain ( Recita1_Haske11.}1s. interpreted )
0k. modules loaded: Hain.

ﬁe ”‘ E]Heciia|_Haske|i.iis

    

—> c —> :2
L --Combinateurs élémentaires : B, C ec C* ------------ -- == ( 1 t1 —> t2
2 combjj f g X: f [g x) ' .: 3 -) t1) -) I; -) t3 -) 1:2
3combiCfxv=fyx

‘ ‘ -> I22) -> I: -) 1:1 -) t4 -) t3
~L comb1EC x f = f x -- combinateur C*
5 -- llqebres cies combinateurs ----------------------- -- (1: -> 121 -> 122 -> 123 -> H) -> I: -> 1:1 -> 123 -> 122 -> 124

_ _ _ Hee Jin):t distanceB6
, --1 : Pu1ssence des combinateurs, exemple tie cembmeceur ‘B‘ (So1uc1en "edhoc") ------------ -- distanceﬂﬁ
:: (tB —) t7 —) tli —) 1:5 -) t4 -) I53 —) t —) 1:1)

1- puissBZ = cembiB cembiﬁ combiﬁ -> t8

 puissB3 = cembiB cembiﬁ (cembiB cembiﬁ combiB)
‘i puisslie = cembiB cembiﬁ (cembiB cembiﬁ icembiﬁ combiﬁ cembiB))
L puissB7 = cembiB cembiﬁ (cembiB cembiﬁ icembiﬁ combiﬁ tcembiﬁ combiﬁ tcembiﬁ combiﬁ tcemhiﬁ cembiB cembiﬁiiiii

Q.) --2 : Combinateurs a distance , exemple cte combinateur 'C‘ ---------------- --
 ciiscenceﬁl = cembiB cembiﬂ

3? ciiscenceﬁi = cembiB cembiﬂ combili cembiﬂ

‘E ciiscenceC3 = combiB comhiﬂ (combiB comhiﬂ combiB) combiﬂ

L3 ciiscenceliﬁ = combiB icombili tcomhiﬂ icombiii (combiB icombili combiB))i))
 ciiscenceBB = combiB icomhill tcomhiﬂ icombiil (combiB icomhill tcomhiﬂ (combiB combiiliiiiiii

Implémentons maintenant quelques opérateurs aspecto-temporels9 ainsi que les relations temporelles,
introduits au §2.1., de l’événement dans le passé (énoncé (3)) en Haskell. Nous déﬁnissons d’abord les
types d’entite’s individuelles (J), de pre’dicat (Predicat), d’ope’rateurs aspecto-temporels (Operateurs),
d’intervalle, d’ instants, en utilisant Haskell data keyword (data constructors ou value constructors) et
recursive types ; ensuite nous déﬁnissons les fonctions (local functions) pour l’exécution. Le résultat,
apres exécution, est l’expression applicative de la représentation fonnelle de l’analyse aspecto-
temporelle (voir la fonnule de représentation métalinguistique de l’énoncé 3, alors 3’). Les déﬁnitions et
les résultats du programme correspondent a chaque étape du calcul fonnel.

9 Pour l’imp1émentation de toutes les étapes de niveau morphologique au SSC, voir Desclés & al. (2010), pour

1’imp1émentation des SSC, voir Djioua (2000), et pour l’analyse et son implementation en F#, voir R0 (2008).

INFERENCES ASPECTO-TEMPORELLES ANALYSEES AVEC LA LOGIQUE COMBINATOIRE

‘v~s,u_—.i.+_‘.*: E] HecI|al_HaskeHhsl

Lu: 3 alnnné la lurre ‘a Jean ——————————

:3 data J = Lu: l Le_livrE l Jean deriving Show
‘.3 data Preniicat. = Dnnnaria J II II dzriving Shun!

 er “P27:2E2;:.:.::::T;:::::.:::e=e° on Jan
::::";::.:::‘::::::. Hee-Jin>
:::E;“:j:“;I::::::‘ Hee-Jinlavoir donne_a Jean Le_livre Luc
lguggﬁgzxgigrvaele  EVENTTPASSE (Donner_a Jean Le_livre Lucl
naE_nls Epereeeuzs 88' In
 .‘.Zif;iZ §f1Zff‘°“” Hee-Jin)
 12:: :::::.::‘:::.::‘:11::;::i:?:;.?.:.."’:::::::::‘°:.’.......,  Hee-Jinlevent passe (Donner a Jean Le livre Lucl
  W 3 X :    mm H PROC Jl (JE DTS (El (EVEN_Fl (EVEN Fll (Donner_a Jean Le_livre
  newm>;;;;;-;;;§;-7D;;:;:.§;;eL:u;m  nl (Delta Fl) (Delta Jll) (CONCOMF1F12l) (El (Eq (Delta 01) l
 rUl_UZ_FlZ = (ET caq (Deltaiﬂll (Gamma F123) clzq csemme uzn cnelce Flam    
 §;§f.:f§a“iZ=ZZf.i:§Z;§$§_.a ee- in _

 

-ﬁe ENDNC_J0 x = enan.:_Jo an
Entjaise = d1sl:anCEE3 d1§t.anCEE6 \ii§t.anCeC’.3 \ii§t.anCEC’.3 Cr.uml:iC pu1S§E2 1:1
(ET (ET (Inf (Delta F13 (Delce JUH (CUNCUH F1 1712)) trUl_UZ_FlZJ) enan.:_Ju EVEN_Fl EVEN_FlZ

 

 

4': Exécutlun ;Hee-am> Evantjuasse (Demex_e Jean Leilivre Lue)
 ——l:l1uc_Ju (JE_DIS (ET tEVEN_Fl tEVEll_FlZ (Dom'ler_a Jean Le_l1vre Lu:)JJ

-- car car (Inf (Delta F1) (Delta JDH ccmncon 171 1:12;)

clan‘ uaq melee D1) ccemma 1712): um (Gamma D2) (Delta 1712:)!

)

)

4 Conclusion

L’utilisation de la Logique Combinatoire que nous venons de montrer sur les quelques exemples permet,
d’une part, d’articuler des niveaux de representations de la GA&C entre eux dans un processus de
changement de niveau au sein d’une meme architecture computationnelle, et d’autre part, de synthétiser
un prédicat a partir de l’analyse de sa representation sémantique. ll existe de nombreuses analyses
formelles automatiques de la morphologie et de la syntaxe, mais les constructions automatiques de
representation sémantique sont plus complexes a décrire et a formaliser. Les réalisations actuelles sont
souvent des applications tres limitées a un domaine exteme parfaitement circonscrit. De plus, peu de
réalisations effectives portent sur la prise en compte de la sémantique du temps et de l’aspect, excepté les
études d’Asher et alii. (1995) qui sont basées sur une approche de l’aspectualisation et Kamp (1993).
C’est ainsi que notre recherche permettrait la realisation d’un programme d’automatisation de l’analyse
aspecto-temporelle. Nous souhaiterions présenter ultérieurement comment certaines inferences aspecto-
temporelles, qui mettent en jeu des signiﬁcations lexicales et les conditions aspecto-temporelles peuvent
étre traitées par des calculs formels et réalisées par des programmes informatiques.

Références

ASHER N., AURNAGUE M., BRAS M., SABLAYROLLES P., VIEU L. (1995). “De l’espace-temps dans
l’analyse du discours”. Semiotique, 9:11-62.

BENVENISTE E. (1966, 1974). Problemes de linguistique ge’ne’rale 1 & 2. Paris: Gallimard.

BISKRI I., DESCLES J-P. (2005). “Applicative and Combinatory Categorial Grammar and Subordinate
Constructions in French”. International Journal on Artiﬁcial Intelligence Tools, V14. N°1 & 2, 125-136.

COMRIE B. (1976). Aspect, an Introduction to the Study of Verbal Aspect and Related Problems. London:
Cambridge University Press.

CULIOLI A. (1999). Pour une linguistique de l’e’nonciation, Formalisation et ope’rations de repe’rage.
Tome 2, Paris: Ophrys.

HEE-JIN R0
CURRY H.B., (1958, 1972). Combinatory Logic. Volume 1 & 2. Amsterdam: North-Holland Publishing.

DESCLES J .-P., (1990a). Langages applicatifs, langues naturelles et cognition. Paris: Hermes.

DESCLES J .-P., (1990b). “State, Event, Process, and Topology”. in: General Linguistics, 29, 3:159-200.
University Park and London: Pennsylvania State University Press.

DESCLES J .-P., GUENTCHEVA Z. (1995). “Is the notion of Process necessary? A fundamental distinction
process in progress and state activity”. in: Temporal Reference, Aspect and Actionality, P.-M Bertinetto;
V. Bianchi; J . Higginbotham; M. Squartini (eds.), Torino: Rosenberg and Sellier, 1995, p55-70.

DESCLES J .-P. (2004). “Combinatory Logic, Language and Cognitive Representations”. in Weingarten P.
(ed.), Alternative Logics. Do Sciences Need Them .7, Springer, 115-148.

DESCLES J .-P. (2005). “Reasoning and Aspectual-Temporal Calculus”. in: Vanderveken D. (eds.), Logic,
Thought and Action, Springer, pp. 217-244.

DESCLES J .-P., GUENTCHEVA Z. (2006). “Référentiels aspecto-temporels dans les textes”. in: Etudes
Cognitives, 7. SOW, Warszawa. pp. 6-38.

DESCLES J .-P., DJIOUA B., R0 H.-J. (2010). “Computational Approach of Cognitive Semantic by means
of Combinatory Logic”. soumis a publication.

DJIOUA B. (2000). Mode’lisation Informatique d ’une base de connaissances lexicales (DiSSC) .' Re’seaux
polyse’miques et Schemes Se’mantico-Cognitifs, These de doctorat, Université Paris-Sorbonne.

HINDLEY, J.R., SELDIN, J.P. (1986). Introduction to Combinators and /1-Calculus. Cambridge Univ.
Press.

IVANOVA-TARASOVA E. (2009). Approche cognitive et formelle de la polyse’mie verbale .' les verbes de
transfert en francais et en russe, These de doctorat, Université Paris-Sorbonne.

KAMP H., REYLE U. (1993). From discourse to logic. Kluwer Academic Publisher.

LANGACKER R.W. (1989, 1991). Foundations of cognitive grammar, volume 1, Theoretical
prerequisites, volume 2, Description Application, Stanford University Press

O’SU1LLIVAN B., GOERZEN J ., STEWART D. (2008). Real world Haskell. Sebastopol : O’Reilly
POTTIER B. (2000). Representations mentales et cate’gorisations linguistiques, Louvain, Paris, Peeters.

REICHENBACH H. (1947). Elements of Symbolic Logic. New York, reprinted in J .M. Moravcsik (eds.),
1974, :Logic and Philosophy for Linguists, A Book of radings, The Hague: Mouton, pp. 122-141.

R0, H.-J., (2008). Traitement automatique de l’analyse d ’infe’rences aspecto-temporelles .' mode’lisation
logique et informatique. Mémoire de Master de Recherche. Université Paris-Sorbonne.

SHAUMYAN S.K. (1987). A Semiotic Theory of Natural Languages. Bloomington: Indiana Univ Press.

SON H. (2006). Representation se’mantico-cognitive des verbes de transfert, These de doctorat,
Université Paris-Sorbonne.

