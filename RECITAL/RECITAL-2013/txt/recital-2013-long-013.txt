TALN-RECITAL 2013, 17-21 Iuin, Les Sables d’Olonne

Représentation des connaissances du DEC:
Concepts fondamentaux du formalisme des Graphes d’Unités

Maxime Lefrancois
WIMMICS, Inria, 2004, route des Lucioles, BP 93, 06902 Sophia Antipolis Cedex
maxime . 1efra.ncois@inria. fr

RESUME
Dans cet article nous nous intéressons au choix d’un formalisme de représentation des connais-
sances qui nous permette de représenter, manipuler, interroger et raisonner sur des connaissances
linguistiques du Dictionnaire Explicatif et Combinatoire (DEC) de la Théorie Sens—Texte. Nous
montrons que ni les formalismes du web sémantique ni le formalisme des Graphes conceptuels
n’est adapté pour cela, et justiﬁons l’introducu'on d’un nouveau formalisme dit des Graphes d’Uni-
tés. Nous introduisons la hiérarchie des Types d’Unités au coeur du formalisme, et présentons les
Graphes d’Unités ainsi que la maniére dont on peut les utiliser pour représenter certains aspects
du DEC.

ABSTRACT
ECD Knowledge Representation : Fundamental Concepts of the Unit Graphs Framework

In this paper we are interested in the choice of a knowledge representation formalism that
enables the representation, manipulation, query, and reasoning over linguistic knowledge of the
Explanatory and Combinatorial Dictionary (ECD) of the Meaning-Text Theory. We show that
neither the semantic web formalisms nor the Conceptual Graphs Formalism suit our needs, and
justify the introduction of a new formalism denoted Unit Graphs. We introduce the core of this
formalism which is the Unit Types hierarchy, and present Unit Graphs and how one may use
them to represent aspects of the ECD.

MOTS-CLES : Représentation de Connaissances Linguistiques, Théorie Sens—Texte, Graphes
d’Unités, Dictionnaire Explicatif et Combinatoire.

KEYWORDS: Linguistic Knowledge Representation, Meaning-Text Theory, Unit Graphs, Explana-
tory and Combinatorial Dictionary.

164 © ATALA

TALN-RECITAL 2013, 17-21 Iuin, Les Sables d’Olonne
1 Introduction

Dans cet article nous nous intéressons au choix d’un formalisme de repre’sentation des connais—

sances qui nous permette de représenter, manipuler, interroger et raisonner sur des connaissances

linguistiques du Dictionnaire Explicatif et Combinatoire (DEC), qui est le lexique au coeur du
sujet d’étude de la Théorie Sens—Texte ('1' ST) (c.f. par exemple Mel’cuk et Arbatchewsky-Jumarie,

1999; Mel’cuk, 2006). Nous envisageons deux scénarios de valorisation d’une telle formalisation :

— Dans un projet orienté vers l’édition lexicographique du DEC, il serait possible de semi-
automatiser le travail des lexicographes par exemple en vériﬁant qu’un ensemble de contraintes
est satisfait, ou en leur suggérant des ébauches d’articles (e.g., liens de fonctions lexicales,
ébauche de déﬁnition lexicographique, tableaux de régime).

— En proposant une syntaxe basée sur les standards de l’ingénierie des connaissances, les
connaissances linguistiques ainsi représentées de maniére structurée pourraient étre publiées
sur le web de données 1 comme l’est aujourd’hui WordNet. Ceci encouragerait leur utilisation
comme ressource lexicale hautement structurée par les consommateurs de données du nuage
du web de données.

La plupart des projets passés ou présents qui ont consisté en l’informatisation du DEC sont
orientés vers l’édition lexicographique. Nous citerons en exemple le projet RELIEF (Lux—Pogodalla
et Polguére, 2011) qui vise a représenter un graphe de type systéme lexical dénommé Réseau
Lexical du Francais (RLF) (Polguére, 2009) tissé par les liens paradigmatiques et syntagmatiques
de fonctions lexicales (e.g., Mel’éuk, 1996). Des travaux de formalisation de certains aspects
du DEC ont précédé le projet RELIEF. Citons les travaux de Kahane et Polguere (2001) pour les
fonctions lexicales, ainsi que le projet Deﬁniens (Barque et Polguére, 2008) de formalisation des
déﬁnitions lexicographiques avec genre prochain et différences spéciﬁques pour le TLFi 2.

En complément de ces travaux de formalisation, notre objectif est de proposer une formalisation
au sens de l’ingénierie des connaissances, compatible avec des formalismes standards. Le terme
formalisation signiﬁe ici non seulement rendre non—ambigu, mais également rendre opérationnel,
i.e., rendre adapté aux opérations logiques ou rationnelles (e.g., la manipulation, l’interrogation,
et le raisonnement des connaissances). Nous adoptons donc une approche d’ingénierie des
connaissances appliquée au domaine de la TST, et la question de recherche de cet article est :
Quel formalisme de représentation des connaissances serait adapté pour représenter les connaissances
du DEC ?

Nous nous intéressons a deux familles de formalismes de représentation des connaissances

existant :

— les formalismes du web sémantique, car le web de données est construit dessus;

— le formalisme des Graphes Conceptuels (GC) (Sowa, 1984; Chem et Mugnier, 2008), puisqu’on
sera amenés a faire des raisonnements logiques sur des graphes.

Notre question de recherche se décompose alors en deux sous—quesu'ons que nous abordons dans

cet article :

— Ces deux formalismes de représentation des connaissances sont—ils adaptés pour représenter
les connaissances du DEC ?

— Le cas échéant, comment devons—nous en revoir les bases aﬁn d’en dériver un nouveau
formalisme de représentation des connaissances qui soit adapté ?

1. Le web de données est une initiative du W3C en pleine effervescence actuellement, http : //linkeddata. org
2. Trésor de la Langue Frangaise informatisé, http : //atilf . atilf . fr

165 © ATALA

TALN—RECITAL 2013, 17-21 Iuin, Les Sables d’Olonne

plutot de relation d’e'quivalences de'clare'es de noeuds unités, notée Eq. Deux noeuds unité déclarés
équivalents représentent la méme unité. De plus, contrairement a la relation core f des GC, la
relation E q n’est pas une relation d’équivalence sur les noeuds unités 17. Cela nous permet de
distinguer connaissances explicites et connaissances implicites, et facilite l’articulation avec les
formalismes du web sémantique.

  

 

|HoMME zhttp : //exempZe.org/Pierre| {cHAr,def}
I‘ ‘ I
' \

FIGURE 2 — Exemple de Graphe d’Unité : représentation syntaxique profonde de la phrase Pierre
pousse doucement le chat.

Les GU permettent de représenter des énoncés a différents niveaux de représentation. Nous en

avons déja rencontré un sémantique sur la ﬁgure 1, et la ﬁgure 2 en représente un syntaxique

profond. L’ensemble des GU déﬁnis sur un GU-support .9’ = (.9, ‘6,M) est noté €§(.S”) et chaque

GU G E ‘.€(.9’) est un n—uplet G E (U, l,A, C,Eq) avec:

— U est l’ensemble des noeuds unite's. Ils sont illustrés par des rectangles comme sur la ﬁgure 2.

— l est une fonction d’étiquetage des noeuds unité. Pour un noeud unité u, l(u) = (t”,m”)
est composé d’un TCU t” E T“ qui spéciﬁe la nature de l’unité représentée, et d’un mar-
queur de noeud unité m” E M” qui permet d’identiﬁer l’unité représentée le cas échéant. Sur
l’exemple de la ﬁgure 2, les noeuds unité sont tous typés par des singletons sauf un qui est
typé {ToMBE, p resent}. De plus, les noeuds unité sont tous génériques sauf pour un marqué
{http : //exemple.org/Pierre}.

— A est l’ensemble des triplets actanciels (u, r, v) E U x S, x U. Pour tout triplet actanciel (u, r, v),
l’unité représentée par v remplit la PosA r de l’unité représentée par u. Ce sont les ﬂeches
doubles sur la ﬁgure 2.

— C est l’ensemble des triplets circonstanciels (u, r, v) E U x S? x U. Pour tout c = (u, r, v) E C,
l’unité représentée par u est liée a l’unité représentée par v par une relation circonstancielle de
symbole r. Ce sont les ﬂeches simples sur la ﬁgure 2.

— Eq E U2 est l’ensemble d’e’quivalences de'clare'es de noeuds unite’. (ul, uz) 6 Eq signiﬁe que ul et
uz représentent la méme unité. Ce sont les arcs en pointillé sur la ﬁgure 2.

4.3 Concepts avancés du formalisme des GU

Les GU sont les briques de base qui vont nous permettre de représenter les connaissance du DEC.
Nous allons présenter grossierement quelques concepts avancés du formalisme des GU.

17. Une relation d’équivalence est une relation réﬂexive, symétrique et transitive.

174 © ATALA

TALN-RECITAL 2013, 17-21 Iuin, Les Sables d’Olonne

Tout d’abord, la déﬁnition des GU est permissive et permet par exemple pour un triplet actanciel
(u, r,v) d’un GU G, que le type de u n’ait pas de PosA r. A l’instar des formalismes du web
sémantique, nous faisons l’hypothese d’un monde ouvert et considérons que le GU, tout comme
la hiérarchie des TCU, représente des connaissances explicites. Nous pouvons donc expliciter
dans G le fait que le type de u doive contenir le radix de r. Nous nous inspirons de OWL—RL
pour déﬁnir l’ensemble des opérations d’explicitation des connaissances, et déﬁnissons ainsi la
sémantique, au sens logique, des GU. Puisque nous avons dérivé les GC pour déﬁnir les GU,
nous adapterons les résultats de raisonnement a base de graphes des GC, et déﬁnirons la notion
d’implication d’un GU par un autre a l’aide d’homomorphismes de graphes. Ces raisonnements
logiques seront utiles en particulier pour les représentations sémantiques.

Ensuite, en nous inspirant encore des GC, nous pouvons déﬁnir la notion de régles comme un
triplet formé d’un GU hypothése H, d’un GU conclusion C, et d’une bijection K entre un sous-
ensemble de noeuds unités génériques de H et un sous-ensemble de noeuds unités génériques de
C. Les régles permettront de représenter les associations sémantéme—lexie, et les correspondances
entre différents niveaux de représentation (tableaux de régime). Les regles ont été tres étudiées
pour les GC et nous pourrons adapter aux GU les résultats les concernant.

Nous pouvons également représenter certaines connaissances de la hiérarchie des TCU qui
concernent un TPU t dans un GU que l’on nomme empreinte de t. L’empreinte de t est un GU
avec un noeud central u ayant pour étiquette l(u) = ({t},@), et pour chaque PosA 5 de t, un
autre noeud unité v avec l(v) = (gt(s), ®) et un triplet actanciel (u,s, v). Une déﬁnition d’une
lexie L est alors formée de deux regles réciproques, dont un GU est l’empreinte d’un sémanteme
t, l’autre GU est la représentation sémantique de la déﬁnition lexicographique de la lexie L, et
la bijection permet entre autre de repérer le sens du genre prochain de L. A chaque déﬁnition
correspond donc deux regles d’explicitation des connaissances.

 

FIGURE 3 — Déﬁnition de POUSSER. A gauche, l’empreinte de (pousser).

5 Conclusion

Nous avons donc étudié comment formaliser, au sens de l’ingénierie des connaissances, le
Dictionnaire Explicatif et Combinatoire (DEC), et ce aﬁn de pouvoir représenter, manipuler,
interroger et raisonner sur des connaissances linguistiques. Nous pouvons maintenant répondre
aux questions que nous avons posées.

175 © ATALA

TALN-RECITAL 2013, 17-21 Iuin, Les Sables d’Olonne

En quoi les formalismes du web sémantique et le formalisme des Graphes Conceptuels (GC) ne
sont—ils pas directement adaptés pour représenter les connaissances du DEC ? La sémantique,
au sens logique, de RDF est insufﬁsante pour représenter les connaissances du DEC, et nous
avons montré que l’utilisation de OWL présente des problemes majeurs. Le formalisme des GC
présente des ressemblances avec la Théorie Sens—Texte mais ne permet pas de représenter la
dualité concept/ relation de la modélisation d’un sémanteme. Nous avons proposé de revisiter les
bases des GC aﬁn d’en dériver le nouveau formalisme des Graphes d’Unités.

Quelle structure mathématique pour une hiérarchie de types d’unités pouvant avoir des positions
actancielles ? Pour prendre en compte la dualité concept/relation des sémantemes, les relations
prédicat—argument sont symbolisées par des Symboles d’Actants (Symbo1A), et nous associons a
chaque SyInbo1A trois Types Primitifs d’Unités (TPU) : un radix y(s) qui introduit une Position
Actancielle (PosA) de symbols, un obligat y1(s) qui rend cette PosA obligatoire, et un prohibet
yo(s) qui rend cette PosA interdite. Ainsi dans l’ensemble pré-ordonné des TPU, une PosA ayant
pour Symbo1A s est introduite par y(s), et est d’abord optionnelle pour tout TPU plus spéciﬁque
que y(s) tant que ce TPU n’est pas plus spéciﬁque que y1(s) ou yo(s) auquel cas la PosA devient
obligatoire ou interdite. Chaque TPU qui possede des PosA représente donc également un type
de relation, qui peut, doit, ou ne doit pas lier une instance de ce type a l’ensemble de ses actants.
Enﬁn, 2 chaque 'I'PU est associé une signature qui spéciﬁe le type des actants de ses unités. Nous
avons étendu les déﬁnitions des types d’unités a leur version conjonctive et avons donc introduit
la hiérarchie des types d’unités.

Quel est l’équivalent des graphes conceptuels pour le formalisme des Graphes d’Unités (GU), et
comment les utiliser pour formaliser des concepts plus avancés de la TST ? Nous avons introduit
une hiérarchie des symboles de circonstants. Nous avons ensuite illustré la déﬁnition des GU, qui
représentent des noeuds unités interconnectés par des relations de dépendance, et des relations
d’équivalences déclarée. Nous avons briévement présenté les concepts plus avancés de la TST
que les GU permettent de représenter, et sur lesquels nous travaillons actuellement :
— Nous pouvons déﬁnir la sémantique des GU, et donc raisonner avec des représentations
d’énoncés.
— Les regles nous permettent de représenter les associations sémanteme—lexie, et les correspon-
dances entre différents niveaux de representation (tableaux de régime).
— Nous pouvons représenter les déﬁnitions lexicographiques du DEC a l’aide de deux régles
réciproques.
Nous travaillons également sur la factorisation des regles qui nous permettra de représenter des
liens de fonctions lexicales, ainsi que sur une syntaxe basée sur les standards du web sémantique
pour permettre l’échange standardisé de connaissances du DEC, en particulier sur le web de
données.

Remerciements

Je tjens a remercier chaleureusement S. Kahane ainsi que les relecteurs des différentes versions
de cet article. Un grand merci également a E Gandon pour son encadrement, ses précieux conseils
et sa disponibilité.

176 © ATALA

TALN-RECITAL 2013, 17-21 Iuin, Les Sables d’Olonne
Références

BAGET, J. E, CROITORU, M., GUTIERREZ, A., LECLERE, M. et MUGNIER, M. L. (2010). Translations
between RDF (S) and conceptual graphs. Conceptual Structures : From Information to Intelligence,
page 28-41.

BARQUE, L. et POLGUERE, A. (2008). Enrichissement formel des déﬁnitions du Trésor de la
Langue Francaise informatisé (TLFi) dans une perspective lexicographique. 22.

CHEIN, M. et MUGNIER, M. L. (2008). Graph-based Knowledge Representation : Computational
Foundations of Conceptual Graphs. Springer.

CORBY, 0., DIENG, R. et HEBERT, C. (2000). A conceptual graph model for W3C resource
description framework. In GANTER, B. et MINEAU, G. W., éditeurs : Conceptual Structures : Logical,
Linguistic, and Computational Issues, numéro 1867 de Lecture Notes in Computer Science, pages
468-482. Springer Berlin Heidelberg.

KAHANE, S. et POLGUERE, A. (2001). Formal foundation of lexical functions. In Proceedings of
ACL/EACL 2001 Workshop on Collocation, page 8-15.

KRISNADHI, A., MAIER, F. et HITZLER, P. (2011). OWL and Rules. Reasoning Web. Semantic
Technologies for the Web of Data, page 382-415.

LEFRANCOIS, M. (2013). The Unit Graphs Mathematical Framework. Rapport de recherche
RR-8212, INRIA.

LEFRANCOIS, M. et GANDON, E (2011). ILexicOn : Toward an ECD—Compliant Interlingual Lexical
Ontology Described with Semantic Web Formalisms. In Proc. of the 5th International Conference
on Meaning-Text Theory (MT T 201 1), page 155-164, Barcelona, Spain. INALCO.

LUX-POGODALLA, V et POLGUERE, A. (2011). Construction of a French Lexical Network : Metho-
dological Issues. In Proceedings of the International Workshop on Lexical Resources, Ljubljana.

MEL’(":UK, I. A. (1996). Lexical functions : a tool for the description of lexical relations in a
lexicon. Lexical functions in lexicography and natural language processing, 31:37—102.

MEL’(':UK, I. A. (2004a). Actants in Semantics and SyntaxI : Actants in Semantics. Linguistics,
42(1):1—66.

MEL’(':UK, I. A. (2004b). Actants in Semantics and Syntax II : Actants in Syntax. Linguistics,
42(2):247—291.

MEL’CUK, I. A. et ARBATCHEWSKY-JUMARIE, N. (1999). Dictionnaire explicatifet combinatoire du
francais contemporain : recherches lexico—se’mantiques, volume 4. PU Montréal.

MEL’éUK, I. A. (2006). Explanatory Combinatorial Dictionary. Open problems in linguistics and
lexicography, page 225.

POLGUERE, A. (2009). Lexical systems : graph models of natural language lexicons. Language
resources and evaluation, 43(1):41—55.

SowA, J. E (1984). Conceptual structures : information processing in mind and machine. System
programming series. Addison—Wesley.

TESNIERE, L. (1959). Elements de syntaxe structurale. C. Klincksieck (Colombes, Impr. ITE).

177 © ATALA

TALN-RECITAL 2013, 17-21 Iuin, Les Sables d’Olonne

La suite de l’article est organisée de la maniere suivante. Nous verrons dans un premier temps
que ni les formalismes du web sémantique ni les GC ne sont adaptés pour représenter les
connaissances du DEC, et nous étayerons le choix suivant : Nous modiﬁons les bases duformalisme
des GC, tout en gardant en téte l’ide’e d’utiliser les formalismes du web sémantique comme syntaxe
pour l’e’change des connaissances et pour la publication sur le web de données (§2). Puisque
nous représenterons des unités linguistiques de différentes natures (e.g., sémantéme, lexie,
grammeme, mot-forme), nous choisissons d’utiliser le terme unite’ d’une maniere générique et
nommons le résultat de cette adaptation formalisme mathématique des Graphes d’Unités (GU).
Nous introduirons donc les types unités (§3) puis les graphes d’unités per se et leur utilité pour
représenter des concepts plus avancés de la TST (§4).

Nous attirons l’attention du lecteur sur le fait que cet article introduit l’élaborau'on du formalisme
mathématique des GU qui fait l’objet d’un rapport de recherche (Lefrangois, 2013). Nous l’invitons
a s’y référer pour toute précision déﬁnitoire et mathématique.

2 Motivations pour introduire un nouveau formalisme de re-
présentation des connaissances

Les formalismes de représentation de connaissances utilisent abondamment la notion de typage.
Les objets du domaine représenté sont nommés instances (ou objets ou individus), et sont typés
(ou classiﬁés). Ils sont liés entre eux par des relations qui sont el1es—mémes typées. Dans cette
section nous répondons a la question suivante : En quoi les formalismes du web sémantique et le
formalisme des GC ne sont-ils pas directement adaptés pour représenter les connaissances du DEC ?

2.1 Les formalismes du web sémantique

On observe un engouement mondial pour les formalismes du web sémantique, et la syntaxe
RDF 3 est le standard d’échange de données structurées sur le web de données. L’expressivité
de RDF serait sufﬁsante pour représenter les connaissances du DEC. Cependant, la sémantique
de RDE au sens logique, se limite a celle des graphes orientés et étiquetés, et nous souhaitons
permettre également de manipuler et de raisonner avec les connaissances linguistiques du DEC.
Nous devons donc envisager d’introduire plus de sémantique a l’aide de RDFS4 ou OWL5,
tout en limitant au maximum le niveau d’expressivité pour conserver de bonnes propriétés
computationnelles. OWL introduit de la sémantique a l’aide d’axiomes 6 et de constructeurs de
classes et de relations 7. Justement le projet ULiS (Lefrancois et Gandon, 2011) envisageait une
architecture de base de connaissances multilingue compatible avec la TST et basée sur OWL.
Dans le projet ULiS, les axiomes et constructeurs de classe de OWL sont utilisés pour que chaque
lexie supporte la projection de sa déﬁnition lexicographique sur e11e—méme. Nous avons identiﬁé
trois problémes majeurs avec l’uu'lisation de OWL pour ce faire :

. RDF - Resource Description Framework, http : //w3 . org/RDF/

. RDFS - RDF Schema, http: //www . w3 . org/TR/rdf — schema/

. OWL - Web Ontology Language, http: //www. w3 . org/TR/ow12—overview/

. e.g., Sous-classe SubC1assOf( CE1 CE2 ) ; Relation fonctionnelle : Functiona10bjectProperty( OPE)
. e.g., Cardinalité exacte ObjectExactCardina1ity( 11 OPE) ; Relation inverse Obj ectInverseOf ( OPE)

166 © ATALA

\lO’\U'I-#93

TALN-RECITAL 2013, 17-21 Iuin, Les Sables d’Olonne

— Pour chaque déﬁnition de lexie on doit introduire autant de nouvelles relations sémantiques
qu’il existe de noeuds dans le graphe de déﬁnition de la lexie. Cela impose une surcharge de
relations superﬂues;

— Ces relations doivent étre combinées a l’aide de l’axiome de sous—relation d’une relation chai-
née Sub0bj ectPropertyOf( 0bjectPropertyChain( OPE1 . . .0PE,, ) OPE), aﬁn
de projeter petit a petit le graphe de déﬁnition de la lexie sur elle méme. Or dans OWL,
l’ensemble des relations doit étre réguliers pour garantir la décidabilité des problemes de
raisonnement basiques, et nous avons montré (Lefrancois, 2013) que cette régularité n’est pas
assurée dans la petite ontologie donnée en exemple par Lefrancois et Gandon (2011). Cette
restriction est donc trop importante pour représenter les déﬁnitions du DEC.

— Enﬁn, la sémantique de l’axiome de sous—relation d’une relation chainée fait que l’inférence
n’est de toute facon possible que dans une direction seulement (sous—relation, et non pas
équivalence). C’est a dire que lorsqu’on est en présence du graphe de déﬁnition de la lexie, on
peut inférer la présence de la lexie, mais pas le contraire.

Une alternative pour représenter les déﬁnitions d’unités lexicales serait de les représenter a l’aide

de deux régles SPARQL9 CONSTRUCT réciproques. On se rapporte alors au probléme des langages

de régles et de leur réconciliation avec OWL (c.f., Krisnadhi et al., 2011), qui ne fait aujourd’hui
l’oeuvre d’aucun consensus ni standard.

Ces différents problemes nous poussent a considérer un autre formalisme pour représenter
les connaissances du DEC. Nous souhaitons néanmoins un export en RDF pour échanger les
connaissances linguistiques sur le web de données.

2.2 Les Graphes Conceptuels

Le formalisme des Graphes Conceptuels (GC) (Sowa, 1984; Chein et Mugnier, 2008) présente de

grandes ressemblances avec la TST. Dans leur version basique, les GC représentent des instances

typées interconnectées par des relations n—aires également typées. D’ailleurs, l’objectif premier de

Sowa était le traitement du langage naturel, et il s’est originellement inspiré des mémes travaux

que les fondateurs de la TST pour mettre au point le modéle des GC : les travaux de Tesniére

(1959). Deux des ressemblances les plus marquantes entre les GC et la TST sont les suivantes :

— Dans les GC il est possible de déﬁnir des types de concepts et de relations a partir d’un graphe
conceptuel, ce qui est trés similaire aux déﬁnitions des lexies dans la TST;

— La TST utilise intensivement des régles, en particulier pour les correspondances entre niveaux
de représentation d’énoncés. Les régles et leur sémantique, au sens logique, ont été trés
étudiées dans la littérature des GC.

Un autre atout des GC est le fait qu’il existe des transformations entre les GC et RDF/ S (c.f.,

Corby et al., 2000; Baget et al., 2010). On pourrait donc utiliser ces transformations pour réécrire

les GC en RDF pour publication sur le web de données. De plus, pour en revenir au projet ULiS,

on pourrait adapter l’architecture du projet ULiS aux GC.

Cependant il n’est pas non plus naturel de représenter les connaissances du DEC 51 l’aide des GC.

Voici deux raisons a cela :

— Un sémantéme est modélisable a priori comme un type de concept puisqu’il est instancié dans
des représentaﬁons sémantiques d’énoncés. D’un autre c6té, si la lexie associée est prédicative

8. c.f. par exemple, http : //www . w3 . org/TR/ow12— syntax#The_Restrictions_on_the_Axi om_C1osure
9. SPARQL, http: //www . w3 . org/TR/sparqlll — overview/

167 © ATALA

TALN-RECITAL 2013, 17-21 Iuin, Les Sables d’Olonne

et posséde des positions actancielles sémantiques, le sémantéme peut de maniére duale étre
modélisé par une relation n—aire de sorte que ses instances lient d’autres sémantemes. Les GC
ne permettent pas de représenter naturellement cette dualité. En effet, dans les GC on doit
respecter une alternance concept/ relation, et une représentation sémantique d’énoncé comme
celle de la ﬁgure 1 ne peut pas étre directement représentée par un GC.

— Les positions actancielles sémantiques d’une lexie peuvent différer de celles de la lexie dont
son sens dérive 1° (c.f., Mel’cuk, 2004a,b). Or dans les GC, le mécanisme d’héritage des types
de relations, qui modélise le fait que un type de relation est plus spe’cifique qu’un autre, est
contraint de sorte que deux relations d’arité différente doivent étre incomparables. On ne
peut donc pas utiliser ce mécanisme naturel d’héritage pour modéliser la spécialisation des
sémantemes.

   
 

(essayer)

FIGURE 1 — Illustration du r6le dual concept/relation des sémantémes dans la TST} par la
représentation sémantique de Pierre essaie de pousser le chat.

2.3 Le nouveau formalisme des Graphes d’Unités

Pour résumer, ni les formalismes du web sémantique ni les GC ne permettent la représentation
naturelle des connaissances du DEC. Le formalisme des GC étant le plus proche de la TST, nous
décidons donc d’en revisiter les bases aﬁn de le rendre compatible avec la TST.

Puisque nous représenterons des unités linguistiques de différentes nature (e.g., sémantéme,
lexie, gramméme, mot-forme), nous choisissons d’ut1'liserle terme unite’ d’une maniére générique
et nommons le résultat de cette adaptation formalisme mathématique des Graphes d’Unite's (GU).

Dans un autre travail en cours, nous adaptons les transformations existantes entre les GC
et RDF/S (c.f., Corby et al., 2000; Baget et al., 2010) aﬁn d’utiliser les formalismes du web
sémantique comme format d’échange des connaissances linguistiques sur le web de données.

Dans la suite de cet article nous apportons une réponse a la question de recherche suivante : Com-

ment devons—nous revoir les bases du formalisme des GC aﬁn de le rendre adapté a la représentation

des connaissances du DEC ? Cette question se décompose en deux sous—questions :

— Quelle structure mathématique pour une hiérarchie de types d’unités pouvant avoir des
positions actancielles (§3) ?

— Quel est l’équivalent des graphes conceptuels pour le formalisme des GU, et comment les
utiliser pour formaliser des concepts plus avancés de la TST (§4) ?

10. Par exemple le sémantéme (pluie) est plus spéciﬁque que (tomber) mais le sens de ce qui tombe et d’o1‘1 ga tombe est
ﬁgé a (gouttes d’eau) et (ciel/nuage) (Mel’Euk, 2004a).

168 © ATALA

TALN-RECITAL 2013, 17-21 Iuin, Les Sables d’Olonne
3 La Hiérarchie des Types d’Unités

Dans cette section nous abordons la question suivante : Comment devrions—nous revoir les bases
du formalisme des GC aﬁn de le rendre adapté 61 la représentation d’une hiérarchie des types d’unités
avec une structure actancielle ? Tout d’abord, dans le formalisme des Graphes d’Unités (GU), les
objets du domaine représenté sont nommés unités, et sont typés. A l’instar des formalismes de
représentation de connaissances existants et de Mel’éuk (2004a), nous établissons une distinction
claire entre :

— Les types d’unités (e.g., type d’unité sémantique, type d’unité lexicale), décrits dans le DEC;
— Les unités (e.g., unité sémantique, unité lexicale), représentées dans les Graphes d’Unités

(GU).

Les types d’unités vont spéciﬁer a travers leurs positions actancielles et signatures comment leurs
instances (i.e., unités) devraient étre liées entre elles dans un GU. Les types d’unités et leur
structure actancielle sont décrites dans une structure dénommée hiérarchie et notée 9.

3.1 Types d’Unités Primitifs (TPU) et Positions Actancielles

Tout d’abord, .9 contient un ensemble ﬁni de Types Primitifs d’Unités (TPU) déclarés noté TD.
Cet ensemble contient des TPU linguistiques de différente nature (e.g., sémantique, lexicale,
grammaticale). Aﬁn de nommer les positions actancielles, on introduit un ensemble de relations
binaires dénommées Symboles d’Actants (S_ymbolA), noté $57. $3 contient des numéros pour la
structure actancielle des types d’unités sémantiques, et d’autres symboles habituels pour les autres
niveaux de représentations considérés (e.g, chiffres romains I a VI pour le niveau syntaxique
profond de la TST).

Peut importe qu’il soit sémantique, lexical ou grammatical, un TPU t a un ensemble (qui peut
étre vide) de Positions Actancielles (PosA) dont les symboles sont choisis dans l’ensemble des
SymbolA. Certaines PosA peuvent étre obligatoires, d’autres optionnelles (Mel’cuk, 2004a),
et nous postulons également que certaines PosA peuvent étre interdites (i.e., désactivées en
quelque sorte). Par exemple le type de lexie TO EAT ((manger)) a au moins une PosA sémantiques
obligatoire qui est l’animal qui mange, et une PosA optionnelle qui est le récipient dans lequel
l’animal mange. Si l’on cherche maintenant a afﬁner le sens de TO EAT pour déﬁnir une nouvelle
lexie, nous identiﬁons trois cas basiques qui peuvent arriver :

— Une PosA optionnelle peut devenir obligatoire.

— Une PosA optionnelle peut devenir interdite, e.g., le récipient dans T0 GRAZE ((brouter)) ;

— Une nouvelle PosA (a priori optionnelle) peut étre introduite;

Pour représenter ces différents types de PosA et pour que leur présence dans la hiérarchie des
types d’unités soit cohérente, on introduit trois fonctions sur l’ensemble des Symbo1A :

— y associe a chaque Symbo1A s E S :7 son radix 11 7(5) qui introduit une PosA de symbole 5. On

note 1" l’ensemble d’arrivée de la fonction y, i.e., l’ensemble des radices 12.
— yl associe a chaque Symbo1A 5 son obligat 13 y1(s) qui rend la PosA de symbole s obligatoire.
On note 1"1 l’ensemble d’arrivée de la fonction y, i.e., l’ensemble des obligant 14.

11. radix est un mot latin qui signiﬁe (racine).

12. radices est le pluriel de radix.

13. obligat est la forme conjuguée du verbe latin obligo, 3p sing. pres. ind., (il oblige).

14. obligant est la forme conjuguée du verbe latin obligo, 3p plun pres. ind., (ils obligent).

169 © ATALA

TALN—RECITAL 2013, 17-21 Iuin, Les Sables d’Olonne

— yo associe a chaque Syrnbo1A 5 son prohibet 15 y0(s) qui rend la PosA de symbole s interdite.

On note 1'0 l’ensemble d’arrivée de la fonction yo, i.e., l’ensemble des prohibent 16.
L’ensemble des Types Primitifs d’Unités (T PU) est donc noté T et est égal a l’union disjointe de
l’ensemble des TPU déclarés, des radices, des obligant et des prohibent, plus le T PU universel
principal T et le TPU absurde principal J_.

r%‘r,,urur1urou{1}u{T} (1)

On peut alors introduire une relation de spécialisation sur l’ensemble T des TPU sous la forme
d’un pré-ordre 5. t1 5 t2 modélise le fait que le TPU t1 est plus spéciﬁque que le TPU t2. La
relation 5 est calculée a partir d’un ensemble de comparaisons déclarées CA E T2, et de sorte
que :

— T (resp. J.) soit l’élément maximal (resp. minimal) ;

— pour chaque Symbo1Al’obligat et le prohibet soit plus spéciﬁque que le radix.

Chaque PosA ayant un symbole, l’ensemble des PosA d’un TPU t E T est déﬁni par l’ensemble
de leurs syrnboles a(t) E S 3-. Formellement, l’ensemble a(t) est déﬁni comme l’ensemble des
SymbolA dont le radix est plus général ou équivalent a t, et donc tout TPU plus spéciﬁque qu’un
SymbolA s E S :7 hérite d’une PosA de symbole s.

a(t)g{5€5:7 | t SY(5)} (2)

De la méme maniere, l’ensemble des PosA obligatoires (resp. interdites) d’un TPU t est noté
a1(t) (resp. ao(t)) et est déﬁni comme l’ensemble des SymbolA dont l’obligat (resp. le prohibet)
est plus général ou équivalent a t.

a1(t)g{s€5y I t SY1(s)} (3)
ao(t) E is E 5:7 I t S Yo(s)} (4)

Finalement, l’ensemble des PosA optionnelles d’un TPU t est noté a-_,(t) et est l’ensemble des
PosA qui ne sont ni obligatoires ni interdites :

ayct) E act) ~ a1(t) — (1003) (5)

Ainsi en descendant la hiérarchie des types d’unités, une PosA de symbole s est introduite par
le radix y(s) et déﬁnit d’abord une PosA optionnelle pour tout TPU t plus spéciﬁque que y(s),
tant que t n’est pas plus spéciﬁque que l’obligat y1(s) (resp. le prohibet y0(s)) de 5 auquel cas la
PosA devient obligatoire (resp. interdite). La structure actancielle des types d’unités ainsi déﬁnie
spéciﬁe comment les unités pourront, devront, ou ne devront pas étre liées entre elles dans un
GU.

15. prohibet est la forme conjuguée du verbe latin prohibeo, 3p sing. pres. ind., (il interdit).
16. prohibent est la forme conjuguée du verbe latin prohibeo, 3p plur. pres. ind., (ils interdisent).

170 © ATALA

TALN-RECITAL 2013, 17-21 Iuin, Les Sables d’Olonne
3.2 Signature d’un TPU

Dans les déﬁnitions lexicographiques de la TST, le type des unités qui prennent une PosA
sémantique est parfois écrit devant le nom de la variable en question. Dans la hiérarchie des types
d’unités, les signatures des TPU nous permettent de représenter cette information de maniere
explicite. Plus généralement, les unités qui prennent une certaine PosA d’un TPU doivent avoir
un certain type. Par exemple, seules les unités sémantiques peuvent prendre une PosA d’une
unité sémanﬁque, et seules les unités de type (animal) peuvent prendre la PosA 1 d’une unité de
type (to eat).

Formellement, l’ensemble des signatures des TPU est noté {gt},eT. Pour tout TPU t, g, est une
fonction qui associe a chaque PosA 5 de t un ensemble de T'PU 9(5) qui caractérisent le type des
unités qui peuvent prendre cette position. Par exemple la signature de (to eat) pour sa PosA 1 est
notée gm eat)(1) = {(animal)}.

Les signatures participent a la spécialisation de la structure actancielle des TPU, ce qui signiﬁe
que si t1 5 t2 et 5 est une PosA commune a t1 et t2, alors la signature de t1 pour s doit étre
plus spéciﬁque que la signature de t2 pour 5. Par exemple, la signature de (to sup) pour 1, i.e.,
{(personne)}, est plus spéciﬁque que cette de (to eat) qui est {(animal)}.

3.3 Hiérarchie des Types d’Unités

Une unité peut en réalité avoir une conjonction, au sens logique, de plusieurs types. En par-
ticulier, il peut s’agir d’un type de lexie et de plusieurs types d’unités grammaticales, comme
{de f, plur, CHAT} pour (les chats). Pour représenter ce phénoméne, nous introduisons l’ensemble
T” des Types Conjonctifs d’Unités (T CU) possibles sur T comme étant l’ensemble des parties de T :

1“ E 2T (6)

La conjonction des types donne un premier apercu d’un type d’inférence. En effet, pour une unité
de type {(personne)}, on peut augmenter son type a {(personne), (animal)} qui est équivalent
mais plus "explicite". Plus généralement, un TCU t” E T“ peut étre fermé en y ajoutant tout T'PU
plus générique qu’au moins un de ses éléments.

Enﬁn, certains TCU comme {de f, inde f} sont déclarés absurdes, ce qui signiﬁe qu’aucune unité
ne peut étre a la fois des types def et inde f . On notera l’ensemble des TCU déclarés absurdes
L2, avec L2 9 T“. Par déﬁnition, tout type plus spéciﬁque que le TCU absurde principal {J_}
est absurde, et pour tout Symbo1A 5 6 S57, le TCU formé de son obligat et son prohibet (i.e.,
{y1(s),y0(s)}) est absurde.

Nous pouvons maintenant introduire la hiérarchie des types d’unités qui forme le coeur du

formalisme des GU. Une hiérarchie de TCU est un n—uplet
def

9 = (TD, S3-,y,y1,y0, CA, {gt},eT, L2) qui est composé d’un ensemble de Types Primitifs d’Unités
déclarés TD, d’un ensemble de Symboles d’Actants S57, de trois applications y, yl et yo qui
associent a chaque Symbo1A ses TPU radix, obligat et prohibet, d’un ensemble de comparaisons
déclarées entre TPU CA, de l’ensemble {gt}tET des signatures des TPU, et d’un ensemble de Types
Conjonctifs d’Unités déclarés absurdes L2,

171 © ATALA

TALN-RECITAL 2013, 17-21 Iuin, Les Sables d’Olonne

Les déﬁnitions des positions sont étendues aux TCU. L’ensemble des PosA (respl. PosA obliga-
toires, resp2. PosA interdites) d’un TCU t” est noté a”(t”) (resp1. a'1‘(t”), resp2. aQ(t”)) et est
l’union des PosA (respl. PosA obligatoires, resp2. PosA interdites) des TPU qui le composent.
L’ensemb1e des PosA optionnelles d’un TCU tn est note’ a5_,‘(t”) et est également les PosA qui ne
sont ni obligatoires ni interdites. Les signatures sont également naturellement adaptées aux TCU.
L’ensemb1e des signatures des TCU {g't‘n}tnE,n est un ensemble de fonctions de S :7 vers 1“. Pour
chaque TCU t”, gg, est une fonction avec domain(g't‘n) = a”(t”) qui associe a chaque PosA 5 de
t” l’union des signatures gt(s) des TPU t qui composent t”.

a”(t”) 9 U a(t) (7)
tet“
aT(t”)  U a1(t) (8)
tet“
a3(t”)  U ao(t) (9)
tet“
am”) a”(t”)—aQ(t“) —a3(t”) (10)
apncs)  U gt(5) <11)
tet“|sea(t)

Nous avons également introduit une relation de spécialisation sous la forme d’un pré-
ordonnancement % de l’ensemble des TCU T“ tel que (c.f., Lefrancois, 2013) : % contient
l’extension naturelle d’un pré—ordre sur un ensemble a un pré—ordre sur l’ensemble de ses sous-
ensembles; le bas de T” est aplati de sorte que chaque TCU déclaré absurde soit inférieur a {J_} ;
si la signature d’un TCU pour une PosA est inférieure a {J_}, alors ce TCU est inférieur a {J_}. Le
bas de l’ensemble pré—ordonné (Tﬂ, %) correspond a l’ensemble des TCU équivalents a {J_} et est
aplati : il contient {J_}, chacun des TCU déclarés absurdes, et plus généralement l’ensemble des
TCU qui ne peuvent pas étre instanciés. On le nomme ensemble des TCU absurdes.

Nous montrons que les bonnes propriétés des TPU sont préservées par passage aux TCU, a part
pour certains cas dégénérés (i.e., type vide et types absurdes).

4 Graphes d’Unités (GU)

Les TCU ainsi déﬁnis typeront les unités qui seront représentées par des noeuds unités dans les
Graphes d’Unités. Nous allons clore cet article par la déﬁnition des GU per se et leur utilité pour
formaliser des concepts plus avancés de la TST.

4.1 Hiérarchie des Symboles de Circonstants (SymbolC)

Les types d’unités spéciﬁent comment les noeuds unités sont liés a d’autres noeuds unités dans
un GU. Comme pour tout argument d’un prédicat, une PosA d’une unité ne peut étre occupée
que par une seule unité a la fois. Cependant on peut également rencontrer des dépendances

172 © ATALA

TALN-RECITAL 2013, 17-21 Iuin, Les Sables d’Olonne

d’un autre type dans certaines représentations d’énoncé : des circonstants (Mel’cuk, 2004a).
Les relations circonstancielles sont des relations instance-instance contrairement aux relations
actancielles qui sont des relations prédicat—argument. C’est le cas des relations syntaxiques
profondes non actancielles ATTR, COORD, APPEND par exemple, mais nous pourrons également
utiliser ces relations pour représenter le lien entre une lexie et son sémantéme par exemple.

Nous introduisons donc un ensemble ﬁni de Symboles de Circonstants (SymbolC) noté Szg. Pour
catégoriser et hiérarchiser l’ensemble des SymbolC, nous introduisons également un pré—ordre
é sur Szg construit par fermeture reﬂexo—transitive d’un ensemble de comparaisons déclarées
C5‘: Q Sf. Enﬁn, a chaque SymbolC est associé une signature qui spéciﬁe de quel type doivent
étre les unités liées par une relation avec ce symbole. L’ensemble des signatures des SymbolC
{a's}sE5%, est un ensemble de couples de TCU : {(domain(s), range(s))}sE5%,. En descendant la
hiérarchie des SymbolC et a l’instar des signatures des TCU, nous imposons que la signature d’un
SymbolC ne peut que devenir de plus en plus spéciﬁque.

On peut donc introduire la hiérarchie des SymbolC notée ‘6 g (S<g, CST, .9, {a's}sE5%,) et composée
d’un ensemble ﬁni de Symboles de Circonstants Szg, d’un ensemble de comparaisons déclarées de
SymbolC Csg, d’une hiérarchie de types d’unités .9, et de l’ensemble des signatures des SymbolC

{as }sE$<g '

4.2 Déﬁnition des Graphes d’Unités

Les Graphes d’Unités permettent la description d’énoncés a différents niveaux de représentation.
A l’instar des GC, les GU sont déﬁnis sur un support .9’ g (9, ‘6,M) qui est composé d’une
hiérarchie de types d’unités 9, d’une hiérarchie de SymbolC ‘6, et d’un ensemble de marqueurs
d’unités M. Précisons ce que nous entendons par marqueurs d’unités. Nous établissons une
distinction entre :
— les unités, qui sont les objets du domaine représenté;
— les marqueurs d’unités, qui sont choisis dans l’ensemble M, et qui identiﬁent chacun une unité

spéciﬁque;
— les noeuds unité, qui sont interconnectés dans des GU et qui représentent chacun une unité;
— les marqueurs de noeuds unité, qui sont choisis dans l’ensemble noté M“ des parties de M :

M“ déf 2”’, et qui étiquettent les noeuds unité aﬁn de spéciﬁer quelle unité chaque noeud unité

représente.
Ceci peut paraitre complexe au premier abord, mais il s’agit en réalité d’une extension pour la
TST qui nous permet d’étre proche des GC, et une articulation simple avec les formalismes du
web sémantique. En effet, chaque marqueur d’unité correspondra a une URI. Si un noeud unite’
est étiqueté par le marqueur de noeud unité ® (on dira que c’est un noeud générique d’unité),
alors l’unité représentée est inconnue, il sera traduit par un blank-node en RDE Dans la littérature
de la TST, on considere que tous les noeuds des représentations d’énoncés sont génériques. Par
contre, si un noeud unite’ est marque’ {m1, m2}, alors les marqueurs d’unité ml et "12 identiﬁent
en réalité la meme unité, leurs ressources RDF correspondantes seront liées par une relation
owl: sameas.

Dans leur version simple, les GC possedent une relation d’équivalence de noeuds concepts
nommée coréférence. Puisque cette relation ne correspond pas au terme linguistique et que nous
représenterons la coréférence linguistique autrement, nous désactivons l’ambigu'ité en parlant

173 © ATALA

