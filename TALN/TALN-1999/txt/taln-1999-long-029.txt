Conf
erence TALN 1999, Carg
ese, 12 17 juillet 1999
H
eritage Multiple et Templates dans l'Implantation de
HPSG
Graham Wilcock
Centre for Computational Linguistics
University of Manchester Institute of Science and Technology
PO Box 88, Manchester M60 1QD, United Kingdom
graham@ccl.umist.ac.uk
R
esum
e
L'analyse des propositions relatives en anglais telle que d
ecrite par Sag
1997
se base
sur une classi cation
a deux dimensions des constructions syntaxiques en HPSG. Nous
pr
esentons ici1 une impl
ementation de cette analyse, fond
ee sur l'h
eritage multiple et les
templates
a deux dimensions dans le syst
eme ProFIT
Erbach, 1995
1. Introduction
L'analyse des propositions relatives en anglais, propos
ee par Sag
1997
dans le cadre
de HPSG, se base sur une classi cation
a deux dimensions des constructions syntax-
iques. Dans la premi
ere dimension, les constructions sont classi
ees dans une hi
erarchie
de syntagmes fond
ee sur les sch
emas de dominance imm
ediate en HPSG
head-subject-
phrase, head-complement-phrase, head- ller-phrase,
. Dans la deuxi
eme dimension,
:::

les constructions sont classi
ees dans une hi
erarchie de propositions
declarative clause,
interrogative clause, wh-relative, non-wh-relative,
. Chaque construction de proposi-
:::

tion relative en anglais
par exemple, wh-subject relative clause
peut donc appartenir
aux deux dimensions, classi
ee et par type de syntagme
head-subject
et par type de
proposition
wh-relative
Nous d
ecrivrons ici une impl
ementation informatis
ee qui traite toute la gamme de con-
structions de propositions relatives en anglais telles qu'analys
ees par Sag
1997
. Cette
impl
ementation, fond
ee sur l'h
eritage multiple et les templates
les patrons

a deux di-
mensions, utilise le syst
eme ProFIT: Prolog with Features, Inheritance and Templates

Erbach, 1995
. Le syst
eme ProFIT donne
a Prolog une extension pour traiter les struc-
tures de traits typ
ees, qui se base sur l'h
eritage multiple
Section 2
. ProFIT n'o re
pas l'impl
ementation directe de contraintes dynamiques attach
ees aux types sp
eci ques.
Il faut donc impl
ementer les contraintes de types au moyen des templates
Section 3
1   Voir le poster pr
esent
e
a TALN 96
Wilcock & Matsumoto, 1996

Graham Wilcock

Ces techniques sont ensuite employ
ees dans l'analyse des constructions de propositions
relatives en anglais
Section 4
L'analyse pr
esent
ee par Sag
1997
contient aussi d'autres id
ees: les r
egles lexicales
pour la repr
esentation des ph
enom
enes d'extraction sans cat
egorie vide, l'amalgamation
lexicalis
ee des traits non-locaux, et un traitement nouveau des compl
ementeurs. Ces id
ees
ont aussi
et
e incluses dans cette impl
ementation, mais nous ne les d
ecrivons pas ici.

2. H
eritage multiple
Mellish
1988
pr
esente une impl
ementation e cace de la classi cation crois
ee multi-
dimensionnelle dans le cadre de la grammaire syst
emique
Systemic Functional Gram-
mar, SFG
. S'inspirant des techniques de Mellish, Erbach
1994
propose
a son tour
une impl
ementation e cace de l'h
eritage multiple pour les structures de traits typ
ees
en HPSG et en SFG. Dans son syst
eme d'h
eritage multi-dimensionnelle, une structure
de traits peut h
eriter des traits de plusieurs types sup
erieurs qui appartiennent
a des
hi
erarchies distinctes.

phrase    hd_ph, non_hd_ph * clause, non_clause .
hd_ph    hd_adj_ph, hd_nexus_ph
intro hd_dtr:sign .
hd_adj_ph    simp_hd_adj_ph, hd_rel_ph
intro adj_dtr:sign .
hd_nexus_ph    hd_fill_ph, hd_subj_ph, hd_spr_ph, hd_comp_ph .
hd_fill_ph    fin_hd_fill_ph, inf_hd_fill_ph
intro fill_dtr:sign .
fin_hd_fill_ph    hd_fill_decl_cl, fin_wh_fill_rel_cl .
inf_hd_fill_ph    inf_wh_fill_rel_cl .
hd_subj_ph    fin_hd_subj_ph, hd_subj_non_cl
intro subj_dtr:sign .
fin_hd_subj_ph    hd_subj_decl_cl, wh_subj_int_cl, wh_subj_rel_cl,
bare_rel_cl .
hd_spr_ph intro spr_dtr:sign .
hd_comp_ph    hd_comp_non_cl, yes_no_int_cl, simp_inf_rel_cl, red_rel_cl
intro comp_dtrs .
clause    imp_cl, decl_cl, int_cl, rel_cl .
decl_cl    hd_subj_decl_cl, hd_fill_decl_cl .
int_cl    wh_subj_int_cl, yes_no_int_cl .
rel_cl    wh_rel_cl, non_wh_rel_cl, red_rel_cl .
wh_rel_cl    wh_subj_rel_cl, wh_fill_rel_cl .
wh_fill_rel_cl    fin_wh_fill_rel_cl, inf_wh_fill_rel_cl .
non_wh_rel_cl    bare_rel_cl, simp_inf_rel_cl .
non_clause    hd_subj_non_cl, hd_comp_non_cl, hd_adj_ph .
Figure 1: Hi
erarchies de types syntagmatiques et propositionels
L'innovation pr
esent
ee par Sag
1997
est de sp
eci er une classi cation crois
ee qui se
base sur une hi
erarchie de syntagmes et une hi
erarchie orthogonale de propositions. Un
certain nombre de contraintes est sp
eci
e, dont il y a des contraintes attach
ees
a des

H
eritage Multiple et Templates dans l'Implantation de HPSG

types syntagmatiques
phrase types
speci ques et aussi des contraintes attach
ees
a des
types propositionels
clause types
sp
eci ques. Dans l'impl
ementation en ProFIT, il est
possible de sp
eci er directement les deux hi
erarchies dans le cadre de la hi
erarchie globale
parce que ProFIT o re un h
eritage
a plusieurs dimensions. Cependant, les contraintes
attach
ees a
des types sp
eci ques ne sont pas prises en charge directement, elle se fait au
moyen des templates.
Les hi
erarchies de types syntagmatiques et de types propositionels sp
eci
ees par Sag
sont pr
esent
ees en format ProFIT dans la Figure 1. On voit que les constructions y sont
classi
ees au niveau des deux dimensions distinctes
types syntagmatiques et types propo-
sitionels
en m^eme temps. Cette classi cation crois
ee est implant
ee en ProFIT au moyen
de l'h
eritage multiple.
Voir l'explication de l'h
eritage multiple en ProFIT pr
esent
ee
par Erbach
1994
, bien illustr
ee par une version pr
eliminaire de l'analyse de Sag
. La
sp
eci cation
phrase       hd ph, non hd ph      *   clause, non clause
signi e que les syntagmes sont classi
es dans la dimension syntagmatique comme syn-
tagmes
a T^ete
headed phrases, hd ph
ou syntagmes sans T^ete
non-headed phrases,
non hd ph
, et sont classi
es d'autre part dans la dimension propositionelle comme propo-
sitions
clause
ou non
non clause
. Dans les deux dimensions, les hi
erarchies locales
de sous-types syntagmatiques et sous-types propositionnels sont sp
eci
ees normalement.

3. Templates et contraintes
Avant de pr
esenter l'impl
ementation des contraintes sur les types syntagmatiques
sp
eci ques, il faut introduire des templates pour des contraintes plus g
en
erales. On voit
dans la Figure 2 comment d
e nir en ProFIT les templates pour impl
ementer les principes
g
en
eraux de HPSG. Les templates sont d
e nis par la symbole ':=', qui signi e que le
nom du template
a gauche sera remplac
e par la structure de traits typ
ee
a droite. Les
structures de traits typ
ees ont la forme attribut-1!valeur-1 & attribut-2!valeur-2.
Les noms de types ont la forme type, et les valeurs partag
ees
structure-sharing
sont
repr
esent
ees par l'identit
e de variables Prolog
par exemple: HF, Subj

* Head Feature Principle *                      * Empty Comps Constraint *
'HFP' := syn!loc!cat!head!HF &                  'ECC' := syn!loc!cat!val!comps!        .
hd_dtr!syn!loc!cat!head!HF.
* Semantics Principle *
* Valency Principle *                          'SEMP'
head
:=
'VALP'
subj
:=                                     syn!loc!cont!Cont &
syn!loc!cat!val!subj!Subj &                     hd_dtr!syn!loc!cont!Cont.
hd_dtr!syn!loc!cat!val!subj!Subj.           'SEMP'
adjunct
:=
'VALP'
spr
:=                                      syn!loc!cont!Cont &
syn!loc!cat!val!spr!Spr &                       adj_dtr!syn!loc!cont!Cont.
hd_dtr!syn!loc!cat!val!spr!Spr.
'VALP'
comps
:=
syn!loc!cat!val!comps!Comps &
hd_dtr!syn!loc!cat!val!comps!Comps.

Figure 2: Templates pour les principes HPSG

Graham Wilcock

3.1. Contraintes attach
ees aux syntagmes
L'expansion d'un template se fait partout o
u il est invoqu
e, ce qui est bien possible

a l'int
erieur d'un autre template. Les templates d
e nis dans la Figure 2 sont invoqu
es
dans les d
e nitions des templates plus sp
eci ques pour les contraintes sur les syntagmes
sp
eci ques pr
esent
es dans la Figure 3. Au niveau le plus haut de la hi
erarchie syntag-
matique, le template pour les syntagmes
a T^ete d
e ni par hd ph := hd ph & @'HFP' &
@'ECC' indique que tous les syntagmes
a T^ete sont de type hd ph, ils suivent le Principe
des traits de T^ete par l'invocation
par @
du template @'HFP', et ils suivent la Contrainte
de COMPS Vide
Empty COMPS Constraint
par l'invocation du template @'ECC'.
hd_ph :=   hd_ph & @'HFP' & @'ECC'.             hd_adj_ph := hd_adj_ph &
@hd_ph &
hd_nexus_ph := hd_nexus_ph &                      @'VALP'
subj
& @'VALP'
spr
@hd_ph & @'SEMP'
head
.                         @'VALP'
comps
hd_dtr!syn!HeadSyn &
hd_subj_ph := hd_subj_ph &                        adj_dtr!syn!loc!cat!head!mod!HeadSyn.
@hd_nexus_ph &
@'VALP'
spr
& @'VALP'
comps
&               hd_fill_ph := hd_fill_ph &
syn!loc!cat!val!subj!   &                       @hd_nexus_ph &
hd_dtr!syn!loc!cat!val!
@'VALP'
subj
& @'VALP'
spr
subj! SubjSyn &                             @'VALP'
comps
spr!
&                                    syn!nonloc!slash!Slash &
subj_dtr!syn!SubjSyn.                           hd_dtr!syn!

loc!cat!head! verbal &
fin_hd_subj_ph := fin_hd_subj_ph &                    nonloc!slash! Fill|Slash
@hd_subj_ph &                                   fill_dtr!syn!loc!Fill.
syn!loc!cat!head!
verb & vform! fin
fin_hd_fill_ph := fin_hd_fill_ph &
hd_spr_ph := hd_spr_ph &                          @hd_fill_ph &
@hd_nexus_ph &                                  hd_dtr!syn!loc!cat!

@'VALP'
subj
& @'VALP'
comps
&                    head!
verb & vform! fin
syn!loc!cat!val!spr!   &                            val!subj!
hd_dtr!syn!loc!cat!val!

subj!   &                                 inf_hd_fill_ph := inf_hd_fill_ph &
spr! SprSyn
&                             @hd_fill_ph &
spr_dtr!syn!SprSyn.                             hd_dtr!syn!loc!cat!

head!
comp & vform! inf
hd_comp_ph := hd_comp_ph &                            val!subj! @'PRO'
@hd_nexus_ph &
@'VALP'
subj
& @'VALP'
spr
.                 'PRO' := pro &
loc!
cat!head!case! acc &
cont!
refl & index! ref
Figure 3: Templates pour les contraintes sur les syntagmes
Les syntagmes
a T^ete
hd ph
sont classi
es par Sag
1997
comme syntagmes avec
ajouts
head-adjunct phrases, hd adj ph
ou syntagmes sans ajout
head-nexus phrases,
hd nexus ph
. Les templates pour les hd adj ph et hd nexus ph invoquent donc le tem-
plate pour les syntagmes
a branche T^ete
@hd ph
, qui invoque automatiquement les
templates @'HFP' et @'ECC'. L'invocation de templates dans les autres templates est un
moyen e cace pour impl
ementer l'h
eritage des contraintes attach
ees aux types sp
eci ques.

H
eritage Multiple et Templates dans l'Implantation de HPSG

Le template pour hd adj ph force l'impl
ementation du Principe de Valence
Valency
Principle
par l'invocation des trois parties de @'VALP'. Le template pour hd nexus ph
force l'impl
ementation du Principe S
emantique par @'SEMP'
head
, en laissant le Principe
de Valence aux sous-types hd subj ph, hd spr ph et hd comp ph. Les autres templates
pour les types syntagmatiques dans la Figure 3 forcent l'impl
ementation des contraintes
diverses attach
ees par Sag
1997
aux types syntagmatiques sp
eci ques.
Le template pour inf hd fill ph
in nitival head- ller phrase
sp
eci e que le sujet
de la T^ete doit avoir le type PRO par l'invocation du template @'PRO', aussi d
e ni dans
la Figure 3. Le PRO est toujours accusatif
ne peut jamais ^etre le sujet d'un verbe
indicatif
, toujours r
e exif
son liage suit la g
en
eralisation de Visser
et a toujours un
indice r
ef
erentiel
ne peut jamais ^etre le sujet d'un syntagme verbal qui demande un sujet
phrastique

3.2. Contraintes attach
ees aux propositions
La hi
erarchie de types dans la Figure 1 contient la hi
erarchie de propositions telle que
propos
ee par Sag
1997
ainsi que la hi
erarchie des syntagmes. Il y a peu de contraintes
attach
ees aux types sp
eci ques de propositions. Les contraintes g
en
erales sur toutes les
propositions sont pr
esent
ees par Sag comme
1

2                    3

1
SUBJ list
PRO

66       h          i7
66HEAD MOD none 7
clause
66
fg
7
7
7
4QUE              7
5
REL      fg

Les templates en ProFIT pour impl
ementer les contraintes diverses sur les propositions
sont pr
esent
es dans la Figure 4. Ces templates fournissent un r
esultat identique
a celui
de la contrainte g
en
erale
1
, a
l'aide de moyens un peu di
erent. Dans
1
, le SUBJ est
sp
eci
e comme list
PRO
, une liste dont tous les membres ont le type PRO, alors que
dans la Figure 4 il est sp
eci
e comme subj!
or @'PRO'
, une disjonction d'une
liste vide ou une liste d'un seul membre de type PRO. Dans
1
HEAD est sp
eci
e comme
MOD ' ' none, une valeur par d
efaut de none, alors qu'il est sp
eci
e dans la Figure 4
comme mod! none dans tous les sous-types de proposition sauf les propositions relatives

relative clause, rel cl
Les templates dans la Figure 4 force l'impl
ementation des contraintes sp
eci
ees par Sag

1997
. Quatre sous-types de proposition sont sp
eci
es: d
eclarative
decl cl
, interrog-
ative
int cl
, imp
erative
imp cl
, et relative
rel cl
, y compris deux sous-types de
relative: Wh-relatives
wh rel cl
et non-Wh relatives
non wh rel cl
. Dans toutes les
propositions relatives la valeur MOD de HEAD est toujours de type noun, sp
eci
e dans
le template par mod!loc!cat!head! noun. Pour les raisons donn
ees par Sag
1997
, la
valeur est encore limit
ee
a NP par le template @np dans le cas de wh rel cl, et a
Nbar
par le template @nbar dans le cas de non wh rel cl.

Graham Wilcock

clause := clause &                             rel_cl := rel_cl & @clause & syn!loc!

syn!
loc!cat!val!subj!
or                 cat!head!
inv!- & mc!- &
@'PRO'
&                     mod!loc!cat!head! noun
nonloc!
que!  &                         cont! proposition
rel!  &
slash!

.                  wh_rel_cl := wh_rel_cl & @rel_cl &
syn!loc!cat!head!mod!@np
_
decl_cl := decl_cl & @clause &
syn!loc!
cat!head!mod! none &                non_wh_rel_cl :=
cont! proposition
.                    non_wh_rel_cl & @rel_cl &
syn!
loc!cat!head!mod!@nbar
Index
int_cl := int_cl & @clause &                             nonloc!slash!
syn!loc!
cat!head!mod! none &                  hd_dtr!syn!nonloc!slash! @np
Index
cont! question

imp_cl := imp_cl & @clause &
syn!loc!
cat!head!mod! none &
cont! directive

Figure 4: Templates pour les contraintes sur les propositions

4. Les constructions de propositions relatives
Les contraintes sur les types syntagmatiques et les types propositionels sont com-
bin
ees pour sp
eci er les constructions de propositions relatives. En g
en
eral, selon Sag

1997
, il y aura une interaction entre les contraintes sp
eci ques
sur les types syntagma-
tiques et propositionels sp
eci ques
et les contraintes g
en
erales sur les sch
emas de dom-
inance imm
ediate et les principes g
en
eraux de HPSG. Cette interaction de contraintes
fait en sorte que les constructions de propositions relatives bien form
ees soient admises,
et que les constructions mal form
ees soient exclues. Mais le syst
eme ProFIT n'a pas
de m
ecanisme g
en
eral pour les contraintes dynamiques attach
ees aux types sp
eci ques.
L'impl
ementation des contraintes se fait donc par d'autres moyens. La m
ethode se base
sur les constructions syntaxiques: pour chaque construction, il y a une r
egle de construc-
tion. Dans chaque r
egle, il y a une sp
eci cation de type syntagmatique ainsi qu'une
sp
eci cation de type propositionel, faites par les templates
a deux dimensions que nous
avons d
eja rencontr
es.
Dans l'analyse de Sag, il y a quatre sous-types distincts de syntagme sujet
head-subject
phrase
, ou pour ^etre plus exact, il y a quatre sous-types distincts de syntagme sujet
ni
nite head-subject phrase
, dans la hi
erarchie pr
esent
ee dans la Figure 1. C'est-
a-
dire: head-subject declarative clause
hd subj decl cl
, Wh-subject interrogative clause

wh subj int cl
, Wh-subject relative clause
wh subj rel cl
, et bare relative clause

bare rel cl
Les r
egles de construction des propositions d
eclaratives sujet
hd subj decl cl
et des
propositions relatives sujet
wh subj rel cl
sont pr
esent
ees dans la Figure 5. Les r
egles
sont d
eriv
ees du sch
ema g
en
eral de dominance imm
ediate des syntagmes sujet
head-
subject phrases
. On voit que les types des syntagmes dominants sont hd subj decl cl
et wh subj rel cl respectivement. Les contraintes sp
eci ques sur les constructions sont
impos
ees par les deux templates de type syntagmatique et de type propositionel. Dans
les deux cas, l'expression @fin hd subj ph impose toutes les contraintes attach
ees aux

Heritage Multiple et Templates dans l Implantation de HPSG

syntagmes nite head-subject phrase par le template fin hd subj ph d
e ni dans la Fig-
ure 3. Dans le cas de la proposition declarative, l'expression @decl cl impose toutes les
contraintes sp
eci
ees par le template decl cl d
e ni dans la Figure 4. Par contre, dans
le cas de la proposition Wh-relative clause, l'expression @wh rel cl impose un ensemble
di
erent de contraintes sp
eci
ees par le template wh rel cl qui est aussi d
e ni dans la
Figure 4.
phrase
hd_subj_decl_cl &                      phrase
wh_subj_rel_cl &
@fin_hd_subj_ph &                              @fin_hd_subj_ph &
@decl_cl &                                     @wh_rel_cl &
@'SLIP' &                                      @'SLIP' & @'WHIP'
que
@'WHIP'
que
& @'WHIP'
rel
&                  syn!loc!cat!head!mod!@np
Index
syn!loc!cat!head!inv!- &                       hd_dtr!
Head & phrase &
hd_dtr!
Head & phrase
&                               syn!nonloc!rel! Index
subj_dtr!
Subj & phrase

subj_dtr!
Subj & phrase &
--                                                           syn!nonloc!rel! Index
phrase
Subj
,                              --
phrase
Head
.                                  phrase
Subj
phrase
Head

Figure 5: Proposition d
eclarative sujet et proposition relative sujet
La r
egle pour les constructions bare relative est pr
esent
ee
a gauche dans la Figure 6.
Encore une fois, des contraintes sp
eci ques sont impos
ees par les deux templates de type
syntagmatique et de type propositionel. Le template @fin hd subj ph reste comme dans
les cas pr
ec
edents, mais le template @non wh rel cl impose un ensemble di
erent de
contraintes attach
ees aux propositions non-Wh-relative, d
e nies dans la Figure 4.
Les constructions que nous avons examin
ees jusqu'ici sont toutes des sous-types de
syntagme sujet
head-subject phrases
, donc elles sont toutes construites avec le tem-
plate @fin hd subj ph pour les contraintes de type syntagmatique. Les di
erences entre
les constructions ont uniquement
et
e sp
eci
ees par des templates di
erents pour les con-
traintes des types propositionels. Nous comparons maintenant la r
egle de construction des
propositions de type bare relative clause avec la r
egle de construction des propositions de
type simple in nitival relative clause, qui est pr
esent
ee
a droite dans la Figure 6. Encore
une fois, les contraintes sp
eci ques sur les constructions sont impos
ees par les deux tem-
phrase
bare_rel_cl &                         phrase
simp_inf_rel_cl &
@fin_hd_subj_ph &                             @hd_comp_ph &
@non_wh_rel_cl &                              @non_wh_rel_cl &
@'WHIP'
que
& @'WHIP'
rel
&                 @'WHIP'
que
& @'WHIP'
rel
hd_dtr!
Head & phrase
&                      hd_dtr!
Head & word &
subj_dtr!
Subj & phrase

syn!loc!cat!

--                                                        head!
comp & vform! inf
phrase
Subj
,                                         val!comps! CompSyn

phrase
Head
.                                 comp_dtrs! Comp & phrase &
syn!CompSyn

--
word
Head
phrase
Comp

Figure 6: Constructions de propositions relative bare et relative in nitive simple

Graham Wilcock

plates de type syntagmatique et de type propositionel. Mais cette fois, le template de type
propositionel @non wh rel cl est le m^eme dans les deux constructions. C'est le template
de type syntagmatique qui fait la distinction entre les constructions. Pour les propositions
de type simple in nitival relative clause, le type syntagmatique est le head-complement
phrase, et les contraintes sp
eci ques sont impos
ees par le template @hd comp ph d
e ni
dans la Figure 3.

5. Conclusion
Nous ne d
ecrivrons pas ici chaque type de construction de proposition relative, mais
il faut noter que l'impl
ementation pr
esent
ee peut traiter toutes les constructions de
proposition relative en anglais telles qu'analys
ees par Sag
1997
. Nous n'abordons pas
l'impl
ementation des r
egles lexicales pour la repr
esentation des ph
enom
enes d'extraction
sans cat
egorie vide, ni l'amalgamation lexicalis
ee des traits non-locaux, ni le traitement
des compl
ementeurs. Ces id
ees de Sag
1997
sont aussi inclues dans l'impl
ementation.
Nous n'abordons pas les liens entre les id
ees pr
esent
ees par Sag
1997
dans le cadre de
HPSG, et les id
ees de la grammaire syst
emique SFG, dont l'impl
ementation est examin
ee
par Mellish
1988
et Erbach
1994
. Les id
ees pr
esent
ees ici sont la repr
esentation des
contraintes au moyen des templates, l'h
eritage multiple en ProFIT, et la sp
eci cation des
constructions syntaxiques par la combinaison des templates
a deux dimensions orthogo-
nales.

R
ef
erences
Erbach G.
1994
. Multi-dimensional inheritance. In H. Trost, Ed., Proceedings of KON-
VENS '94, p. 102 111, Vienna: Springer.
Erbach G.
1995
. ProFIT: Prolog with Features, Inheritance, and Templates. In Seventh
Conference of the European Chapter of the Association for Computational Linguistics, p. 180
187, Dublin.
Mellish C. S.
1988
. Implementing systemic classi cation by uni cation. Computational
Linguistics, 14
1
, 40 51.
Sag I. A.
1997
. English relative clause constructions. Journal of Linguistics, 33
2
, 431 484.
Wilcock G. & Matsumoto Y.
1996
. Implementing HPSG with modular tools for fast
compiling and parsing. In Actes de TALN 96, p. 65 66, Marseille.
