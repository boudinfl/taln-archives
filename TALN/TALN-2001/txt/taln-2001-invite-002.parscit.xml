<?xml version="1.0" encoding="UTF-8"?>
<algorithms version="110505">
<algorithm name="ParsCit" version="110505">
<citationList>
<citation valid="true">
<authors>
<author>A Abeillé</author>
</authors>
<title>Les nouvelles syntaxes, Paris, Colin. Boitet Ch.</title>
<date>1993</date>
<location>GETA, Grenoble.</location>
<contexts>
<context position="4997" citStr="Abeillé, 1993" startWordPosition="746" endWordPosition="747"> (Chomsky, 1957). Pour les linguistes chomskiens, les grammaires formelles servent a modéliser la compétence du locuteur natif, en génération (considérée comme la déduction de la démarche hypothéticodéductive). Mais, pour la communauté des Traitements Automatiques des Langues, elles servent a modéliser la syntaxe des langues, comme matériau attesté, en analyse. Analyse syntaxique automatique de langues .&apos; du combinatoire au calculatoire La divergence entre les deux courants s&apos;est produite Vers 1971, avec la Théorie Standard Etendue, présente dans les formalismes syntaxiques classiques en TAL (Abeillé, 1993). 1.2 Les grammaires formelles, outil de modélisation de la syntaxe des langages de programmation Certains concepts élaborés par Chomsky des 1957 trouvent une application inattendue en 1960, avec la création d&apos;ALGOL 60, premier langage de programmation dont la syntaxe est définie par une grammaire formelle (context free), ce qui guide la conception du compilateur. ALGOL est le premier Langage de programmation Orienté &amp;quot;ALGorithmique&amp;quot; : il n&apos;y a plus de goto obligatoire dans les structures de contr6le, mais les structures alternative (if . . . then . else) et répétitive (for . . . step . . . unt</context>
</contexts>
<marker>Abeillé, 1993</marker>
<rawString>Abeillé A. (1993), Les nouvelles syntaxes, Paris, Colin. Boitet Ch. (1989), Bernard Vauquois et la TAO —Analectes, édité par Christian Boitet, GETA, Grenoble.</rawString>
</citation>
<citation valid="true">
<authors>
<author>S Abney</author>
</authors>
<title>Parsing by Chunks,</title>
<date>1991</date>
<editor>In : Robert Berwick, Steven Abney and Carol Tenny (eds.), Principle-Based Parsing, Dordrecht,</editor>
<publisher>Kluwer Academic Publishers,</publisher>
<location>La Haye, Mouton</location>
<contexts>
<context position="18221" citStr="Abney, 1991" startWordPosition="2740" endWordPosition="2741">ammaires formelles pour modéliser les structures, 0 et l&apos;utilisation explicite du contexte permettent de construire un processus de complexité linéaire. Le tagging dans sa Version classique utilise, comme l&apos;analyse combinatoire, des ressources lexicales supposées exhaustives, si l&apos;on considere qu&apos;il s&apos;agit de réduire les listes exhaustives d&apos;étiquettes possibles extraites du dictionnaire, par l&apos;application des régles contextuelles. Mais il est aussi possible de tagger avec des ressources partielles : les mots grammaticaux (avec une seule étiquette par défaut) qui marquent le début d&apos;un chunk (Abney, 1991) et qui le typent nominal ou Verbal, type qui contraint les mots suivants du chunk (Vergne, 1998b). Analyse syntaxique automatique de langues .&apos; du combinatoire au calculatoire Le chunking fonctionne exactement comme le tagging, et simultanement au tagging, les deux fonctions etant simplifiees quand on les aborde ensemble (voir ci-dessous en 5.1). Tagging et chunking ouvrent et montrent la voie vers l&apos;analyse de langue calculatoire : les fonctions de segmentation et d&apos;identiﬁcation des segments sont realisees; il suffit d&apos;y ajouter un processus de mise en relation des segments qui soit aussi i</context>
<context position="27716" citStr="Abney, 1991" startWordPosition="4196" endWordPosition="4197">tituants non récursifs en miroir : 0 hiérarchie des unités physiques : document, paragraphes, mots 0 hiérarchie des unités calculées : mots, tokens, chunks, propositions, phrases 5.4 Comment s&apos;abstraire de la langue ? Certaines propriétés du ﬂux entrant sont indépendantes de sa langue : 0 le ﬂux entrant est touj ours unidimensionnel 0 ce sont toujours deux humains qui communiquent (c&apos;est un processus) : méme appareil Vocal, méme systeme cognitif, méme recherche du moindre effort (optimisation). Le chunk est un constituant fondé sur l&apos;oral (un groupe accentuel), contraint par l&apos;appareil Vocal (Abney, 1991). Nous faisons l&apos;hypothese que c&apos;est un concept indépendant de la langue, 5 On pourra se reporter a l&apos;anima11&apos;on de la presentation pour faciliter la comprehension du processus. Analyse syntaxique automatique de langues .&apos; du combinatoire au calculatoire hypothese corroborée par les travaux de Hervé Déjean (Déjean, 1998) sur des corpus de langues tres Variées. Dans l&apos;analyse automatique, comment s&apos;abstraire de la langue du ﬂux entrant ? Un premier paquet de regles affecte des Valeurs a des attributs de certains mots a partir de leur graphie (une unique Valeur par défaut, Valeur initiale des ca</context>
</contexts>
<marker>Abney, 1991</marker>
<rawString>Abney S. (1991), Parsing by Chunks, In : Robert Berwick, Steven Abney and Carol Tenny (eds.), Principle-Based Parsing, Dordrecht, Kluwer Academic Publishers, téléchargeable sur : http: //www . sfs . nphil . uni—tuebingen . de/~abney/Abney_90e . ps . gz Chomsky N. (1969), Structures syntaxiques, Paris, Point Seuil, trad. fr. de : (1957), Syntactic structures, La Haye, Mouton &amp; Co.</rawString>
</citation>
<citation valid="true">
<authors>
<author>N Chomsky</author>
</authors>
<title>Aspects de la théorie syntaxique, Paris, Seuil, trad. fr. par J.-C. Milner de :</title>
<date>1971</date>
<publisher>MIT Press.</publisher>
<location>Cambridge,</location>
<marker>Chomsky, 1971</marker>
<rawString>Chomsky N. (1971), Aspects de la théorie syntaxique, Paris, Seuil, trad. fr. par J.-C. Milner de : (1965), Aspects of the Theory of Syntax, Cambridge, MIT Press.</rawString>
</citation>
<citation valid="true">
<authors>
<author>Déj ean H</author>
</authors>
<title>Concepts et algorithmes pour la découverte des structures formelles des langues, these de doctorat de l&apos;UniVersité de Caen.</title>
<date>1998</date>
<marker>H, 1998</marker>
<rawString>Déj ean H. (1998), Concepts et algorithmes pour la découverte des structures formelles des langues, these de doctorat de l&apos;UniVersité de Caen.</rawString>
</citation>
<citation valid="true">
<authors>
<author>E Giguet</author>
</authors>
<title>Méthode pour l&apos;anab/se automatique de structures formelle sur documents multilingues, these de doctorat de l&apos;UniVersité de Caen.</title>
<date>1998</date>
<contexts>
<context position="23975" citStr="Giguet, 1998" startWordPosition="3572" endWordPosition="3573">angue traitée. &amp;quot;Nos analyseurs&amp;quot; s&apos;entend ainsi : &amp;quot;l&apos;analyseur 98&amp;quot; (concu et réalisé en solitaire durant et depuis ma these soutenue en 1989 : &amp;quot;Analyse morpho-syntaxique automatique sans dictionnaire&amp;quot;), est non combinatoire depuis 1993; c&apos;est un analyseur de phrases du francais; il s&apos;est placé premier a l&apos;action GRACE (d&apos;octobre 1995 a novembre 1998), et a été transposé dans la synthese Vocale KALI (V annier, 1999), commercialisée depuis 1999 par Electrel (ﬁnancement FEDER); &amp;quot;l&apos;analyseur du GREYC&amp;quot; a été concu (a partir du premier) et réalisé en 1999-2000, en collaboration avec Emmanuel Giguet (Giguet, 1998) et Nadine Lucas (membres du Groupe Syntaxe et Ingénierie Multilingue du GREYC), dans le cadre d&apos;un transfert de technologie vers la société DATOPS, (ﬁnancement MENRT, contrat n° 98.K.6411), et il est actuellement en service dans les traitements de l&apos;entreprise; c&apos;est un analyseur linguistique générique : les regles actuellement développées permettent l&apos;analyse morphosyntaxique de phrases du francais et de l&apos;anglais et la détection des citations (Lucas, 2000b). 11 a été développé en Java; le moteur compilé et les regles tiennent sur moins de 500 K0. 5.1 Calculer it partir des formes et des pos</context>
</contexts>
<marker>Giguet, 1998</marker>
<rawString>Giguet E. (1998), Méthode pour l&apos;anab/se automatique de structures formelle sur documents multilingues, these de doctorat de l&apos;UniVersité de Caen.</rawString>
</citation>
<citation valid="false">
<authors>
<author>Kuhn Th</author>
</authors>
<title>La structure des revolutions scientiﬁques, Paris, Flammarion, trad. fr. de : (1962-1970), The Structure of Scientiﬁc Revolutions, Chicago, The University of Chicago Press. Analyse syntaxique automatique de langues .&apos; du combinatoire au calculatoire Lucas N. (2000a), Le changement d&apos;éche11e dans 1’ana1yse logique, 9é”’es Rencontres interdisciplinaires sur les systemes complexes naturels et artiﬁciels .&apos; Representations graphiques dans les syste‘mes complexes naturels et artiﬁciels,</title>
<date>1983</date>
<location>Rochebrune.</location>
<marker>Th, 1983</marker>
<rawString>Kuhn Th. (1983), La structure des revolutions scientiﬁques, Paris, Flammarion, trad. fr. de : (1962-1970), The Structure of Scientiﬁc Revolutions, Chicago, The University of Chicago Press. Analyse syntaxique automatique de langues .&apos; du combinatoire au calculatoire Lucas N. (2000a), Le changement d&apos;éche11e dans 1’ana1yse logique, 9é”’es Rencontres interdisciplinaires sur les systemes complexes naturels et artiﬁciels .&apos; Representations graphiques dans les syste‘mes complexes naturels et artiﬁciels, Rochebrune.</rawString>
</citation>
<citation valid="true">
<authors>
<author>N Lucas</author>
</authors>
<title>Le role de la citation dans la structuration des articles de presse, Actes du premier colloque d ’étudesjaponaises de l &apos;Université Marc Bloch,</title>
<date>2000</date>
<location>Strasbourg.</location>
<contexts>
<context position="24437" citStr="Lucas, 2000" startWordPosition="3639" endWordPosition="3640">cement FEDER); &amp;quot;l&apos;analyseur du GREYC&amp;quot; a été concu (a partir du premier) et réalisé en 1999-2000, en collaboration avec Emmanuel Giguet (Giguet, 1998) et Nadine Lucas (membres du Groupe Syntaxe et Ingénierie Multilingue du GREYC), dans le cadre d&apos;un transfert de technologie vers la société DATOPS, (ﬁnancement MENRT, contrat n° 98.K.6411), et il est actuellement en service dans les traitements de l&apos;entreprise; c&apos;est un analyseur linguistique générique : les regles actuellement développées permettent l&apos;analyse morphosyntaxique de phrases du francais et de l&apos;anglais et la détection des citations (Lucas, 2000b). 11 a été développé en Java; le moteur compilé et les regles tiennent sur moins de 500 K0. 5.1 Calculer it partir des formes et des positions On abandonne la correspondance formes - étiquettes possibles a priori hors contexte habituellement explicitée dans le dictionnaire exhaustif. Les formes connues au début du calcul sont les mots grammaticaux qui marquent le début d&apos;un chunk et qui le typent nominal ou Verbal, type qui contraint les mots suivants du chunk (V ergne, 1998b) : Je le bois dans le bois. (exemple explicatif) 0 début et typage de chunk : J e =&gt; [ chunk Verbal dans =&gt; [ chunk n</context>
<context position="27019" citStr="Lucas, 2000" startWordPosition="4090" endWordPosition="4091">lues a la ﬁn d&apos;unités supérieures (phrases par exemple) sont supprimées par une regle 3. Ce processus est implémenté dans les regles interprétées par le moteur, et ainsi est aussi de complexité linéaire. Il est indépendant des unités arrivées entre les deux unités reliées. Du point de vue linguistique, ce processus modélise le déroulement d&apos;une saturation de Valence. 5.3 Comment s&apos;abstraire de l&apos;unité traitée ? Les opérations sont identiques quel que soit le niveau hiérarchique des unités traitées : par exemple, les débuts de propositions sont marqués de maniere analogue aux débuts de chunks (Lucas, 2000a). Les deux hiérarchies des unités sont déclaratives : on a deux hiérarchies de constituants non récursifs en miroir : 0 hiérarchie des unités physiques : document, paragraphes, mots 0 hiérarchie des unités calculées : mots, tokens, chunks, propositions, phrases 5.4 Comment s&apos;abstraire de la langue ? Certaines propriétés du ﬂux entrant sont indépendantes de sa langue : 0 le ﬂux entrant est touj ours unidimensionnel 0 ce sont toujours deux humains qui communiquent (c&apos;est un processus) : méme appareil Vocal, méme systeme cognitif, méme recherche du moindre effort (optimisation). Le chunk est un</context>
</contexts>
<marker>Lucas, 2000</marker>
<rawString>Lucas N. (2000b), Le role de la citation dans la structuration des articles de presse, Actes du premier colloque d ’étudesjaponaises de l &apos;Université Marc Bloch, Strasbourg.</rawString>
</citation>
<citation valid="true">
<authors>
<author>G Vannier</author>
</authors>
<title>Etude des contributions des structures textuelles et syntaxiques pour la prosodie .&apos; application a un systeme de synthese vocale a partir du texte, these de doctorat de l&apos;Université de Caen.</title>
<date>1999</date>
<marker>Vannier, 1999</marker>
<rawString>Vannier G. (1999), Etude des contributions des structures textuelles et syntaxiques pour la prosodie .&apos; application a un systeme de synthese vocale a partir du texte, these de doctorat de l&apos;Université de Caen.</rawString>
</citation>
<citation valid="true">
<authors>
<author>J Vergne</author>
</authors>
<title>Analyse morpho—syntaxique automatique sans dictionnaire, these de doctorat de l&apos;Université</title>
<date>1989</date>
<location>Paris</location>
<marker>Vergne, 1989</marker>
<rawString>Vergne J. (1989), Analyse morpho—syntaxique automatique sans dictionnaire, these de doctorat de l&apos;Université Paris 6.</rawString>
</citation>
<citation valid="true">
<authors>
<author>J Vergne</author>
</authors>
<title>Entre arbre de dépendance et ordre linéaire, les deux processus de transformation : linéarisation, puis reconstruction de</title>
<date>1998</date>
<booktitle>1&apos;arbre, Cahiers de Grammaire, n° 23,</booktitle>
<pages>95--136</pages>
<location>ERSS, Toulouse.</location>
<contexts>
<context position="18317" citStr="Vergne, 1998" startWordPosition="2757" endWordPosition="2758">ttent de construire un processus de complexité linéaire. Le tagging dans sa Version classique utilise, comme l&apos;analyse combinatoire, des ressources lexicales supposées exhaustives, si l&apos;on considere qu&apos;il s&apos;agit de réduire les listes exhaustives d&apos;étiquettes possibles extraites du dictionnaire, par l&apos;application des régles contextuelles. Mais il est aussi possible de tagger avec des ressources partielles : les mots grammaticaux (avec une seule étiquette par défaut) qui marquent le début d&apos;un chunk (Abney, 1991) et qui le typent nominal ou Verbal, type qui contraint les mots suivants du chunk (Vergne, 1998b). Analyse syntaxique automatique de langues .&apos; du combinatoire au calculatoire Le chunking fonctionne exactement comme le tagging, et simultanement au tagging, les deux fonctions etant simplifiees quand on les aborde ensemble (voir ci-dessous en 5.1). Tagging et chunking ouvrent et montrent la voie vers l&apos;analyse de langue calculatoire : les fonctions de segmentation et d&apos;identiﬁcation des segments sont realisees; il suffit d&apos;y ajouter un processus de mise en relation des segments qui soit aussi implementable par des regles conditions =&gt; actions3 (voir ci-dessous en 5.2). 3.5 Poser et résoud</context>
</contexts>
<marker>Vergne, 1998</marker>
<rawString>Vergne J. (1998a), Entre arbre de dépendance et ordre linéaire, les deux processus de transformation : linéarisation, puis reconstruction de 1&apos;arbre, Cahiers de Grammaire, n° 23, pp. 95-136, ERSS, Toulouse.</rawString>
</citation>
<citation valid="true">
<authors>
<author>J Vergne</author>
<author>E Giguet</author>
</authors>
<title>Regards Théoriques sur le «Tagging»,</title>
<date>1998</date>
<booktitle>Actes de Traitement Automatique des Langues Naturelles (TALN’98),</booktitle>
<pages>22--31</pages>
<location>Paris.</location>
<marker>Vergne, Giguet, 1998</marker>
<rawString>Vergne J., Giguet E. (1998b), Regards Théoriques sur le «Tagging», Actes de Traitement Automatique des Langues Naturelles (TALN’98), pp. 22-31, Paris.</rawString>
</citation>
<citation valid="true">
<authors>
<author>J Vergne</author>
</authors>
<title>Etude et modélisation de la syntaxe des langues a l&apos;aide de l &apos;ordinateur, Analyse syntaxique automatique non combinatoire, Habilitation a Diriger des Recherches, Université de Caen.</title>
<date>1999</date>
<marker>Vergne, 1999</marker>
<rawString>Vergne J. (1999), Etude et modélisation de la syntaxe des langues a l&apos;aide de l &apos;ordinateur, Analyse syntaxique automatique non combinatoire, Habilitation a Diriger des Recherches, Université de Caen.</rawString>
</citation>
<citation valid="true">
<authors>
<author>J Vergne</author>
</authors>
<title>Trends in Robust Parsing, tutoriel du Coling 2000, téléchargeable sur http: //www. info . unicaen .</title>
<date>2000</date>
<note>fr/~jvergne/tutorialColing2000 . html</note>
<contexts>
<context position="21186" citStr="Vergne, 2000" startWordPosition="3184" endWordPosition="3185">exique et les structures syntaxiques du texte analyse sont calcules et produits en sortie. Le processus d&apos;analyse est de complexite lineaire. On a ainsi une nouvelle maniere de modeliser les proprietes linguistiques des langues dans les traitements informatiques, qui consiste a ne transposer dans le modele informatique qu&apos;un tout petit nombre de proprietes generales du modele linguistique, seulement celles qui servent aux 3 voir aussi la presentation et les references du tutoriel du Coling 2000 &amp;quot;Trends in Robust Parsing&amp;quot; sur http: //www. info . unicaen . fr/~jvergne/tutorialColing2000 . html (Vergne, 2000). Jacques Vergne opérations des calculs. Le modele linguistique n&apos;est plus implémenté dans sa totalité. Il est ainsi dissocié du modele informatique4. 4 Comparaison entre modéles d&apos;analyse syntaxique Le tableau suivant propose une synthese comparative entre les quatre modeles d&apos;analyse et met en évidence : 0 les ruptures et les continuités entre modeles d&apos;analyse syntaxique, 0 le retour a la complexité linéaire du processus d&apos;analyse, 0 et le fait que le modele du code analysé n&apos;est plus implémenté dans sa totalité dans le modele informatique sous forme de ressources exhaustives placées en ent</context>
</contexts>
<marker>Vergne, 2000</marker>
<rawString>Vergne J. (2000), Trends in Robust Parsing, tutoriel du Coling 2000, téléchargeable sur http: //www. info . unicaen . fr/~jvergne/tutorialColing2000 . html</rawString>
</citation>
</citationList>
</algorithm>
</algorithms>