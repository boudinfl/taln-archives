TALN 2001, Tours, 2-5 juillet 2001

Récupération de segments sous-phrastiques dans une
mémoire de traduction

Philippe Langlais et Michel Simard
RALI/DIRO
Université de Montréal
{Felipe , Simardm}@ IRO . UMont real . CA

Résumé - Abstract

L’utilité des outils d’aide a la traduction reposant sur les mémoires de traduction est souvent
limitée par la nature des segments que celles-ci mettent en correspondance, le plus souvent des
phrases entieres. Cet article examine le potentiel d’un type de systeme qui serait en mesure de
récupérer la traduction de séquences de mots de longueur arbitraire.

The usefullness of translation support tools based on translation memories is often liInited by
the nature of the text segments that they connect, generally whole sentences. This article exa-
mines the potential of a type of system that would be able to recuperate the translation of
arbitrary sequences of words.

Mots clés : mémoire de traduction sous-phrastique, traduction assistée par ordinateur, traduction
automatique a base d’exemples.

1 Introduction

L’ensemble des nombres réels contient plus de solutions a plus de problemes
d’arithmétique que toute autre ressource...

Le lecteur averti aura reconnu, sous un déguisement grossier, la célebre citation de Isabelle et al.
(1993): en remplacant l’arithmétique par la traduction et l’ensemble des nombres réels par celui
des traductions existantes, on reconnait bien l’afﬁrmation qui a servi de leitmotiv a quantité de
travaux sur les outils d’aide a la traduction.

La premiere question que cette boutade souleve est celle que se pose tout écolier aux prises avec
un devoir de mathématiques: comment aller chercher ces solutions ? Dans le cas de la traduction,
toute une gamme d’approches ont été proposées, allant de la simple consultation interactive (par
exemple, avec le systeme TransSearch (Macklovitch et al.2000) 1) a la traduction automatique
statistique et/ou a base d’exemples, en passant par l’extraction automatique de dictionnaires.

Bien sur, si les solutions sont effectivement présentes dans les traductions existantes, l’approche

1TransSearch est disponible Via le Web du RALI: www—rali . iro . umont real . ca

Philippe Langlais et Michel Simard

la plus attirante est certainement celle qui consiste a aller les y chercher directement. C’est
précisément cette approche qui est préconisée dans la plupart des systemes dits de “mémoire
de traduction” (ci-dessous “SMT”). Dans des systemes comme ceux commercialisés par les
ﬁrmes Trados (Translat0r’s Workbench), [BM (Translation Manager/2), Atril (Déja-Vu) et Star
AG (Transit), on fait le pari qu’il est possible de retrouver dans un nouveau texte a traduire
des phrases completes qui ont déja été traduites. En organisant systématiquement la production
des traducteurs en paires de phrases traduction l’une de l’autre (la “mémoire de traduction”), il
devient alors possible de récupérer ces traductions et de les proposer au traducteur au moment
opportun.

Si cette stratégie peut s’avérer productive dans certains contextes bien déﬁnis (documents appa-
rentés, révisions, etc.), il faut toutefois reconnaitre que dans le cas général, il est bien rare de se
retrouver devant de telles répétitions de phrases entieres. C’est pourquoi les promoteurs de cette
solution tentent de mettre en oeuvre différents mécanismes d’appariement approximatif des
phrases (fuzzy matching), dans l’espoir de retrouver dans la mémoire de traduction des phrases
qui “ressemblent” a celles du nouveau texte-source. Malgré tout, la portée de ces mécanismes
est encore tres limitée, et par conséquent bride l’applicabilité meme de ces systemes. C’est du
moins la conclusion a laquelle semblent mener directement des études récentes comme celle de
Planas et Furuse (1999) et celle de Macklovitch et Russell (2000).

Dans ce demier article, les auteurs proposent différents moyens de pallier les lacunes des
systemes actuels de gestion des traductions antérieures. Il est notamment question d’analyse
morphologique, de l’identiﬁcation et du traitement modulaire des entités nommées et expres-
sions a caractere numérique et d’analyse de surface (chunking). Toutes ces mesures visent a
assouplir le mécanisme d’appariement entre le texte a traduire et le contenu de la mémoire de
traduction. Avec un peu de recul, il est clair que ces suggestions sont en fait autant de pas dans la
direction de la traduction automatique basée sur les exemples (TABE). Dans la mesure ou l’on
voit les SMT comme une forme simpliﬁée de TABE, il s’agit en fait d’une évolution tout-a-fait
naturelle.

Bien que la plupart des travaux en TABE proposent des mécanismes complexes d’apparie-
ment entre le texte a traduire et les exemples de la base (voir (Somersl999) pour un survol),
certains travaux récents dans ce domaine tendent a démontrer que des procédures d’apparie-
ment simples sur des séquences de mots arbitraires du texte-source permettent de récupérer une
quantité appréciable de segments de traduction pertinents. On pense notamment aux travaux
effectués dans le cadre du projet PanGl0ss (Brownl996). L’idée a la base de ces travaux est
intuitivement simple : s’il est peu probable de retrouver dans une mémoire de traduction des
phrases completes d’un texte a traduire, il doit néanmoins étre possible de retrouver des sous-
segments de ces phrases, a la limite, des mots isolés. Si on arrive d’abord a couvrir la totalité du
nouveau texte avec de tels segments, puis a identiﬁer correctement la traduction de ces segments
dans la mémoire de traduction, et ﬁnalement a agencer ces traductions en un tout cohérent, on
obtient une traduction du texte source.

Dans un contexte de traduction entierement automatique, le succes de chacune de ces étapes est
crucial a la réussite de toute l’entreprise. Dans un contexte d’aide a la traduction humaine, ou le
traducteur a le loisir de sélectionner, de modiﬁer ou encore meme de fournir des morceaux de
traductions manquants, le succes d’une telle approche se mesure plutot en terme d’utilite’: dans
quelle mesure les traductions partielles extraites d’une mémoire de traduction sous-phrastique
sont-elles susceptibles d’étre utiles a un traducteur? C’est précisément ce que nous tentons
d’évaluer dans cette étude.

Récupération de segments sous-phrastiques

2 Cadre applicatif

Nous nous intéressons a une gamme d’outils d’aide a la traduction qui, dans l’espoir de faciliter
la tache du traducteur, tentent de récupérer automatiquement dans une mémoire de traduction
des segments de texte potentiellement réutilisables.

A l’instar des systemes de mémoire de traduction (SMT) existants, l’objectif n’est pas de tra-
duire la totalité du texte sans le concours du traducteur. I1 ne s’agit donc pas de traduction
automatique, et c’est toujours au traducteur humain que revient l’initiative du processus. C’est
également lui qui est ultimement responsable du produit ﬁni. Ce mode d’interaction s’avere
pertinent dans toutes les situations ou une traduction de qualité est requise (Macklovitch and
Russell2000).

La tache du systeme consiste essentiellement a proposer des éléments de solution; la maniere
avec laquelle ces briques traductionnelles sont proposées a l’utilisateur ne fait pas l’objet de
cette étude. Nous nous concentrons au contraire sur la description d’un cadre directeur visant
a l’eXploitation sous-phrastique d’une mémoire de traduction. Nous commencons pour cela
par préciser ce terme, puis nous décrivons les trois opérations élémentaires nécessaires a la
réalisation d’un SMT, a savoir, la soumission d’une requéte, la sélection des couples traduction-
nels et la formulation d’une réponse.

2.1 Formalisation d’une mémoire de traduction

Une mémoire de traduction M est un ensemble de N couples {(Si, Ti), 71 E [1, N ou Si est
un segment source en relation de traduction avec le segment cible Ti.

Aucune contrainte théorique ne régit a priori la nature des segments présents dans la mémoire ;
mais en pratique dans les SMT existants, ces segments sont des phrases completesz. Le mécanis-
me privilégié de constitution d’une mémoire dans les systemes actuels consiste en effet a col-
liger des paires de phrases a mesure que le traducteur les produit. Altemativement, on peut
recourir a l’alignement automatique des phrases d’une collection de traductions déja disponible
(voir Véronis et Langlais (2000) pour une évaluation comparative des méthodes existantes.)

2.2 Soumission d’une requéte £1 une mémoire de traduction

Soit un segment e a traduire. Nous déﬁnissons une requéte comme une sous-séquence de 6.
Cette déﬁnition limite certainement le potentiel applicatif d’un SMT particulier et tout autre
mécanisme plus évolué d’interrogation de la base de traduction (requéte a trou, Inise sous forme
canonique, etc.) moyennant des techniques adéquates s’avérerait plus productif.

Nous notons Re l’ensemble des requétes sources formulées a partir de la phrase a traduire 6,
et qui apparaissent au moins une fois dans la mémoire de traduction M. La ﬁgure 1 montre
sur un exemple repris tout au long de ce texte les requétes d’au moins deux mots qui sont
présentes dans M. Comme l’illustre cette ﬁgure, les requétes souInises sont par nature fortement
intersectantes.

Intuitivement, il n’est pas nécessairement fructueux de s’intéresser a toutes les sous-séquences

2La notion de phrase étant suj ette a Variation d’un systéme a l’autre.

Philippe Langlais et Michel Simard

will he / will he table / will he table the / he table / he table the / table the / both ﬁrms /
the recommendations / the recommendations made / the recommendation made by /
recommendations made / recommendations made by / recommendations made by both /
recommendations made by both ﬁrms / made by / made by both / by both / by both ﬁrms /
Source: Will he table the recommendations made by both ﬁrms ?

Cible: Déposera-t-il Ies recommandations faites par les deux agences ?

FIG. 1: Les 18 requétes d’au moins deux mots faites avec succes a la mémoire de traduction
pour une phrase source donnée (en anglais ici).

possibles de 6. En particulier, il est peu probable que la recherche de simples mots dans la base
offre une information plus pertinente que la consultation d’un lexique bilingue. De la meme
maniere, on peut penser qu’il est préférable de ne considérer que des séquences “linguistique-
ment motivées”, par exemple des syntagmes. Cette supposition repose sur l’intuition que des
séquences plus ou moins arbitraires de mots risquent de mener a des traductions tout aussi ar-
bitraires, qui ont peu de chances d’étre récupérables. A l’opposé, un groupe ayant un statut
syntaxique clair (par exemple, un syntagme nominal simple) a de fortes chances d’étre traduit
par un groupe tout aussi cohérent, facilement réutilisable.

C’est dans ce but que nous avons implanté un ﬁltre (appelé chunk) dont le role est de selection-
ner les requétes potentiellement intéressantes. Ce ﬁltre requiert un parenthéseur capable de
segmenter un texte source en unités sous-phrastiques que par la suite nous appelons chunks.
Tous les chunks identiﬁes sont des requétes sources valides, de meme que tout groupement de
suites de chunks l’est. En d’autres termes, lorsque ce ﬁltre est activé, nous ne cherchons pas de
séquence de mots sources dont le début (resp. la ﬁn) ne co'1'ncide pas avec le début (resp. la ﬁn)
d’un chunk (voir la ﬁgure 2 pour l’application de ce ﬁltre sur notre exemple courant).

Segmentation: will [Np he table] [Np the recommendations] [V p made by] [Np both
ﬁrms] ?

Requétes: will he table / he table / the recommendations / the recommendations
made by / made by / both ﬁrms

FIG. 2: Segmentation du texte source de notre exemple et les six requétes retenues lorsque le
ﬁltre chunk est activé.

Description du parenthéseur

Nous avons utilisé les ressources Inises a disposition dans le cadre de l’action de recherche
partagée organisée lors de la quatrieme conférence CoNLL (Computational Natural Language
Learning) sur le theme de la segmentation (Sang and Buchholz2000). La tache consistait a
étiqueter des phrases d’un corpus de test a l’aide d’un jeu restreint d’une vingtaine d’étiquettes
permettant de représenter des découpages simples de nature pseudo-syntaxiques.

Ces étiquettes sont de trois types: les étiquettes identiﬁant un début de groupe (nominal, B-NP,
verbal, B-VP, adjectival, B-ADJ, adverbial, B-ADV, ou autre), de non début de groupe (I-NP, 1-
VP, etc.) ; une demiere étiquette (O) étant généralement associée a des symboles de ponctuation
n’appartenant a aucun groupe précis.

Récupération de segments sous-phrastiques

Les participants disposaient pour mettre au point leur systeme d’un corpus d’entrainement d’en-
viron 9000 phrases extraites du Wall Street Journal et étiquetées avec ce jeu d’étiquettes. La ﬁ-
gure 3 reporte un exemple d’étiquetage d’une de ces phrases ainsi que la segmentation induite.

Etiquetage: HeB_ N p reckons B_V p theB_ Np C11I'I'eI1t]_Np aCCO11I1t[_Np deﬁcitI_ Np Wll1B_Vp
I1aITOW]_VptOB_pp 0I1lyB_Np $ I_Np l.8I_Np l')llllOI1]_Np lI1B_pp SeptemberB_Np

Segmentation ind11ite: [Np He] [V p reckons] [Np the current account deﬁcit] [V p will nar-
row] [pp to] [Np only $ 1.8 billion] [pp in] [Np September]

FIG. 3: Illustration du processus de segmentation par étiquetage. L’exemple est tiré de Sang et
Buchholz (2000).

Le parenthéseur que nous avons développé dans cette étude repose sur un étiqueteur markovien
simple ou wf désigne les mots de la phrase a étiqueter et #1‘ désigne une séquence d’étiquettes
associée:

TL

Pwflwii) = l:l1P(tz‘|tz‘—1)P(wi|tz‘)

Les parametres de chacune des distributions p(te~|te~_1) et p(we~|te~) ont été estimés par l’algo-
rithme itératif EM sur le corpus d’entrainement disponible. L’ algorithme de Viterbi a été utilisé
pour trouver — pour un segment a étiqueter donné w[‘ — la séquence d’étiquettes qui maximise
la quantité p(t'f |w[‘). Les détails de cet étiqueteur sont décrits dans (Langlais200l).

2.3 Sélection de couples traductionnels

Certaines requétes apparaissent fréquemment dans une mémoire de traduction. Par exemple la
requéte “this basis” apparait 3576 fois dans la mémoire exploitée par TransSearch. Il n’est pas
envisageable — pour le type d’application visé — de submerger l’utilisateur avec la totalité
des segments cibles appariés dans la mémoire avec une requéte source donnée (a fortiori dans
le cas d’un ensemble Re de requétes). Au contraire, la viabilité d’un SMT repose grandement
sur la précision avec laquelle on fournit a l’utilisateur l’information utile et juste celle-ci (nous
reviendrons sur ce point dans la section 4). Un premier ﬁltre simple, nommément select—N,
consiste a ne conserver qu’un nombre restreint N de réponses faites a une requéte donnée.

Nous appuyant sur l’hypothese qu’il est peu probable qu’un utilisateur fasse un usage intensif
de blocs traductionnels correspondants a des requétes qui se chevauchent, nous avons également
implanté un second ﬁltre qui restreint le nombre de requétes de Re aux seules requétes qui maxi-
misent — sans chevauchement — la couverture (en terme de mots) de la phrase a traduire. Plus
précisément, nous appliquons une méthode de programmation dynamique pour sélectionner
parIni les requétes de Re celles dont la juxtaposition maximise la couverture du segment source
a traduire e tout en favorisant des recouvrements constitués d’un minimum de séquences. Ce
ﬁltre (appelé cover) s’avere en pratique une bonne maniere de ﬁltrer les couples traduction-
nels. Dans notre exemple, parmi les 18 sequences sources, seules les 3 suivantes sont retenues:
[will he table] [the recommendations made] [by both ﬁrms].

Philippe Langlais et Michel Simard

2.4 Formulation d’une réponse traductionnelle

Un autre type de ﬁltre qu’il est souhaitable d’appliquer aﬁn de réduire la quantité de matériel
cible propose a l’utilisateur consiste a apparier les couples traductionnels a un niveau sous-
phrastique (mots ou autres). Plusieurs méthodes ont été proposées pour localiser a l’intérieur de
traductions la sous-séquence cible en relation de traduction avec une séquence source donnée.
Certaines ont fait l’objet d’une évaluation comparative, dans le cadre de l’ARC-A2 (Véronis
and Langlais2000).

Dans ce travail nous avons implanté une méthode d’alignement de mots basée sur les trans-
ducteurs grammaticaux inversés (ITG) proposés par Dekai Wu (1997). En bref, cette procédure
prend en entrée une paire de segments et une grammaire spécialisée (spéciﬁée sous formes de
regles probabilistes). Elle tente alors de segmenter de maniere récursive et parallele la paire de
segments en identiﬁant a chaque étape l’alignement le plus probable entre deux sous-séquences.
La ﬁgure 4 illustre le résultat d’un alignement produit par cette méthode pour un couple traduc-
tionnel et une requéte donnés.

Séquence source: the recommendations made by

Couple traductionnel:
source: What we ﬁnd in this bill are things that are directly from the recommendations
made by these groups.
cible: Ce qu’on trouve dans ce projet de loi, ce sont des choses qui émanent directement
des recommandations faites par ces groupes

Séquence cible: recommandations faites par

FIG. 4: Segment cible identiﬁé par notre procédure d’alignement de mots pour un couple tra-
ductionnel et une requéte donnés.

3 Mesure de la viabilité d’un SMT sous-phrastique

Nous souhaitons évaluer le potentiel d’un SMT répondant aux contraintes imposées par le cadre
décrit dans la section précédente. Aﬁn de rendre cette évaluation indépendante — autant que
faire se peut — des différents choix d’implantation ainsi que de la nature des ressources dis-
ponibles (engins de traduction, modeles de langues, dictionnaires, etc.), nous avons élaboré un
protocole d’évaluation utilisant un bitexte de test B. Un bitexte est déﬁni simplement comme
un ensemble de paires de phrases en relation de traduction Bi = (si, ti).

L’ idée principale consiste a simuler un scénario dans lequel un utilisateur traduit une a une les
phrases si de B. On mesure alors comment les propositions d’un SMT particulier contribuent a
l’aider a produire la traduction oracle ti. La mesure de la portion de ti couverte par le matériel
cible proposé par un SMT est intuitivement un bon indicateur de la “récupérabilité” du contenu
de la mémoire de traduction. Toutefois, cette mesure seule ne sufﬁt pas pour évaluer la via-
bilité d’un SMT. Bien sﬁr, plus le systeme propose de texte a l’utilisateur, plus ce dernier est
susceptible d’y trouver matiere a produire sa traduction. Mais au dela d’une certaine quantité,
l’examen des propositions est fastidieux, rendant le systeme inutilisable. Ceci suggere naturel-
lement le recours aux notions de précision et de rappel pour mesurer la pertinence d’un SMT
particulier.

Récupération de segments sous-phrastiques

Dans le contexte de notre étude, la précision mesure la proportion pertinente (comptée en mots)
de matériel cible proposé, tandis que le rappel indique la proportion (comptée en mots) de la
partie cible de B couverte par les propositions du SMT.

Puisque nous ne visons pas dans cette étude une application spéciﬁque, nous sommes contraints
a faire des hypotheses sur la stratégie développée par l’utilisateur que nous simulons. Nous
admettons tout d’abord que l’utilisateur construit mentalement une traduction (la traduction
oracle fournie par B) qu’il ne modiﬁe pas lors de la saisie. Nous admettons ensuite, que lorsque
cela est pertinent3, il fera usage de “copiés/collés” pour exploiter les briques traductionnelles qui
lui sont proposées. Lorsque cela n’est pas pertinent, l’utilisateur tape simplement sa traduction.
Enﬁn, lorsque l’utilisateur sélectionne un texte dans une brique traductionelle, on suppose qu’il
conserve la partie la plus grande qui correspond a la traduction oracle. La ﬁgure 5 montre
un exemple de simulation de traduction ou la précision du SMT associé est de 6/21 (6 mots
seulement parmi les 21 proposés ont été utilisés) et le rappel est de 6/11 (6 mots seulement ont
servi a produire la traduction oracle qui en contient 11).

segments sources ‘ briques traductionnelles proposées

will he table Va-t-il déposer / déposera-t-il a

the recommendations recommandationsfaites par le / des recommandations faites par le
made by
both ﬁrms les entreprises / deux sociétés

Oracle: Déposera-t-il les recommandations faites par les deux agences ?
Couverture cible: [Déposera-t-il] les [recommendations faites par] les deux agences ?

FIG. 5: Simulation d’une session de traduction pour la paire de phrase de l’exemple 1, lorsque
les ﬁltres select—2 et cover sont appliqués. Les portions en italique identiﬁent les parties
des propositions que l’utilisateur sélectionne.

4 Expériences

4.1 Mémoire de traduction

La mémoire de traduction que nous avons utilisée ici est constituée de textes des débats par-
lementaires canadiens; textes communément regroupés sous le nom Hansard. Notre corpus
couvre environ 15 ans de débats (de 1986 a 2000 inclusivement) et totalise pres de 100 millions
de mots de chaque langue. Le tout a été automatiquement segmenté en phrases, lesquelles ont
ensuite été alignées avec le programme SFIAL (une version améliorée de la méthode de Simard
et al. (1992)), produisant ainsi plus de 5 millions de paires de segments.

4.2 Corpus de test

Nous avons isolé deux bitextes assez différents de nature pour mesurer les taux de précision et
de rappel obtenus. Chaque bitexte est constitué de 100 paires de phrases extraites aléatoirement

3La pertinence d’un copié/collé est dans cette étude déﬁnie par: une brique traductionnelle contient au moins
deux mots de la traduction oracle.

Philippe Langlais et Michel Simard

de l’un des corpus suivants: Hansard, constitué de textes du Hansard non rencontrés dans la
mémoire de traduction et Verne, le roman “De la terre a la lune” de Jules Verne.

Nos expériences ont été effectuées en prenant respectivement pour langue source et cible l’an-
glais et le francais. Ce choix releve de contraintes pratiques et rien ne s’oppose a priori a l’uti-
lisation d’une autre paire de langues.

4.3 Résultats

Nous avons effectué plusieurs expériences aﬁn d’évaluer l’impact des différents parametres
affectant le comportement du systeme. Nous ne rapportons ici que les résultats nous semblant
les plus intéressants.

4.3.1 Couvertures source et cible

Nous avons d’abord voulu évaluer dans quelle mesure le contenu de notre mémoire de traduc-
tion était réutilisable. Nous avons donc mesuré la couverture source et cible de différentes conﬁ-
gurations de SMT sur nos bitextes detest. Nous rapportons ici les résultats obtenus avec deux de
ces systemes. Le premier systeme interroge la mémoire de traduction avec toute sous-séquence
source d’au moins deux mots, calcule sur les requétes ayant obtenue au moins une réponse une
couverture source optimale (ﬁltre cove r) ; au plus les 10 premieres réponses de chaque requéte
de la couverture sont ensuite conservées (ﬁltre select—l 0). Le second systeme applique de
plus le ﬁltre chunk pour limiter le nombre initial de requétes considérées.

La couverture source indique la proportion des mots de la partie source du bitexte de test cou-
verte par les requétes présentes dans la mémoire de traduction; tandis que la couverture cible
indique la proportion des mots de la traduction oracle que nous pouvons reconstruire par juxta-
position de briques traductionelles foumies par le systeme testé. Ces deux taux sont reportés en
table 1.

Il est intéressant de noter tout d’abord les taux de couverture source qui sont entre 71% et 96%
selon le type de bitexte utilisé. Ces taux sont étonnement bons si l’on considere que seules
les séquences d’au moins deux mots ont été considérées. De maniere non surprenante, cette
couverture est d’autant plus élevée que le type de bitexte est proche de ceux disponibles dans la
mémoire. A titre de comparaison, Brown (1996) reporte un taux de couverture source de l’ordre
de 70%.

Les taux de couverture cible sont eux plus faibles. Le fait d’utiliser une unique traduction oracle
pour calculer cette couverture explique partiellement ce résultat. Une évaluation plus réaliste de
ce taux pourrait étre effectuée a partir de différentes traductions d’un meme texte, en suivant
par exemple le protocole d’évaluation décrit par Niessen et al. (Niessen et al.2000). Dans le cas
de textes proches de ceux constituant la mémoire, nous observons une couverture dépassant les
50%, ce qui en soit est un résultat assez encourageant.

Enﬁn, notons que si les couvertures (source ou cible) sont toujours plus élevées dans le cas du
premier systeme, le ratio de la couverture cible sur la couverture source, qui constitue une sorte
de mesure du rendement moyen d’une requéte, est toujours en faveur du ﬁltre chunk ; ce qui
conﬁrme au moins partiellement le bien fondé des hypotheses formulées dans la section 2.2. Ce
résultat est d’autant plus encourageant que les temps de traitement lies a une requéte sont non

Récupération de segments sous-phrastiques

négligeables.

select—lO+cover select—lO+cover+chunk
bitexte source cible ratio source cible ratio
Hansard 95.8% 58.2% 0.6 74.3% 53.7% 0.7

Verne 71.9% 28.4% 0.4 45.9% 22.6% 0.5

TAB. 1: Couvertures source et cible mesurées sous les deux scénarios blind et chunk pour
les deux bitextes de test. ratio désigne le rapport de la couverture cible sur la couverture source.

4.3.2 Précision et rappel

Comme nous l’avons précisé dans la section 3, les taux de couverture (source ou cible) ne nous
offrent aucun moyen d’apprécier la charge de travail incombant a l’utilisateur qui utiliserait les
propositions faites par un SMT particulier. Nous avons a cet effet mesuré les taux de précision
et de rappel tels que déﬁnis plus haut. Nous reportons en table 2 ces taux sur nos bitextes pour
le SMT obtenant les meilleurs résultats.

I1 s’agit d’un systeme qui considere toute suite d’au moins deux mots comme requéte, et qui
ne propose a l’utilisateur que la meilleure association a chaque requéte source de la couverture
calculée par le ﬁltre cover. La meilleure association a une requéte est celle qui obtient le
meilleur score d’alignement par notre procédure d’alignement.

bitexte précision rappel
Hansard 37.14 28.09
Verne 22.27 11.27

TAB. 2: Precision et rappel pour les bitextes Han s ard et Ve rne

Cette table indique que, dans le cas du bitexte Han sard, plus d’un tiers des briques traduction-
nelles proposées sont utilisables pour reconstruire 28% de la traduction oracle. La performance
sur le bitexte Verne est moindre, mais montre toutefois que le SMT est serviable pour l’aide a
la traduction de textes completement différents de ceux indexés dans la mémoire de traduction.

Dans une application réelle, il est raisonnable de penser qu’un utilisateur ne doit pas étre sub-
mergé par des propositions dont la taille excede de beaucoup celle de la traduction. En terme de
nos expériences, cela correspond a des taux de précision supérieurs ou égaux aux taux de rappel
mesurés ; ce que nous observons en table 2.

5 Conclusion

Notre objectif initial était d’évaluer le potentiel applicatif d’un systeme de mémoire de traduc-
tions capable de proposer a son utilisateur des unités sous-phrastiques. Nous avons pour cela
proposé un cadre applicatif ainsi qu’une méthodologie d’évaluation d’un tel systeme.

Les résultats reportés sur des bitextes de nature variée sont encourageants. Ils démontrent prin-
cipalement que les SMT commerciaux actuels sous-utilisent grandement le contenu de leur

Philippe Langlais et Michel Simard

mémoire en se concentrant sur des phrases completes. Aucune des phrases-sources de notre
corpus de test ne se retrouvait telle quelle dans la mémoire de traduction.

Nous sommes cependant encore loin d’un SMT sous—phrastique pleinement opérationnel. Il
est tout d’abord certain que notre modele d’alignement de mots est perfectible. Ensuite, il im-
porte de souligner les restrictions engendrées par le choix que nous avons fait de n’aller cher-
cher dans la mémoire que des sous-séquences apparaissant verbatim dans le texte source. Les
mécanismes a mettre en oeuvre pour assouplir cette déﬁnition d’une requéte dépasse cependant
largement l’étude présentée. Enﬁn, nous ne faisons aucune mention aux problemes d’interface
usager inhérents a la réalisation d’un véritable systeme ; aspect qui peut grandement cautionner
la viabilité d’un systeme.

Références

Ralf D. Brown. 1996. Exarnple—Based Machine Translation in the Pangloss System. In Proceedings of
the International Conference on Computational Linguistics (COLING) I 996, pages 169-174, Copenha-
gen, Demnark, August.

Pierre Isabelle, Marc Dyrnetrnan, George Foster, Jean—Marc Jutras, Elliott Macklovitch, Francois Per-
rault, Xiaobo Ren, and Michel Simard. 1993. Translation Analysis and Translation Automation. In
Proceedings of the 5th Conference on Theoretical and Methodological Issues in Machine Translation
(TMI), Kyoto, Japan.

Philippe Langlais. 2001. Combinaison de modeles markoviens pour la segmentation sous—phrastique de
textes. Technical report, RALI.

Elliott Macklovitch and Graham Russell. 2000. What’s been Forgotten in Translation Memory. In Pro-
ceedings of the Fourth Conference of the Association for Machine Translation in the Americas (AMTA),
pages 137-146, Cuernavaca, Mexico.

Elliott Macklovitch, Michel Simard, and Philippe Langlais. 2000. TransSearch: A Free Translation
Memory on the World Wide Web. In Proceedings of the Second International Conference on Language
Resources & Evaluation (LREC), pages 1201-1208, Athens, Greece.

Sonja Niessen, Franz Josef Och, Gregor Leusch, and Hermarm Ney. 2000. An evaluation tool for
machine translation: Fast evaluation for mt research. In Proceedings of the Second International Confe-
rence on Language Resources & Evaluation (LREC), pages 39-45, Athens, Greece.

Emmanuel Planas and O. Furuse. 1999. Formalizing Translation Memories. In Proceedings of Machine
Translation Summit VII, pages 331-339.

Erik F. Tjong Kim Sang and Sabine Buchholz. 2000. Introduction to the conll—2000 shared task: Chun-
king. In Proceedings of CoNLL 2000, pages 127-132, Lisbon, Portugal, september.

Michel Simard, George Foster, and Pierre Isabelle. 1992. Using Cognates to Align Sentences in Bi-
lingual Corpora. In Proceedings of the 4th Conference on Theoretical and Methodological Issues in
Machine Translation (TMI), pages 67-82, Montréal, Québec.

Harold Somers. 1999. Review Article: Exarnple—based Machine Translation. Machine Translation,
14:113-157.

Jean Véronis and Philippe Langlais. 2000. Evaluation of Parallel Text Alignment Systems - The AR-
CADE Project. Ir1 Jean Véronis, editor, Parallel Text Processing, Text, Speech and Language Techno-
logy. Kluwer Academic Publishers, Dordrecht.

Dekai Wu. 1997. Stochastic inversion transduction grammars and bilingual parsing of parallel corpora.
Computational Linguistics, 23(3):377-404, September.

