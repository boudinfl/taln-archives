TALN 2001, Tours, 2-5jui11et 2001

Gestionnaire de dialogue pour un systeme d’informations a
reconnaissance vocale

Sophie Rosset, Lori Lamel
LIMSI-CNRS, 91403 Orsay Cédex
rosset,lamel@limsi.fr

Résumé - Abstract

Dans cet article, nous présentons un gestionnaire de dialogue pour un systeme de demande
d’informations a reconnaissance vocale. Le gestionnaire de dialogue dispose de différentes
sources de connaissance, des connaissances statiques et des connaissances dynamiques. Ces
connaissances sont gérées et utilisées par le gestionnaire de dialogue via des stratégies. Elles
sont Inises en oeuvre et organisées en fonction des objectifs concernant le systeme de dialogue
et en fonction des choix ergonomiques que nous avons retenus. Le gestionnaire de dialogue
utilise un modele de dialogue fondé sur la determination de phases et un modele de la tache
dynamique. I1 augmente les possibilités d’adaptation de la stratégie en fonction des historiques
et de l’état du dialogue. Ce gestionnaire de dialogue, implémenté et évalué lors de la derniere
campagne d’évaluation du projet LE-3 ARISE, a permi une amelioration du taux de succes de
dialogue (de 53% a 85%).

Mots-clés : dialogue oral homme-machine, gestionnaire de dialogue, modele de dialogue, mo-
dele de la tache.

In this paper we describe the dialog manager of a spoken language dialog system for information
retrieval. The dialog manager maintains both static and dynamic knowledge sources, which are
used according to the dialog strategies. These strategies have been developed so as to obtain
the overall system objectives while taking into consideration the desired ergonomic choices.
Dialog management is based on a dialog model which divides the interaction into phases and
a dynamic model of the task. This allows the dialog strategy to be adapted as a function of the
history and the dialog state. The dialog manager was evaluated in the context of the LE3-ARISE
project, where in the last user tests the dialog success improved from 53% to 85%.

Keywords : spoken language dialog, dialog management, dialog model, task model.

1 Introduction

Les principaux modules d’un systeme de dialogue oral homme-machine sont le systeme de re-
connaissance, l’analyseur de langue naturelle et le gestionnaire de dialogue qui inclut l’acces
a la base de données, le générateur de réponses en langue naturelle et le systeme de synthese
vocale. Nous présentons dans cet article notre gestionnaire de dialogue et son fonctionnement

Sophie Rosset, Lori Lamel

en prenant pour exemple l’application ARISE (serveur vocal d’informations ferroviaires). Les
connaissances qu’il utilise sont également décrites brievement. Notre objectif était, pour le sys-
teme de dialogue, de permettre la navigation (changement de theme), la négociation, d’autoriser
une liberté d’expression la plus grande possible a l’utilisateur, de détecter et gérer les erreurs.
Un autre objectif était également de permettre l’aboutissement de la demande en un minimum
de temps avec un nombre d’echanges minimisé. I1 nous fallait également tenir compte du fait
que différents utilisateurs impliquent également différentes facon de guider les utilisateurs de
la part du systeme. Celui-ci doit donc étre adaptatif. Le gestionnaire de dialogue occupe une
place centrale et a pour objet de gérer l’utilisation des différentes connaissances aﬁn de per-
mettre aux différents modules qui le composent de procéder aux analyses dont ils sont chargés.
Aﬁn de remplir les objectifs lies a la souplesse d’utilisation et d’expression, nous avons écarté,
pour le modele de dialogue, les approches orientées-plans (cf. (Guyomard et al. 1993). Ces
approches tendent a considérer le dialogue comme une suite d’actions simples et prévisibles.
Or le dialogue, dans la mesure ou il procede d’une co-construction et d’une collaboration entre
une machine (pour un systeme de DOHM) et un humain, ne peut étre que partiellement plani-
ﬁé, les utilisateurs étant susceptibles de ne pas suivre le plan ﬁxé a priori. Notre conception
du dialogue et de la gestion de dialogue se rapproche davantage de celle proposée par (Luzzati
1989). Par contre, cette approche a été utilisée pour le modele de la tache.

2 LBS connaissances

Le gestionnaire de dialogue utilise différentes sources de connaissances. La distinction entre
connaissances statiques et connaissances dynamiques est classique dans le domaine du DOHM.
Les connaissances statiques sont composées des connaissances linguistiques et pragmatiques
qui sont utilisées lors l’interprétation et la génération. I1 s’agit d’un ensemble ﬁni de connais-
sances, qui n’ augmente pas au cours du dialogue. Elles regroupent notamment les modélisations
du domaine, de la tache et du dialogue ainsi que des connaissances linguistiques et pragma-
tiques. Une représentation du domaine est élaborée sous forme de réseau sémantique. Cette
représentation permet de constituer un lexique comprenant des entrées propres a l’application
et des entrées générales. Ces entrées sont des objets ou des modiﬁeurs d’objets correspondant
a un ensemble de mots ou d’expressions de la langue (par exemple, le modiﬁeur *aprés corres-
pond a plus tard, aprés, trop tét..., l’objet *carrissim0 correspond aux mots ou expressions tels
que carrisimo, réduction carrisimo, carte jeune, carréjeune, moins de 25 ans...). Ces objets et
modiﬁeurs sont proches des segments conceptuels tels que les déﬁnit et utilise (Pérennou 1996).
A partir de cette représentation du domaine, les différentes fonctionnalités (c’est-a-dire actions
dans le cadre de l’application considérée, par exemple, pour ARISE la réservation, l’achat d’un
billet..) sont déﬁnies. Ces fonctionnalités s’appliquent a un ensemble d’objets. Chaque fonc-
tionnalité peut étre structurée en sous-fonctionnalités. Les sous-fonctionnalités, de meme que
les objets, ne sont pas afﬁliées a une fonctionnalité donnée mais a l’ensemble de l’application.
Le modéle de la tdche est constitué de l’ensemble de ces fonctionnalités et sous-fonctionnalités
et des liens reliant les différentes (sous-)fonctionnalités et les objets du domaines. 11 se carac-
térise par une représentation sur trois niveaux. Chaque niveau correspond a un groupe d’actions
possibles dans le cadre de l’interaction (négociation, navigation et nouvelle demande). Le mo-
déle de dialogue utilisé est fondé sur la détection de phases. Chaque dialogue est constitué d’une
succession de phases qui peuvent étre enchassées les unes dans les autres. Une phase correspond
a l’action qui est en cours dans une (sous-)fonctionnalité donnée (p. ex. la négociation dans la
recherche d’un horaire). La phase peut avoir pour origine l’utilisateur ou le gestionnaire de dia-

Gestionnaire de dialogue pour un systeme d’informations a reconnaissance vocale

logue. Nous distinguons les phases d’acquisition (acquisition d’éléments), de ne’gociation, de
navigation, de post-acceptation (acceptation ou refus d’une proposition) et de me’ta-traitement
(repérage et traitements des erreurs). Ces phases sont des états a partir desquels le gestionnaire
peut prendre des décisions, et qui vont agir sur les noeuds de transitions du modele de la tache.
L’ identiﬁcation de ces phases permet au gestionnaire de dialogue de désambiguiser des énoncés
en se fondant sur le modele et surtout l’état de la tache (par exemple, l’énoncé carrissimo sera
interprété comme une question ou une contrainte selon que la phase identiﬁée sera acquisition
ou ne’gociation ou encore navigation).

Les connaissances dynamiques sont composées d’un ensemble de connaissances qui sont mo-
diﬁées et augmentées au cours du dialogue. I1 s’agit des historiques du dialogue (historique des
paires d’ énoncés systeme-utilisateur, historique des fonctionnalités ouvertes...), d’un historique
des évaluations de l’état du dialogue et du parcours dans la tache. Certains sont donc liés a
l’interaction et aux échanges et d’autres sont plus spéciﬁques a la tache et a l’état du dialogue.
L’ état de la tache peut étre comparé a une sorte de pointeur sur le réseau de fonctionnalités. I1
regroupe l’ensemble des chemins parcourus, probables et improbabables. I1 permet une certaine
prédictivité pour l’interprétation des énoncés a venir. L’ état du dialogue est caractérisé par un
score que le gestionnaire de dialogue attribue pour qualiﬁer le déroulement de l’interaction. Il
est évalué localement (pour chaque fonctionnalité en cours) et globalement (pour l’ensemble
de l’interaction en cours). Pour cela, le gestionnaire de dialogue utilise différents indices qui
sont le temps eﬁectif (le nombre d’échanges effectués a l’instant considéré), un temps maximal
the’orique (correspondant au nombre d’ échanges maximal nécessaire pour obtenir une informa-
tion et différent selon la fonctionnalité envisagée) et enﬁn une représentation du déroulement
du dialogue a l’aide de deux valeurs (une valeur P sur un axe progressif instanciée a chaque
fois que le dialogue progresse dans le “bon” sens et une valeur A sur un axe accidentel qui
est instancié a chaque fois qu’une erreur est repérée). Cette représentation est proche de celle
proposée par (Luzzati 1989) et utilisée par (Lehuen 1997) et (Lemeunier 2000). Ces connais-
sances dynamiques aident le gestionnaire de dialogue a s’adapter dynamiquement a la situation
en cours.

3 Le fonctionnement

Dans cette section nous présentons le fonctionnement du gestionnaire de dialogue et l’utilisation
qu’il fait des différentes connaissances. Nous décrivons les différents traitements que subit un
énoncé, une fois celui-ci transformé en suite de mots par le systeme de reconnaissance, jusqu’au
schéma sémantique que le gestionnaire de dialogue transmet au module de génération. La
ﬁgure 1 illustre les différents traitements effectués par le gestionnaire de dialogue.

Le module de reconnaissance envoie une suite de mots au module d’interprétation littérale qui
effectue une analyse hors contexte de cette suite de mots et produit un schéma sémantique. Le
gestionnaire de dialogue traite ce schéma sémantique et l’incorpore au schéma dialogique. Le
traitement est effectué en plusieurs étapes, par différents sous-modules, et abouti a la génération
d’un nouveau schéma sémantique pour le module de génération de réponse en langue naturelle.

Sophie Rosset, Lori Lamel

Suite de mots Interpretation
econnalssance Imerale

Schéma semantique
Geslionnaire
d ial og ue
Iﬁsmriques Schéma dialogique

CHT : Changement de theme

état de la _ ,
tache Interpretation T-Err : Traltement d Eneur
état du contextuelle NLG : module de Génémtion en Langue Naturelle

dialogue

F _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ ‘ Schéma dialogique E::] connaissances statiques

I modéle de ' _ _

: dialogue : |:| connalssances dynamiques
 modéle de  Aigui|@

{la téche :

--------------- - * Schéma dialogique

Schéma sémantique complet

Suite de mots [ NLG J

Figure 1: Etapes de traitement

3.1 Interprétation littérale

L’ interprétation littérale est effectuée en deux étapes distinctes : une premiere permettant une
analyse morphologique, syntaxique et sémantique de l’ énoncé. Cette analyse aboutit a la réécri-
ture sous la forme d’une suite d’objets et de relations entre ces objets. De cette facon, on aboutit
a une représentation symbolique de l’énoncé. Cette représentation est ensuite interprétée lit-
téralement. Il s’agit d’une interprétation partielle de l’énoncé qui sera ensuite réinterprétée par
le gestionnaire de dialogue selon le contexte. Cette forme d’analyse a l’avantage d’étre robuste
et de permettre ensuite un traitement indépendant de la langue.

3.2 Interprétation et action dialogique

Le gestionnaire de dialogue procede a l’analyse des énoncés en plusieurs étapes. Il produit et
gere un schéma dialogique qui contient des indicateurs de dialogue (temps, nombre d’ échanges,
état de la tache), des schémas sémantiques et des informations provenant des différents his-
toriques. Lors du dialogue, chaque énoncé de l’utilisateur passe par différentes étapes d’inteprétation,
chacune associée a des actions spéciﬁques, effectuées par un module de traitement spéciﬁque.
La premiere étape permet la mise £1 jour des différents marqueurs, indiquant l’état du dia-
logue, le type de demande, la fonctionnalité courante, le nombre de demandes ou encore le
nombre de concepts renvoyés par l’interprétation littérale. Le schéma dialogique (schéma con-
tenant toutes les informations ayant traits au dialogue en cours) est ainsi complété. Le role
du module d’interprétation contextuelle est de réinterpréter le schéma sémantique recu de

Gestionnaire de dialogue pour un systeme d’informations a reconnaissance vocale

l’interprétation littérale en fonction du déroulement du dialogue (de l’instant de l’énoncé sur
l’axe de déroulement), de l’état du dialogue, de connaissances de type sens commun et du mo-
dele de la tache. Cette réinterprétation du schéma sémantique est fondée sur un ensemble de
regles d’inférences et de normalisation. Cette étape permet de recaler le schéma dialogique sur
le dialogue en cours, de corriger certaines erreurs d’interpétation littérale et/ou de reconnais-
sance et de clariﬁer d’éventuelles ambiguités. Le module de décision (ou aiguilleur) recoit le
schéma dialogique fourni par l’interprétation contextuelle. I1 décide s’il y a un changement de
tache (navigation), une erreur (c’est-a-dire une contradiction entre l’historique du dialogue et
l’interprétation contextuelle et/ou le modele de la tache) ou si le dialogue suit son cours. Pour
cela, il s’aide du modele de la tache, des historiques et de l’état du dialogue. La phase (acquisi-
tion, post-acceptation, négociation, navigation ou méta-communication) dans laquelle se trouve
le dialogue prend la toute son importance. Selon la phase précédente, une nouvelle phase sera
instanciée. Cette nouvelle phase est une des conditions permettant par la suite de décider du
passage a une autre tache. Selon la décision prise, il envoie le schéma réinterprété et augmenté
a l’un des trois modules suivants :

1. Poursuite : ce module gere la poursuite du dialogue lorsque aucune interruption n’est
détectée. C’est le modele de la tache qui prend le relais.

2. Navigateur : c’est le module qui gere la navigation (changement de theme). La tache
courante est fermée (ou Inise en attente, le cas échéant) et la nouvelle tache activée selon
le modele de la tache.

3. Correcteur : ce module gere le traitement des erreurs. Si une erreur est détectée, la
stratégie pour la traiter dépend de la phase de dialogue dans laquelle se trouve le sys-
teme (acquisition ou post-acceptation), de la tache courante et des historiques. C’est a
ce moment-la que des erreurs systématiques du systeme de reconnaissance peuvent étre
prises en compte.

Suite a ces différents traitements, un schéma sémantique est généré et envoyé au module de
génération en langue naturelle.

4 Résultats et conclusions

Nos objectifs étaient d’obtenir un systeme d’interrogation orale d’une base de données (celle
de la SNCF) permettant d’obtenir un échange aussi naturel que possible, imposant le mini-
mum de contraintes a l’utilisateur. Aﬁn d’atteindre ces objectifs, le systeme devait permettre
les navigations entre et dans le cadre des différentes fonctionnalités déﬁnies de l’application et
des négociations pour chacune des catégories d’informations demandées et des propositions du
systeme. Nous avons donc opté pour un modele de la tache tres souple et un modele de dialogue
dynamique. Pour y parvenir, nous avons structuré aussi précisémment et clairement le domaine
que possible et organisé les différents éléments sur trois niveaux, par regroupement successifs,
tout en maintenant des liens entre les différents éléments d’un méme niveau. A priori, le ges-
tionnaire de dialogue autorise tous les chemins. Toutefois, il se fonde sur un chemin le plus
probable. Ce cheInin le plus probable varie au cours du dialogue selon le score caractéristique
de l ’e’tat du dialogue, 1’ evaluation du chemin déja parcouru et la phase de dialogue active. L’ état
du dialogue est évalué en fonction du modele de la tache, de ce qui s’est déja produit (les his-
toriques) et du nombre d’échanges. Ceci nous a permis non seulement d’assouplir le dialogue

Sophie Rosset, Lori Lamel

mais egalement de le rendre plus predictif et donc plus robuste face aux erreurs. Les differentes
connaissances decrites ici existent dans le systeme soit sous la forme de lexiques (notamment
la repesentation du domaine) soit sous la forme de regles d’inferences.

Un corpus de plus de 10000 appels a ete utilise pour developper et tester le gestionnaire de
dialogue et les differents modules presentes ici. Le systeme a ete regulierement evalue par la
SNCF (partenaire du projet ARISE) entre Novembre 1997 et Novembre 1998. Les sujets ont
ete recrutes par une compagnie independante. Ces evaluations ont montre une amelioration des
performances globales du systeme de dialogue (de 16% de reussite completel pour le premier
systeme a 85.2% pour le dernier systeme). Des evaluations plus speciﬁques (Rosset et al. 2000)
ont montre des ameliorations sur la gestion des demandes de navigation et sur le traitement des
erreurs. Les reussites en terme de passage d’une tache a une autre ont ete mesurees. Le gain
global a ete de 10% entre deux versions (en mai 1998: 82% de passages demandes ont reussi
et 92% en novembre 1998). I1 nous fallait egalement veriﬁer si le systeme ne passait pas a une
autre tache alors qu’aucune demande n’etait faite. Entre mai 1998 et novembre 1998 le nom-
bre de passages de taches effectues alors que non demandes a diIr1inue (de 40% des passages
effectues qui n’etaient pas demandes en mai 1998 a 21% en novembre 1998). Pour veriﬁer
la robustesse du systeme face a certaines categories d’erreurs (erreurs de reconnaissance) et sa
capacite a les reperer et les traiter, nous avons mis en rapport le taux de succes de dialogue
et le taux d’erreurs de reconnaissance. Ce taux est un taux d’erreurs sur mots transcrits or-
thographiquement et manuellement. Toutes les erreurs n’ impliquent pas necessairement une
erreur d’interpretation. Nous avons constate qu’ a un taux d’ erreurs de reconnaissance identique,
le taux de reussite de dialogue a augmente entre les deux versions du systeme (par exemple, pour
30% d’erreurs de reconnaissance, nous avions en 1997 63% de succes dans le dialogue et 73%
en 1998).

References

Guyomard M., Nerzic P. et Siroux J. (1993), Plans, metaplans et dialogue, Actes de la 4e‘me école d’e’té
sur les traitements des langues naturelles, Lannion, France.

Lehuen J. (1997), Un modele de dialogue dynamique et generique intégrant l’acquisition de sa compe-
tence linguistique : le systeme COALA, These de doctorat de l’Universite de Caen.

Lemeunier T. (2000), L’ intentionnalite communicative dans le dialogue homme—machine en langue na-
turelle, These de doctorat de l’universite du Maine.

Luzzati D (1989), Recherches sur le dialogue homme—machine: modeles linguistiques et traitements
automatiques, These d’etat, Paris 111.

Perennou G. (1996), Comprehension du dialogue oral — le role du lexique dans l’approche par segments
conceptuels, Lexique et communication parlée, GDR - PRC, 169-178.

Rosset S., Lamel L. et Bennacef S. (2000), Strategies pour un systeme de dialogue oral homme machine,
Actes 23e‘mes Joumées d’Etude sur la Parole, 329-332, Aussois, France.

1L’ ensemble du dialogue est une réussite : toutes les demandes, quelles qu’e11es soient, ont abouti.

