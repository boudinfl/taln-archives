TALN 2001, Tours, 2-5 juillet 2001

Tutoriel :
Intex et ses applications informatiques

Max Si1berztein(1), Thierry Poibeau(2), Antonio Ba1Vet(3)

(1)IBM et LADL
ms1@us.ibm.com
(2)Tha1es TRT et LIPN
ThierrV.Poibeau@tha1esgroup.com
(3)Tha1es TRT et Modyco
Antonio.Ba1Vet@tha1esgroup.com

Max Silberztein, Thierry Poibeau, Antonio Balvet

Ce support de cours comporte de larges extraits du manuel Intex (principalement chapitres 1
et 15), par ailleurs disponible sur le site du LADL (http: //ladl .univ—
mlv.fr/INTEX/index.html). On pourra se reporter au manuel pour toute information
complémentaire sur Intex. Il est complété par un apercu de certaines applications développées
par Thales Recherche et Technologies.

Support du tutoriel TALN 2001 « Intex et ses applications informatiques »

Conférenciers : Thierry Poibeau et Antonio Balvet

Résumé du tutoriel

Intex est un environnement de développement utilisé pour construire, tester et accumuler
rapidement des motifs morpho-syntaxiques qui apparaissent dans des textes écrits en langue
naturelle. Un survol du systeme est présenté dans [Silberztein, 1999] ; le manuel d'instruction
est disponible [Silberztein 2000]. Chaque description élémentaire est représentée par une
grammaire locale, qui est habituellement entrée en machine grace a l'éditeur de graphe
d'Intex.

Une caractéristique importante d'Intex est que chaque grammaire locale peut étre facilement
réemployée dans d'autres grammaires locales. Typiquement, les développeurs construisent des
graphes élémentaires qui sont équivalents a des transducteurs a états ﬁnis, et réemploient ces
graphes dans d'autres graphes de plus en plus complexes. Une seconde caractéristique d'Intex
est que les obj ets traités (grammaires, dictionnaires et textes) sont représentés de facon inteme
par des transducteurs a états finis. En conséquence, toutes les fonctionnalités du systeme se
ramenent a un nombre limité d'opérations sur des transducteurs. Par exemple, appliquer une
grammaire a un texte revient a construire l'union des transducteurs élémentaires, la
déterminiser, puis a calculer l'intersection du résultat avec le transducteur du texte. Cette
architecture permet d'utiliser des algorithmes efﬁcaces (par ex. lorsqu'on applique un
transducteur déterministe a un texte préalablement indexé), et donne a Intex la puissance
d'une machine de Turing (grace a la possibilité d'appliquer des transducteurs en cascade).

Dans ce tutoriel, nous montrerons comment utiliser un outil linguistique tel qu'Intex dans des
environnements informatiques. Nous nous appuierons sur des applications de ﬁltrage et
d'extraction d'inforrnation, réalisées notamment au centre de recherche de Thales. Les
applications suivantes seront détaillées, tant sur le plan linguistique qu'informatique :

— ﬁltrage d'information a partir d'un ﬂux AF P [Meunier et al. 1999]

— extraction de tables d'interaction entre genes a partir de bases de données textuelles en
génomique. [Poibeau 2001]

T utoriel .' Intex et ses applications informatiques

Le tutoriel montrera comment Intex peut étre employé comme moteur de ﬁltrage d'un ﬂux de
dépéches de type AFP dans un cadre industriel. Il détaillera également les fonctionnalités de
transformations des textes (transduction) permettant de passer rapidement de structures
linguistiques Variées a des formes normalisées permettant de remplir une base de données.
Sur le plan informatique, on détaillera l'appel aux routines Intex, les paramétrages possibles
(découpage en phrases, choix des dictionnaires...), et on survolera les nouvelles possibilités
d'intégration (Intex API).

Bibliographic

Max Silberztein, 1999. Intex: a FST toolbox. Theoretical Computer Sciences, 231:1. Elsevier
Science.

Max Silberztein, 2000. Manuel d'Utilisation Intex 4.22. Disponible a la page INTEX hébergée
sur le site du LADL: http://ladl.uniV-mlv.fr/INTEX/index.html

Frédéric Meunier, Antonio Balvet, Thierry Poibeau, 1999. Projet CORAIL (COmposition de
Requétes par des Agents Intelligents Linguistiques), Linguesticae Investigationes, 22, pp.369-
381.

Thierry Poibeau, 2001, Extraction d’information dans les bases de données textuelles en
génomique au moyen de transducteurs a nombre fini d’états, TALN’200I, Tours (dparaitre).

Max Silberztein, Nzierry Poibeau, Antonio Balvet

1 PRESENTATION RAPIDE D’INTEX

1.1 Introduction

INTEX est un environnement de developpement utilise pour construire des descriptions
formalisees a large couverture des langues naturelles, et les appliquer a des textes de taille
importante en temps reel.

Les descriptions des langues naturelles sont formalisees sous la forme de dictionnaires
electroniques, de grammaires representees par des graphes a etats ﬁnis et de lexiques-
grammaires. INTEX fournit des outils pour decrire la morphologie ﬂexionnelle et
derivationnelle, la Variation orthographique et terminologique, le vocabulaire (les mots
simples, les mots composes et les expressions ﬁgees), les phenomenes semi-ﬁges a la limite
entre lexique et syntaxe (grammaires locales, description des accords) et la syntaxe
(grammaires syntagmatiques).

INTEX est aussi utilise comme traitement de corpus : il permet de traiter rapidement des
textes de plusieurs centaines de mega-octets (typiquement, le texte d’une annee d’un
quotidien, ce qui est equivalent a 150 livres de poche). Les operations typiques sur les textes
incluent l’indexation de motifs morpho-syntaxiques, d’expressions ﬁgees ou semi-ﬁgees (par
ex. techniques), de concordances lemmatisees, et l’etude statistique des resultats.

T utoriel .' Intex et ses applications informatiques

Elnlex — Cullen! Language ls English 55 x
Ien QELA Eﬁﬁraph Le><icun—|3ramm5r gm: Winduws lnlu

- CI ﬂ ‘
'7 Display lags Text units are delimited sentences

453 del1m1led ur'11ts,2EE|E5[25‘l4 mm lnkens 12755 [2253] s1mp|e farms + 552 [255] tags + 5753 [15] digits + E334[21]del1mIlers

1411 simple wards, 572 unknown lnkens 25 amngneus cnmpnunds,

D \users\pu1l3eau\F'rugram Data\|e><1s\inte><\Enghsh\Empus\lhIbase_snt\resu|| rlf

interaction H 1. 23, .N+gene } , {Dfd, .N+gene }) , {Dfd, .N+gene} and {Dfd, .N+gene} . There are no i‘

recorded mutant alleles. {S}

The (1.2B,.N+gene) gene is a target gene that is activated by {Dfd,.N+gene}. {Dfd,.N+gene) is

required to activate (1.23, igenerglf '7' ' ' i ’ _
{Dfd,.N+gene} is incapable of activ

Pederson and Mahaffey, 1995*: The |

 

 

in the.;
Mahaff
homeop
Eulghe  
whose
suffic
melanc
and {t
Aravir
Stella
1 . <lJ+gene>
 -+( 1 ) ()—1>—@
1 ‘-'55! - 1 1 2 2 acI:ivaI:iun($l,$2)
(14-3-
{Ras8E
Karim
Chang a1:d5min51,5bcl5mir151.A:s:p 4
Chen 5 ablllttnahlllty-N=s 115:3 ah aB5C mm abd amum ebcmm -
t ablmahle-A=s=p 11ne1egn ahelsun
ans 0" abnurme-1.5-bnormal-A=ﬁ=p abelsunl-‘un1:t.1ur11'lEnkEmEyEr
5‘-lppre acceﬁﬁlblllty,acceﬁslbllltxnN:5 abezzauunnemezec aberratlunﬂupmann
Chang access:-rymccessury-A:5:1: aberratlunln abe1:rat1unKa1::h
ggye, _ acceﬁﬁurymccessury-N=s . aberrat1unL1u ebe::auun11a1va
T El r elglﬂ . " ' ' , e_bef§a_c_1gnSkee_u_:_Ab_1 A31. Abl ab1_ ﬂ
3 D‘S““"'” “'93 ll '"‘*‘°'‘“ 55.: DLC.22|e><icalentI1es Edit Fmzen expressions 1n the lent.
  and 3(3)“ ' The” are 4 “E” 3 eminu—e:id,amnu—ecm1.N+)cM+cun::s ;
1r1tEra:t1un[a[C1‘)4B,a[1 ca 21451 . There 15 um: recurded as Well as well ADV
  and SH - Them are 14 Ward ss sslfss ss .,,.'s11 ss my
1r1tE:a:t1ur1[Abcl—B,ph—d) , 5:1 , trx , Did , U'bx and 12 at least 3,’: 1,83,: ADV
T , .
  - D351 and Did - Th”? 315 "5 135° except r.har.,excepr. u:ha1:..mV+cnnjs
1ntera:t1un(2R—F,mysJ . There 15 um: zecuzded mutant e1 1,, sum, su__gDv
1r11:era:t.1or1[2R—L,mysJ . There 13 ene remarried mutant: 51 m ssspsnss Es,” response ,ss_,mv+,sr_
1n:era1:\:ion[1D'i.1.,:uh) and tub . Aravm at 51., 2000 H1 5everal,1n 5evera1.ADV
lncemcugn:14—3—3ze«;e,1-‘er: , 5:c42A and Far . Lgse— 1r1 51tu,1n s1t.u.A+ZX
ln S1tu,].1'l s1tu.ADV+2X
— , T 1n the presence uE,).r1 the presence (
1n the v1c1n1ty uE,).r1 the Vlclnlty ('
1 D —
w. -1. J ‘ ;
14‘4n.:,....~...e.| Hnemanne rl‘1nlr1—lnhme—n l ),|F2n|r1ra|P||l—F\F'mnmm F1 iTVl7M1rrn§nf|WnIrl—TulnI1P|rl iiT:lArrnl'1alFlParlel—ll'lnr-nrill l 551...»... £9Ii‘v.lIU 5n7|:>..1

Figure 1 : l’interface du systeme Intex

1.2 Caractéristiques techniques

INTEX tourne sous Windows 95, Windows 98 et Windows NT 4.0. INTEX étant tres
exigeant en terme de puissance de calcul et d’occupation mémoire, certaines anciennes
versions de ces systemes qui contiennent des dysfonctionnements (<< bugs >>) peuvent affecter
le bon fonctionnement du systeme. Nous conseillons Vivement de mettre a jour le systeme
d’exploitation, en particulier en téléchargeant le dernier << Service Pack >> disponible.

Les caractéristiques standard d’un micro-ordinateur pouvant faire tourner INTEX sur des
textes de la taille d’un roman (moins de 1 Mo) ne sont pas tres élevées : PC de type Pentium
2, 32 Mo de mémoire Vive, 500 Mo de disque dur disponibles, écran de 17 pouces, résolution
de 1024x768 en 16 bits avec un taux de rafraichissement minimal de 75 Hz.

Si INTEX est utilisé pour faire de la recherche documentaire sur des textes importants (50 Mo
et plus), ou si INTEX est utilisé pour compiler des dictionnaires de mots composés (10 000
entrées et plus) ou des tables de lexique-grammaire, nous conseillons la conﬁguration
suivante : PC de type Pentium 3, 128 Mo de mémoire, 2 Go de disque dur disponibles.

Max Silberztein, 17zierry Poibeau, Antonio Balvet

Si INTEX est utilise comme outil de developpement pour construire des graphes, un bon
ecran est necessaire : moniteur de 19 pouces minimum, capable d’afficher 1280x1024 points
en 16 bits avec un taux de rafraichissement de 80 Hz ou plus.

1.3 Outils

1.3.1 T ransducteurs ﬁnis

Une caracteristique essentielle d’INTEX est que tous les obj ets traites (textes, dictionnaires,
grammaires) sont a un moment ou a un autre representes par des transducteurs 5 états finis.

Un transducteur a etat fini est un graphe qui represente un ensemble de sequences en entree,
et leur associe des sequences produites en sortie. Typiquement, une grammaire representera
des sequences de mots (lues dans le texte), et produira des inforrnations linguistiques (par
exemple des informations sur la structure syntaxique) ; un dictionnaire representera des
sequences de lettres (qui epellent chaque entree lexicale), et produira des inforrnations
lexicales (partie du discours, codes ﬂexionnels, etc.) ; le transducteur d’un texte representera
les sequences de mots (qui forment chaque phrase) et leur associe des informations lexicales
et/ou syntaxiques (les marques linguistiques produites par les differentes analyses).

Representer ces trois types d’objets de la meme facon presente des avantages considerables,
notamment en terme de rapidite d’execution. Toutes les operations effectuees par INTEX se
ramenent a un ensemble limite d’operations sur des transducteurs. Par exemple, appliquer des
dictionnaires a un texte consistera a construire l’union des transducteurs de chaque
dictionnaire (le resultat est un transducteur), et a projeter ce transducteur sur le transducteur
du texte. Par ailleurs, INTEX perrnet des operations inedites, comme par exemple
l’application de grammaires a des dictionnaires (par exemple pour Verifier leur format).

1.3.2 Automates ﬁnis, expressions rationnelles

En ce qui conceme INTEX, les automates finis sont un cas particulier de transducteurs a
etats finis : ce sont des transducteurs qui ne produisent aucune information, autre que
l’information binaire << sequence reconnue >>, ou << sequence non reconnue >>. Typiquement,
nous utiliserons des automates finis pour etudier (rechercher, indexer, extraire, compter, etc.)
des sequences definies dans des textes.

Les expressions rationnelles constituent un moyen rapide d’entrer des automates finis
simples en machine, sans avoir a dessiner des graphes. Lorsque la sequence a rechercher
consistera en un, deux ou trois mots, il est bien plus rapide d’entrer ces mots directement dans
une expression rationnelle ; en revanche, des que la structure a rechercher se complique, il est
preferable de construire des graphes.

1.4 Commandes INTEX

Les fonctionnalites disponibles grace a l’interface graphique d’INTEX sont aussi disponibles
sous la forme de commandes Windows 95/NT. On peut donc construire des applications qui

T utoriel .' Intex et ses applications informatiques

ont la puissance d'INTEX simplement en appelant ces commandes, soit directement dans un
programme "BATCH" (en alignant les commandes) ou dans un programme plus sophistiqué
écrit en PERL, C++, JAVA, etc. Cette possibilité perrnet aussi d’ouvrir INTEX en modifiant
son comportement (on peut ainsi remplacer certaines de ses fonctionnalités).

1.5 La communauté INTEX

A ce jour, plus de 100 utilisateurs utilisent INTEX comme outil de recherche ou
d’enseignement, dans une dizaine de pays. Certains sont intéressés par les fonctionnalités de
traitement de corpus (analyse de textes littéraires, recherche d’inforrnation dans des joumaux
ou des documents techniques, etc.), d’autres par les fonctionnalités de description linguistique
(description de la morphologie, du lexique et des expressions d’une langue), d’autres enfin
par l’aspect linguistique informatique (analyse automatique de textes).

Ces utilisateurs constituent une Véritable communauté, et nous encourageons Vivement les
nouveaux utilisateurs a rejoindre, a travers les joumées INTEX (les quatriemes journées
INTEX ont eu lieu en juin 2001 a Bordeaux), le colloque annuel sur les lexiques-grammaires
comparés. Le site INTERNET ladl.uniV-mlV.fr contient aussi des informations sur les travaux
sur les dictionnaires électroniques DELA, les lexiques-grammaires et INTEX.

Max Silberztein, Nzierry Poibeau, Antonio Balvet

2 UTILISER INTEX EN LIGNE DE COMMANDE

2.1 Les variables d’environnement

Pour pouvoir utiliser INTEX en ligne de commande, il faut (bien entendu) qu’INTEX ait été
installé sur la machine, en général a partir du programme d’installation automatique
<< Setup.exe>>. Ensuite, les programmes d’INTEX doivent avoir acces aux cinq Variables
d’enVironnement suivantes :

INTEX : Variable contenant le chemin du dossier dans lequel l’application INTEX a été
installée ; par défaut : << c:\Program files\Intex >> ;

INTEXPRV : Variable contenant le chemin du dossier INTEX personnel ; par défaut :
<< c:\Intex » ;

INTEXAPP : variable contenant le chemin du dossier de l’application INTEX dans lequel les
commandes ont été installés ; par défaut : << c:\Program files\Intex\App » ;

INTEXLNG : Variable contenant le chemin du dossier de l’application INTEX de la langue
courante ; par exemple : << c:\Program files\Intex\French >> ;

INTEXLNGO : Variable contenant le chemin du dossier INTEX personnel de la langue
courante ; par exemple << c:\Intex\French >>.

En général, on Voudra aussi ajouter INTEXAPP au contenu de la Variable systeme PATH
pour pouvoir utiliser les commandes INTEX a partir de n’importe quel dossier.

Voici un extrait de ﬁchier << proﬁle.bat >> utilisé pour lancer les commandes INTEX a partir
d’une fenétre de commande DOS :

set INTEX: C:\Program Files\Intex

set INTEXPRV: C:\MonIntex

set INTEXAPP: %INTEX%\App

set INTEXLNG: %INTEX%\French

set INTEXLNGO= %INTEXPRV%\French

set PATH: %INTEXAPP%;%PATH%Attention a bien comprendre la différence entre le
dossier de l’application et le dossier personnel :

— Le dossier de l’application est utilisé lors de l’installation d’INTEX ; il contient
l’ensemble des programmes INTEX, ainsi que les données originelles (dictionnaires et
grammaires entre autres) fournies avec INTEX. En général, ce dossier ainsi que tous les
dossiers imbriqués doivent étre protégés en écriture : aucun utilisateur ne doit pouvoir
modiﬁer les ﬁchiers contenus dans ce dossier ;

T utoriel .' Intex et ses applications informatiques

— Chaque utilisateur INTEX a son propre dossier personnel ; c’est dans ce dossier que sont
rangées les données appartenant a chaque utilisateur : résultats des traitements
(concordances, index), textes, dictionnaires et grammaires personnels, etc. Par exemple,
chaque utilisateur peut éditer des dictionnaires ou grammaires foumis avec INTEX ; en
fait une copie de ces fichiers sera rangée dans le dossier personnel. Pour tous les
traitement ultérieurs, si un dictionnaire ou une grammaire apparait a la fois (avec le méme
nom) dans le dossier personnel et dans le dossier de l’application, la Version rangée dans
le dossier personnel sera utilisée. De cette facon, plusieurs utilisateurs INTEX peuvent
partager le méme ordinateur. L’utilisateur peut indiquer ou son dossier personnel se
trouve grace au menu << Info > Preferences >>.

2.2 Dossiers et ﬁehiers utilisés par INTEX

Les formats des ﬁchiers utilisés sont soit standard ou << évidents >> (lorsqu’il s’agit de ﬁchiers
au format texte par exemple). Toutes les commandes appelées par l’interface graphique sont
affichées dans la console d’INTEX (Info > Console) avec leurs parametres (touche F2). En
general, on peut effectuer un simple copier/coller entre la console INTEX et une fenétre de
commande pour lancer directement ces commandes.

Le contenu de la console est aussi disponible dans le ﬁchier << log.txt >> rangé dans le dossier
personnel. Ce dossier est remis a zero a chaque lancement d’INTEX.

2.2.1 Dossier du texte

Lorsqu’on utilise les commandes INTEX directement (sans passer par l’interface graphique),
on peut ranger les fichiers résultats des traitements ou l’on Veut. Dans la suite, nous
préciserons cependant ou les résultats des traitements sont rangés lorsque les commandes sont
appelées par INTEX (lorsqu’on utilise l’interface graphique).

Quand on utilise l’interface graphique d’INTEX pour traiter un texte donné, INTEX associe
au texte un dossier dans lequel toutes les informations relatives a ce texte sont rangées :
l’index du texte, son Vocabulaire, les concordances construites, etc. Le dossier du texte est
range a c6té du ﬁchier texte ; son nom est obtenu a partir du nom du ﬁchier en remplacant le
point d’extension par un caractere souligné << _ >>. Par exemple, si le texte traité est :

c:\Mon \Intex\French\Corpus\Toto.txt
alors le dossier du texte sera :

c:\Mon \Intex\French\Corpus\Toto_txt

Max Silberztein, Nzierry Poibeau, Antonio Balvet

2.2.2 F ichiers et dossiers spéciaux

La plupart des commandes INTEX utilisent par défaut ou obligatoirement des ﬁchiers dont le
nom et le dossier sont spéciﬁques :

, ce ﬁchier doit
obligatoirement se trouver dans le dossier INTEX de 1’uti1isateur ou, sinon dans le dossier de
1’app1ication INTEX.

Alphabet : 1e ﬁchier qui recense les caracteres traités comme des lettres '

idx, ida : 1’index du texte courant ; ces deux ﬁchiers doivent étre rangés dans le dossier du
texte. Noter que les programmes dicos, reconind et recorind accedent a ces ﬁchiers,
méme si ceux-ci n’apparaissent pas en ligne de commande.

Attention : a chaque fois qu’INTEX ouvre un texte, i1 Vériﬁe que la date de demiere
modiﬁcation du ﬁchier texte est antérieure a celle du ﬁchier idx. Si ce ﬁchier n’existe pas, ou
s’i1 a été créé avant la derniere modiﬁcation du texte, INTEX relance 1’indexation du texte, et
détruit tous les ﬁchiers du dossier du texte.

licence : ﬁchier d’inscription du logiciel. Ce ﬁchier est utilisé pour veriﬁer que la clé
d’insta11ation correspond au numéro de série du disque dur << C: », et aussi pour décrypter les
dictionnaires << .bin >> rangés dans les dossiers de 1’app1ication. Ce ﬁchier doit absolument étre
rangé dans le dossier << App >> du dossier INTEX de 1’app1ication, et ne doit pas étre modiﬁé.

Delaf, Delacf, Delae : INTEX s’attend a ce que ces dossiers existent dans le dossier de la
langue courante, dans le dossier de 1’app1ication INTEX et aussi dans le dossier privé de
1’uti1isateur. Ces dossiers sont utilisés par exemple par les programmes dicos, dicoc et
dicoe en conjonction avec le caractere << ~ >> pour localiser des dictionnaires.

2.2.3 Résultats des traitements

La plupart des commandes INTEX produisent des commentaires, par exemple, << Loading
grammar DET>> ou «Cannot find grammar AdvTime», et/ou une description des
résultats produits, par exemple << 235 matching sequences >>. En général, 1orsqu’on utilise
1’interface graphique d’INTEX, ces commentaires sont écrits dans le ﬁchier << res.txt >> du
dossier personnel (INTEXPRV).

2.3 Les commandes

Les commandes suivantes correspondent a des ﬁchiers << .exe >> rangés dans le dossier
INTEXAPP.

T utoriel .' Intex et ses applications informatiques

tokenslist Index ResultingList

Sous l’interface graphique d’INTEX, apres avoir ouvert et indexé un ﬁchier-texte (Text >
Open) INTEX fournit la liste des 100 lexemes (tokens) les plus frequents dans la fenétre
<< Tokens list >>. Rappelons qu’INTEX distingue quatre types de lexemes :

simple forms : séquences de lettres délimitées par des séparateurs ;
tags : séquences de caracteres entre les deux caracteres spéciaux << { >> et << } » ;
digits : les chiffres (de << 0 >> 2‘). << 9 ») ;

delimiters : tout séparateur, a part les chiffres et les blancs (espace, caracteres de
tabulation, << NEWLINE >> et << CARRIAGE RETURN >>).

La commande tokenslist prend comme argument l’index du texte, et construit la liste de
tous les lexemes du texte, associés a leur fréquence et triée alphabétiquement.

Le ﬁchier index du texte construit par INTEX (si l’on utilise l’interface graphique) a pour
nom << idx >> et est rangé dans le dossier du texte.

concord LLength RLength Tag? Text Index Concordance

Ce programme construit une concordance (Concordance) a partir d’un texte (Text), de
l’index des séquences reconnues (Index), et de la donnée du nombre de caracteres a gauche
des séquences reconnues (LLength) eta droite (RLength).

Attention : le parametre RLength compte le nombre de caracteres en incluant ceux
contenus dans les séquences reconnues. Si ce parametre est inférieur a la longueur des
séquences reconnues, celles-ci seront coupées.

Cette fonctionnalité a été choisie parce que les concordances sont souvent construites pour
étre imprimées, chaque contexte étant présenté sur une ligne. En sélectionnant des longueurs
de contextes adéquates et une police de caracteres a largeur ﬁxe (comme << Courier»), on peut
obtenir de belles concordances.

Si le parametre RLength est 0 (zero), les séquences reconnues sont toujours afﬁchées en
entier, mais aucun contexte droit n'est foumi. On peut donc obtenir la simple liste des
séquences reconnues en donnant O comme longueurs gauche et droite.

Le parametre Tag? a pour Valeur << yes >> si la concordance doit afﬁcher les étiquettes, << no >>
sinon.

Max Silberztein, Nzierry Poibeau, Antonio Balvet

dic2fst AsciiDelaf FstDelaf

construit un transducteur fini deterrniniste minimal a partir d’un dictionnaire au format
DELAF/DELACF. Le transducteur est represente par deux fichiers: FstDelaf.bin
contient la partie << automate », c’est-a-dire la partie reconnaissance du transducteur ; le
ﬁchier FstDelaf . inf contient la partie << production >> du transducteur, c’est-a-dire les
informations associees a chaque mot reconnu.

dicoc [cdl] Text ResDir Stats ResAmbDic ResNonAmbDic Reslndex
C—Dic...

Programme de consultation de dictionnaires de mots composes. Le premier parametre est un
caractere qui decrit le type de ﬁchier texte dans lequel on recherche les mots composes :

<< c >> : le texte est une concordance ; en consequence, on ne traite que le texte en deuxieme
colonne (les colonnes sont delimitees par un caractere de tabulation) ;

<< d >> : les unites de texte (en general, des phrases) sont delimitees par la marque << {8} >> ;

<< 1 >> : les unites de texte sont les lignes (ou paragraphes), delimitees soit par le caractere <<
NEW LINE », soit par la sequence de deux caracteres << CARRIAGE RETURN » - << NEW
LINE >>.

Le second parametre est le nom du fichier-texte dans lequel on recherche les mots composes ;
le troisieme parametre est le nom du dossier dans lequel les quatre ﬁchiers-resultats Vont étre
ranges :

— Stats : nom du fichier (range dans ResDir) qui contient le nombre de mots composes
trouves ;

— ResAmbDic : nom du fichier (range dans ResDir) qui contient la liste des mots
composes ambigus trouves ;

— ResNonAmbDic : nom du fichier (range dans ResDir) qui contient la liste des mots
composes non-ambigus trouves ;

— Reslndex : nom du ﬁchier (range dans ResDir) qui contient l’index des mots
composes trouves.

T utoriel .' Intex et ses applications informatiques

Note : les deux parametres ResAmbDic et ResNonAmbDic sont gardes seulement pour des
raisons de compatibilite. Lorsqu’on utilise l’interface d’INTEX, ils sont toujours egaux : la
distinction entre mots composes ambigus et non-ambigus n’est plus pertinente dans le module
de consultation des dictionnaires ; c’est maintenant une fonctionnalite du module de
desambigu'1'sation.

Les parametres suivants C—Dic sont les noms des dictionnaires de mots composes
(d’extension<< .bin »,« .dic >> ou<< .fst >>) quel’on Veut appliquer.

— Si le premier caractere du nom d’un dictionnaire est << ~ », alors le dictionnaire est
recherche dans le dossier Delacf de la langue courante, d’abord dans le dossier INTEX de
l’utilisateur, puis dans le dossier INTEX de l’application. Par exemple, << ~Noms.bin >> est
une reference a un dictionnaire << Noms.bin >> range dans le dossier << c:\My
Intex\French\Delacf », ou alors dans le dossier << c:\Program files\Intex\Delacf >>.

— Si le caractere qui precede le point (l’extension du nom de fichier) est un caractere << - »,
alors le dictionnaire est applique en premier ; si le caractere est un caractere << + », le
dictionnaire est applique en demier.

dicoe [cdl] Text ResDir Stats ResDic Reslndex TextDLF TextDLC
FSTSM

Programme de recherche des expressions figees. Le premier parametre est un caractere qui
decrit le type de fichier texte dans lequel on recherche les mots composes :

— << c >> : le texte est une concordance ; en consequence, on ne traite que le texte en

deuxieme colonne (les colonnes sont delimitees par un caractere de tabulation) ;

— << d >> : les unites de texte (en general, des phrases) sont delimitees par la marque << {S}
» ;

— << 1 >> : les unites de texte sont les lignes (ou paragraphes), delimitees soit par le caractere
<< NEW LINE », soit par la sequence de deux caracteres << CARRIAGE RETURN » - <<
NEW LINE >>.

Le second parametre est le nom du ﬁchier-texte dans lequel on recherche les expressions
figees ; le troisieme parametre est le nom du dossier dans lequel les trois fichiers-resultats
Vont étre ranges :

— Stats : nom du ﬁchier (range dans ResDir) qui contient le nombre d’expressions
figees trouvees ;

— ResDic : nom du ﬁchier (range dans ResDir) qui contient la liste des expressions
figees trouvees ;

Max Silberztein, Nzierry Poibeau, Antonio Balvet

— Reslndex : nom du ﬁchier (rangé dans ResDir) qui contient l’index des expressions
figées trouvées.

Les deux parametres suivants TextDLF et TextDLC sont les noms des dictionnaires du
texte (que l’on a préalablement construit grace a dicos et dicoc) que l’on Veut utiliser
pour reconnaitre les expressions figées. Pour ne pas utiliser ces fichiers, on peut entrer le
caractere << — >>.

Les parametres suivants sont les noms des grammaires d’expressions figées (extension <<
. fst >>) que l’on Veut appliquer.

Si le premier caractere du nom d’une grammaire est << ~ », alors la grammaire est recherchée
dans le dossier Delae de la langue courante, d’abord dans le dossier INTEX de l’utilisateur,
puis dans le dossier INTEX de l’application. Par exemple, << ~C1d.fst >> est une reference a
une grammaire << C1d.fst >> rangée dans le dossier << c:\My Intex\French\Delae », ou alors
dans le dossier << c:\Program files\Intex\Delae >>.

Ces grammaires sont :

-- des << Vrais transducteurs », c’est-a-dire auto-suffisants, en général compiles a partir de
graphes ou de séries de graphes (grace a la commande FSGraph > Compile FST) ;

-- ou alors des transducteurs qui contiennent des références non résolues a des grammaires
rangées dans le dossier << Graphs\Lib », comme par exemple Ins. ou Date. Ces grammaires
ont été construites a partir d’un graphe-patron et d’une table de lexique-grammaire. Les
références sont résolues par le programme dicoe.

dicos [cdl] Text ResDir ResDic ResErr Stats S—Dic...

Programme de consultation de dictionnaires de mots simples.
[cdl] : type du texte (<< c >> : concordance, << d >> : texte délimité, << 1 >> : ligne par ligne) ;

Le second parametre Text est le nom du fichier-texte dans lequel on recherche les mots
simples ; le troisieme parametre est le nom du dossier dans lequel les trois ﬁchiers-résultats
Vont étre rangés :

— ResDic : nom du ﬁchier (rangé dans ResDir) qui contient la liste des mots simples
trouvés;

— ResErr : nom du ﬁchier (rangé dans ResDir) qui contient la liste des formes simples
non trouvées ;

T utoriel .' Intex et ses applications informatiques

— Stats : nom du fichier (range dans ResDir) qui contient le nombre de mots simples
trouves.

Les parametres suivants S—Dic sont les noms des dictionnaires de mots simples
(d’extension<< .bin >>,<< .dic >> ou<< .fst >>) quel’on Veut appliquer.

— Si le premier caractere du nom d’un dictionnaire est << ~ >>, alors le dictionnaire est
recherche dans le dossier Delaf de la langue courante, d’abord dans le dossier INTEX de
l’utilisateur, puis dans le dossier INTEX de l’application. Par exemple, << ~Prenoms.bin >>
est une reference a un dictionnaire << Prenoms.bin >> range dans le dossier << c:\My
Intex\French\Delaf >>, ou alors dans le dossier << c:\Program files\Intex\Delaf >>.

— Si le caractere qui precede le point (l’extension du nom de ﬁchier) est un caractere << - >>,
alors le dictionnaire est applique en premier ; si le caractere est un caractere << + >>, le
dictionnaire est applique en demier.

enrich Text Index Result

Ce programme prend comme parametre le nom d’un ﬁchier-texte Text, et le nom d’un ﬁchier
qui contient un index de sequences du texte a modiﬁer Index, et construit le texte resultat
Result. L’index a ete typiquement construit par un des programmes de reconnaissance
(recon, reconind, recor ou recorind).

Lorsqu’on utilise l’interface d’INTEX, les modiﬁcations a apporter au texte (pour construire
le texte resultat) sont de deux types : soit on remplace les sequences reconnues par les
sequences produites par le transducteur ; soit on insere les sequences produites par le
transducteur dans le texte.

etiqa S—Dic C—Dic E—Dic Text FST—Text Stats

etiqa est utilise pour construire le transducteur du texte. S—Dic est le dictionnaire qui
contient tous les mots simples du texte (Sous l’interface INTEX, il a ete construit avec le
programme dicos) ; C—Dic est le dictionnaire qui contient tous les mots composes du texte
(Sous INTEX, il a ete construit avec dicoc) ; E—Dic est le dictionnaire qui contient toutes
les expressions figees du texte (Sous INTEX, il a ete construit avec dicoe) ; Text est le
texte (qui doit étre au format << . snt >>) ; le resultat est le FST—text ; Stats contient
quelques mesures des resultats (nombre d’etats et de transitions).

Max Silberztein, Nzierry Poibeau, Antonio Balvet

etiqc [cdl] Text TaggedText C—Dictionaries...

etiqc est utilise pour reconnaitre et etiqueter les mots composes d’un texte.
[cdl] : type du texte (<< c >> : concordance, << d >> : texte delimite, << 1 >> : ligne par ligne) ;

Le second parametre est le texte ; le nom du ﬁchier texte etiquete est donne en troisieme
parametre.

Les parametres suivants sont les noms des dictionnaires de mots composes (fichiers
d’extension<< .bin »,« .dic >>ou<< .fst >>):

— Si le premier caractere du nom d’un dictionnaire est << ~ », alors le dictionnaire est
recherche dans le dossier Delacf de la langue courante, d’abord dans le dossier INTEX de
l’utilisateur, puis dans le dossier INTEX de l’application. Par exemple, << ~Noms.bin >> est
une reference a un dictionnaire << Noms.bin >> range dans le dossier << c:\My
Intex\French\Delacf », ou alors dans le dossier << c:\Program files\Intex\Delacf >>.

— Si le caractere qui precede le point (l’extension du nom de fichier) est un caractere << - »,
alors le dictionnaire est applique en premier ; si le caractere est un caractere << + », le
dictionnaire est applique en demier.

etiqg [Ddl] [Ol234567] Text FST S—Dic C—Dic NAC—Dic Result
Stats

Programme d’etiquetage de textes avec levee d’ambigu'1'te par grammaire locale.

L’etiquetage consiste a remplacer les formes simples non ambigues, i.e. associees a une seule
information lexicale, par l’inforrnation lexicale elle-meme ecrite entre accolades ' meme

5

chose pour les sequences de formes simples qui correspondent a des mots composes non
ambigus.

Le premier parametre << Ddl >> correspond au type du texte :
— << D >> : on etiquette un dictionnaire de mots composes ;
— << d >> : on etiquette un texte au format << . snt » ;

— << 1 >> : on etiquette un texte ligne par ligne (ou paragraphe par paragraphe).

T utoriel .' Intex et ses applications informatiques

Le second parametre correspond au type d’etiquetage :

— << 0 >> : les inforrnations lexicales sont presentees entre parentheses, apres les formes
etiquetees (utilise pour etiqueter un dictionnaire de mots composes) ;

— << 1 >> : les etiquettes contiennent toute l’inforrnation lexicale ;

— << 2 >> : idem ; on etiquette les mots composes ambigus ;

— << 3 >> : les etiquettes contiennent le lemme seul (i.e. on lemmatise le texte) ;
— << 4 >> : idem ; on etiquette aussi les mots composes ambigus ;

— << 5 >> : les etiquettes contiennent le lemme et la categorie ;

— << 6 >> : idem ; on etiquette aussi les mots composes ambigus ;

— << 7 >> : le resultat est une expression rationnelle (i.e. on etiquette aussi les formes
ambigue's).

La grammaire locale de levee d’ambigu'1'te est un FST (quatrieme parametre). Sous
l’interface INTEX, c’est en general l’union des grammaires locales selectionnees. Les deux
parametres suivants sont les dictionnaires du texte : des mots simples S—Dic et des mots
composes C—Dic (en general, construits avec dicos et dicoc). Le parametre suivant
NAC—Dic est le nom d’un dictionnaire utilise pour traiter en priorite certaines sequences et
formes non-ambigues ; le texte etiquete est donne ensuite Result ; quelques comptages
sont ecrits dans le ﬁchier Stats (nombre de sequences desambigu'1'sees nombre
d’incoherences).

5

flexion FST—directory DELAS DELAF errors

Programme de ﬂexion automatique d’un dictionnaire DELAS. Le premier parametre est le
nom du dossier dans lequel tous les transducteurs de ﬂexion (ﬁchiers a extension << .fst >>) sont
ranges ; le resultat consiste en deux ﬁchiers : un ﬁchier de type DELAF et un ﬁchier qui
contient toutes les entrees du dictionnaire DELAS qui n’ont pas pu étre ﬂechies.

fst2txt [cdl] [gp] [fsr] FST Text S—Dic NAC—Dic AC—Dic ResText

Application d’un transducteur a un texte

Max Silberztein, Nzierry Poibeau, Antonio Balvet

[cdl] : type du texte (<< c >> : concordance, << d >> : texte délimité, << 1 >> : ligne par ligne) ;

[gp] : on donne priorité aux séquences reconnues les plus longues (<< g >>) ou les plus petites
(<< p ») ;

[f sr] : on insere les séquences produites par le transducteurs dans le texte (<< f >>) ; on
remplace les séquences reconnues par les séquences produites (<< s >>) ; on ne tient pas compte
des séquences produites (<< r ») ;

FST : le transducteur a appliquer au texte ;

Text : le nom du fichier-texte (fichier d’extension << .txt >> ou << .snt >>) ;
S—Dic : le dictionnaire des mots simples du texte ;

NAC—Dic : le dictionnaire des mots composés non ambigus du texte ;
AC—Dic : le dictionnaire des mots composés ambigus du texte ;

ResText : le texte résultat.

genere FST Limit Format Language

On explore un transducteur en générant les chemins possibles.

FST : le premier argument est soit un graphe (extension << .grf »), soit un transducteur
(extension << .fst >>) ;

Limite : si ce parametre est 0, on cherche a générer tous les chemins possibles. Si ce
parametre est positif, on arréte l’exploration du transducteur apres avoir généré un nombre
donné de séquences ; si ce parametre est négatif, on arréte l’exploration du transducteur apres
un nombre de secondes donné ;

Language : le fichier qui contient toutes les séquences reconnues par le transducteur.

Format : le format du résultat. On peut choisir de représenter les séquences reconnues &
produites de quatre facons :

1 : reconnues => produites ; par exemple : tables => table . N: fs
2 : dans le format DELAF ; par exemple : tables, table .N :fs

3 :dans le format DELACF ; par ex. : tables rondes, table ronde .N: fp

T utoriel .' Intex et ses applications informatiques

4 : séquences reconnues synchronisées avec séquences produites ; par ex. : la_<PRO>
vole_<V> . (si la séquence reconnue est << la vole >> et la séquence produite est << <PRO>
<V> »)

gr2fst GraphDir Graph Fst Determ?

Programme de compilation d’un transducteur fini (fichier d’extension << .fst >>) a partir d’un
graphe (et de tous les graphes imbriqués).

GraphDir : dossier dans lequel le graphe est rangé (c’est aussi dans ce dossier qu’INTEX
commence sa recherche des graphes imbriqués)

Graph : nom du fichier graphe
FST : le transducteur résultat ;

Determ? : << yes >> si l’on Veut déterminiser le transducteur ; << no >> sinon.

index [cdl] Text Keys Addr Stats TokensList CharsList

Programme d’indexation d’un texte Text. Les clés de l’index sont les lexemes (tokens) qui
appartiennent a quatre classes :

les séquences de lettres (formes simples) ;
— les chiffres (de << 0 >> 2‘). << 9 ») ;
— les étiquettes (toute séquence de caracteres entre deux accolades << { >> et << } >>)

— les séparateurs (i.e. tous les caracteres qui ne sont ni des lettres, ni des chiffres, ni des
blancs).

[cdl] : type du texte (<< c >> : concordance, << d >> : texte délimité, << 1 >> : ligne par ligne) ;

L’index est construit dans deux fichiers : Keys contient tous les lexemes, et Addr contient
la liste des adresses de toutes les occurrences correspondantes dans le texte.

TokensList contient la liste des 100 lexemes les plus frequents ;

Max Silberztein, Nzierry Poibeau, Antonio Balvet

CharsList contient la liste de tous les caracteres trouvés dans le ﬁchier texte.

inter Grammar FST—Text ResFST—Text Stats

Programme de désambigu'1'sation d’un transducteur de texte.

inter prend une grammaire Grammar représentée par un transducteur de levée d’ambigu'1'té
et un transducteur de texte FST—Text, et construit l’intersection de ces deux transducteurs,
i.e. le nouveau transducteur du texte ResFST—Text compatible avec la grammaire.

La grammaire est un transducteur au format << . f st >> ; en général, calculé a partir de l’union
de tous les transducteurs sélectionnés (eux-mémes compiles a partir de graphes).

Le FST—Text est lui-méme construit avec le programme etiqa. Il contient précisément un
transducteur par phrase du texte.

next2iso next—file iso—file

Programme de conversion de textes au format NextStep OpenStep Vers le format Windows
ANSI.

lparse [wps] [SLA] [limit] Grammar FST—Text ResText Stats

Analyseur syntaxique d’INTEX. Construit l’arbre qui représente la structure de la phrase
(mode << normal >>) ou l’arbre de dérivation de l’analyseur (mode << debug >>).

Grammar est un graphe qui contient en général d’autres graphes imbriqués ; la grammaire
décrite peut étre une grammaire CF (Context Free). La production de la grammaire est utilisée
pour représenter la structure des séquences reconnues : typiquement, une grammaire reconnait
des séquences et produit des parentheses étiquetées autour des constituants caractéristiques
(syntagmes, groupes nominaux, modifieurs).

Le texte FST—TEXT est lui-méme représenté par un transducteur. Il est construit en général
par application du programme etiqa, et éventuellement du programme interg.

[WPS] : la grammaire est appliquée a toute la phrase (<< W >>) ; au début de chaque phrase (<<
P >>) ou la fin de chaque phrase (<< S >>).

T utoriel .' Intex et ses applications informatiques

Attention au parametre << W >> : ne pas oublier d’inclure dans la grammaire l’éVentuel signe de
ponctuation de fin de phrase, sinon aucune phrase ne sera reconnue.

[SLA] : on indexe les séquences reconnues les plus courtes (<< S »), les plus longues (<< L >>)
ou toutes les séquences (<< A >>).

Le ﬁchier résultat ResText contient la liste des séquences reconnues dans lesquelles ont été
insérées les marques produites par la grammaire (les parentheses étiquetées). Chacune des
séquences structurées peut étre ensuite Visualisée sous forme d’arbre par INTEX.

re2fst RegExp FST.

Construit un automate déterministe minimal FST a partir d’une expression rationnelle
RegExp.

recondic FST Dictionary IncorrectEntries

Applique une grammaire a un dictionnaire. La grammaire est automate représenté par un
ﬁchier << .fst >> (les productions éventuelles sont ignorées).

Typiquement, la grammaire décrit le format valide des entrées du dictionnaire. Toutes les
entrées du dictionnaire qui ne sont pas reconnues sont écrites dans le ﬁchier résultat
IncorrectEntries

Les quatre programmes suivants : recon, reconind, recor et recorind
implémentent des Variantes de la méme fonctionnalité : il s’agit d’appliquer une grammaire a
un texte. recon et reconind appliquent un transducteur ﬁni << .fst >> au texte ; recor et
re corind appliquent un graphe << .grf >> (qui contient des imbrications éventuellement) au
texte. recon et recor appliquent la grammaire au texte lui-méme, tandis que reconind
et re corind utilisent l’index du texte pour accélérer la recherche.

recon [cdl] [gpt] [fsr] Limit FST Text S—Dic NAC—Dic AC—Dic
Reslndex Stats

Max Silberztein, Nzierry Poibeau, Antonio Balvet

Applique une grammaire FST a un texte Text. La grammaire FST est un transducteur
represente par un fichier << .fst >>.

[coll] : type du fichier texte (<< c >> : concordance au format << .con »; << d >> : texte delimite
au format << .snt >> ; << 1 >> : texte Windows ANSI au format << .txt >> (traite ligne par ligne) ;

[gpt] : on indexe les sequences reconnues les plus longues (<< g »), les sequences
reconnues les plus courtes (<< p »), ou toutes les sequences reconnues (<< t>>) ;

[f sr] : on insere les productions du transducteur dans le texte (<< f >>) ; on remplace les
sequences reconnues par les sequences produites par le transducteur (<< s >>) ; on ne tient pas
compte des productions du transducteur (<< r ») ;

Limit : on interrompt la recherche apres avoir trouve un certain nombre de sequences. Si
Limit = 0, alors on recherche toutes les sequences du texte ;

Lors de l’application du transducteur au texte, on utilise eventuellement des ressources
lexicales qui sont rangees dans les trois dictionnaires du texte :

S—Dic : dictionnaire des mots simples du texte ;
NAC—Dic : dictionnaire des mots composes du texte non ambigus ;
AC—Dic : dictionnaire des mots composes du texte ambigus.

Le resultat du traitement est l’index des sequences reconnues Res Index.

reconind [cdl] [gpt] [fsr] Limit FST Text S—Dic NAC—Dic AC—Dic
Reslndex Stats

Applique une grammaire FST a un texte indexe Text. L’index du texte est range dans deux
fichiers de nom << idx >> (la liste des lexemes du texte) et << ida >> (les adresses des occurrences
des lexemes dans le texte) trouves dans le dossier du texte (on suit la convention INTEX). Par
exemple, si le texte est range dans le fichier :

c:\Intex\French\Corpus\toto.snt
alors les deux fichiers suivants doivent exister :
c:\Intex\French\Corpus\toto_snt\idx

c:\Intex\French\Corpus\toto_snt\ida

T utoriel .' Intex et ses applications informatiques

La grammaire FST est un transducteur represente par un fichier << .fst >> qui a ete compile soit
a partir d’une expression rationnelle, soit a partir d’un graphe.

[coll] : type du fichier texte (<< c >> : concordance au format << .con »; << d >> : texte delimite
au format << .snt >> ; << 1 >> : texte Windows ANSI au format << .txt >> (traite ligne par ligne) ;

[gpt] : on indexe les sequences reconnues les plus longues (<< g »), les sequences
reconnues les plus courtes (<< p »), ou toutes les sequences reconnues (<< t>>) ;

[f sr] : on insere les productions du transducteur dans le texte (<< f >>) ; on remplace les
sequences reconnues par les sequences produites par le transducteur (<< s >>) ; on ne tient pas
compte des productions du transducteur (<< r ») ;

Limit : on interrompt la recherche apres avoir trouve un certain nombre de sequences. Si
Limit = 0, alors on recherche toutes les sequences du texte ;

Lors de l’application du transducteur au texte, on utilise eventuellement des ressources
lexicales qui sont rangees dans les trois dictionnaires du texte :

S—Dic : dictionnaire des mots simples du texte ;
NAC—Dic : dictionnaire des mots composes du texte non ambigus ;
AC—Dic : dictionnaire des mots composes du texte ambigus.

Le resultat du traitement est l’index des sequences reconnues Res Index

recor [cdl] [gpt] [fsr] Limit GRF Text S—Dictionary NAC—
Dictionary AC—Dictionary Index Stats

La grammaire GRF est un transducteur represente par un fichier << .grf >> qui peut
eventuellement inclure des graphes imbriques.

[coll] : type du fichier texte (<< c >> : concordance au format << .con »; << d >> : texte delimite
au format << .snt >> ; << 1 >> : texte Windows ANSI au format << .txt >> (traite ligne par ligne) ;

[gpt] : on indexe les sequences reconnues les plus longues (<< g »), les sequences
reconnues les plus courtes (<< p »), ou toutes les sequences reconnues (<< t>>) ;

[f sr] : on insere les productions du transducteur dans le texte (<< f >>) ; on remplace les
sequences reconnues par les sequences produites par le transducteur (<< s >>) ; on ne tient pas
compte des productions du transducteur (<< r ») ;

Limit : on interrompt la recherche apres avoir trouve un certain nombre de sequences. Si
Limit = 0, alors on recherche toutes les sequences du texte ;

Max Silberztein, Nzierry Poibeau, Antonio Balvet

Lors de l’application du transducteur au texte, on utilise eventuellement des ressources
lexicales qui sont rangees dans les trois dictionnaires du texte :

S—Dic : dictionnaire des mots simples du texte ;
NAC—Dic : dictionnaire des mots composes du texte non ambigus ;
AC—Dic : dictionnaire des mots composes du texte ambigus.

Le resultat du traitement est l’index des sequences reconnues Res Index.

recorind [cdl] [gpt] [fsr] Limit GRF Text S—Dictionary NAC—
Dictionary AC—Dictionary Index Stats

Applique une grammaire GRF a un texte indexe Text. L’index du texte doit étre range dans
deux ﬁchiers de nom << idx >> (la liste des lexemes du texte) et << ida >> (les adresses des
occurrences des lexemes dans le texte) trouves dans le dossier du texte (on suit la convention
INTEX).

La grammaire GRF est un transducteur represente par un ﬁchier << .grf >> qui peut
eventuellement inclure des graphes imbriques.

[cdl] : type du fichier texte (<< c >> : concordance au format << .con »; << d >> : texte delimite
au format << .snt >> ; << 1 >> : texte Windows ANSI au format << .txt >> (traite ligne par ligne) ;

[gpt] : on indexe les sequences reconnues les plus longues (<< g »), les sequences
reconnues les plus courtes (<< p »), ou toutes les sequences reconnues (<< t>>) ;

[f sr] : on insere les productions du transducteur dans le texte (<< f >>) ; on remplace les
sequences reconnues par les sequences produites par le transducteur (<< s >>) ; on ne tient pas
compte des productions du transducteur (<< r ») ;

Limit : on interrompt la recherche apres avoir trouve un certain nombre de sequences. Si
Limit = 0, alors on recherche toutes les sequences du texte ;

Lors de l’application du transducteur au texte, on utilise eventuellement des ressources
lexicales qui sont rangees dans les trois dictionnaires du texte :

S—Dic : dictionnaire des mots simples du texte ;
NAC—Dic : dictionnaire des mots composes du texte non ambigus ;
AC—Dic : dictionnaire des mots composes du texte ambigus.

Le resultat du traitement est l’index des sequences reconnues Res Index.

T utoriel .' Intex et ses applications informatiques

table2fst MetaGraph Table ResFST

On construit 1e transducteur ResFST (grammaire au format << .fst >>) equivalent a la table de
lexique-grammaire Table, en utilisant un graphe patron Met aGraph.

tri [cdltr] Text ResText
Programme de tri. Noter que ce programme prend en compte la langue et 1’a1phabet courants
(grace a la variable INTEXLNGO) ; en particulier, 1e tri alphabétique dépend de 1’ordre dans

lequel les lettres ont été décrites dans le fichier Alphabet du dossier de la langue courante.

[cdlt] : 1e programme tri un dictionnaire au format DELACF (<< c >>), au format DELAF (<<
d >>), une séquences de lignes (<< 1 >>) ou un texte ligne par ligne (<< t >>). La différence entre les
deux options << 1 >> et << t >> : avec 1’option << 1 >> les caracteres de ponctuation sont pris en
compte ; avec 1’option << t >>, on ne tient pas compte des ponctuations. Typiquement, 1’option <<
1 >> est utilisée pour trier des listes de mots ou d’expresions, tandis que 1’option << t >> est
utilisée pour trier des textes.

Le fichier résu1tatResText ne contient jamais de doublons.

tri r column—number concordance result

La variante du programme de tri spécifiquement utilisée pour trier des concordances est
appelée si le premier parametre est << r >>.

column—number : ce parametre a six Valeurs possibles : 123, 132, 213, 231, 312, 321. Ces
Valeurs correspondent a 1’ordre de priorité dans le tri. Par exemple, 132 signifie qu’on trie les
lignes de la concordance selon la premiere colonne ; si des lignes ont la méme premiere

colonne, alors on les trie en prenant en compte la troisieme colonne ; si des lignes ont les
mémes premiere et troisieme colonnes, alors on trie selon la seconde colonne.

Max Silberztein, Nzierry Poibeau, Antonio Balvet

verifg [Ddl] mode FST S—Dic C—Dic NAC—Dic Text Reslndex Stats

Ce programme est une sorte d’hybride entre le programme recon d’app1ication d’un FST a
un texte et le programme d’étiquetage etiqg.

Si mode = 1, (cela correspond a 1’option << display all matching sequences >> du module de
levée d’ambigu'1'tés)1e programme fonctionne comme recon : on indexe toutes les
séquences reconnues par la grammaire FST dans le text Text.

Si mode = 0 (option << Display inconsistencies between LGs and Text»), alors on indexe
seulement les séquences reconnues par le transducteur FST qui ne sont pas compatibles avec
les séquences de contraintes produites par le transducteur.

Le résultat du traitement est l’index Reslndex de toutes les sequences reconnues (mode =
1) ou incohérentes (mode = 0). Cet index a le méme format que 1’index produit par la
commande recon.

Les autres parametres sont identiques a ceux du programme etiqg.

T utoriel .' Intex et ses applications informatiques

3 EXEMPLES l)’APPLICATIONS INFORMATIQUES
DEVELOPPEES A PARTIR D’INTEX

Cette section Vise a montrer comment INTEX peut étre intégré dans des applications diverses
traitant de textes en langage naturel. Thales Recherches et Technologies a développé des
applications orientées Vers des besoins utilisateur (filtrage de documents, extraction
d’information, ...). Dans ce cadre, INTEX est masque et intégré de facon transparente. Les
interfaces privilegient les traitements et les fonctionnalites possibles pour l’utilisateur.

3.1 Filtrage et routage de document : le projet CORAIL

Dans le cadre du projet CORAIL (qui regroupait, outre Thomson-CSF/LCR, Informatique
CDC/DTA et Université Paris X/CRIS), le laboratoire de recherches de Thales a développé
une plate-forme de ﬁltrage d'information, intégrant INTEX. CORAIL permet de deﬁnir des
filtres sous la forme de grammaires locales élaborées a l’aide de transducteurs a nombre fini
d’états (on parle aussi de proﬁl). L’application fonctionne sous Windows et permet a un
utilisateur donné de recevoir dans sa boite aux lettres les textes qui correspondent a son ou ses
profils. Un démonstrateur a été realise pour l’analyse en temps reel du ﬁl d’agence de presse
AFP. La copie d’écran ci-dessous montre la boite aux lettre d’un utilisateur abonné a
differents profils (elections municipales, epizootie, marches publics...). On Voit souligne un
passage pertinent identiﬁe grace a INTEX.

 Dncumenls!AFPI2|]|]1}|]3J'3|]}|]339[Epi2onlie] - Epiznnlie - Dnssiel Netscape

 

Eichier Edition Affichage Ajlei

Message Qornrnunicator Aide

   

   
 
   

 

 

I "'.—  i"_''-?. i"—_''- ‘ _. ‘ .' V .' ":9
:5? ‘fix; on an‘ “-'l> ;t f -.;.i Q i-$.22 
Fletirerh-1sg Nouveau msg Fléoondre Flépondie Ca tous Transleiei Classer Suivant Imprimer Supprimei -- = = h
Nom N E] Ub|et I 4- I Expediteur l Dale l P. Mb
—_ ' " colbmail.lcmhomson-csf.com i.-Z Documentsz"AFF'./'2DU1/'U3z"29."U135[Epi. . i oriamuser@|cr.thornson-csf.com 30203/‘D1 14:53 A
" Inhox L-'_;l Documents/AFPJZDD1/D3/3DfD3TB[Epi i priarnuser@|ci thornson-csf corn 30/03/01 14 47
. . Sent  Documentsz"AFF'./'2UU1z"U3z"28:'U554[Epi. . ‘ oriamuser@|cr.thornsonrcsﬂcom 30203/‘D1 14:45
i  Tlash .a Doeumentsﬂ-\FPJ2DU1r'U3r'28:'U51EI[Epi. . i priamuser@|cr.thornson-csf.com 3U.«"U3r'D1 14:44
 _J Aulle Demo i-' DocumentsfAFF.v‘2UEI1/U3f2EfEI4EIE1[EpI. . ‘ onamuser@|cr.thornson-csf.com 3U./U3/U1 14:4U
 __'_‘1 Demo EIJFIAIL V1 * Documents/'AFF'.f2DU1/'U3z"28."U2U2[Epi. . i oriamuser@|cr.thornson-csf.com 30203/‘D1 14:33
 ..__.§ Demo CDFIAIL V2 E Documents/AFF'.r'2Dﬂ1/D3/2SfDDB1[Epi ‘ priarnuser@|ci thornson-csf corn 30/03/01 14 23
. M] Elections municipales Ed Documentsz"AFFJ2UU1r'U3r'2E."EIU33[EpI. . ‘ onamuser@|cr.thornsonrcstcom 3El2'EI3/‘U1 14:22
i.-TJ Doeumentsﬂ-\FPJ2DU1r'U3r'2BfUUBB[Epi. . i priamuser@|cr.thornson-csf.com 3U.«"U3r'D1 14:21
i,-TJ Documents/AFFJZDD1/[I3/2Ef|]E||]4[EpI i pnamuser@|ci thomson-csf com 3|]./D3/[I1 1415 E
_'3 Matches publics... Service public iii Documents/'AFF'.f2DU1/'U3z"3U."U33B[Epi. . i oriamuser@|cr.thornson-csf.com 30203/‘D1 14:1? '
I -__J Profil 5 5.7;} Documents/AFPJZDU1R03/23fD81B[Epi. . 1 piiamuSer@|ci.thornson-csf.corn 30.903/D1 14.15
3 _'3 Profil B ‘.3 Documentsz"AFFJ2UU1r'U3z"3EI:'EI335[EpI. . ‘ onamuser@|cr.thornsonrcstcom 3El2'EI3r'U1 14:14 E..
. i -__'I Service public  Doeumentsﬂ-\FPJ2DU1r'U3r'23fU?TEI[Epi. . i priamuser@|cr.thornson-csf.com 3U.«"U3r'D1 14:14
2  Dynamic lilleis ; 1,-7' Documents/AFWZDD1/D3/23fD7EE[Epi i priamuser@|ci lhomson-csf com 30/03/01 1413
' _'3 MyTIash 1.7..‘ Documents/'AFF'.f2DU1/'U3z"23."UE9B[Epi. . i oriamuser@|cr.thornson-csf.com 30203/‘D1 14:11
Couniei local i 1.7.} Documents/AFPJZUU1/U3/23fUE3B[Epi. . i priamuser@|cr.thornson-csF.corn 30/03/01 14.10
news  Documentsz"AFFJ2UU1/'U3z"23."EIEiT5[EpI. . ‘ csf.com 3El2'EI3/‘U1 14:1U Li

  

[S]RODEZ, 30 mars (AFP) - Uri troupeau de 270 vaches de race charolaise apparteriant e un eleveur

Ii-Maﬂer: sendhtml '

Profle—Icl: Proﬁ.lesi’DefaultI'4

ole Sai.nt—Santin (Aveyron) risque d"e‘tre abattu en raison d'une suspicion de tuberculose, en fonction

des resultats d'analyses complementajres en cours £1 Lyon, a-t-on appris vendredi aupres des services

veterinaires du departement. [S]Une premiere detection de tubereulose bovine a eu lieu en novembre
dernier sur ce troupeau mais des experlzises successives contradictoires ont rendu necessaire un
examen bactériologique complémentaire dans un laboratoire ole Lyon, dont les resultats sont attendus
la semaine prochajne par la prefecture cle 1'1-‘iveyron [S]On saura alors s‘il conviendra on non cle
proceder é l'abatta,ge de l'erisemble du troupeau. [S]Au cours des demiers mois, trois troupeaux
aveﬂonnais ont été abattus en raison de la ruberculose. [S]Un cas similaire a été decouvert

récemment dans le Tam-et-Garonne et l'abattage cl'un troupeau de 240 bovins ole race Aubrac y a été

decide en debut de semame dbefsp

< I

Nomhre total de messages '43 messages non Ius D

.- -32,; ;;i. .;-_v.—3 

‘.5

Figure 2 : Reception dans Netscape de depéches AF P filtrees par le systeme CORAIL

Max Silberztein, Thierry Poibeau, Antonio Balvet

3.1.1 Interface d’édition deﬁltres

Thales Recherches et Technologie a par ailleurs développé une Version simpliﬁée de
l’interface d’édition et de manipulation d’automates. Des études d’ergonomie menées dans le
cadre du projet Corail ont montré qu’il était ainsi en partie possible a des utilisateurs non
linguistes de développer leurs propres ﬁltres, sans aide extérieure.

Lngin CORAIL

EDEIIIIIHSIIZIEUI CORAlLSessiun

 

 

HIE Graph
__——r—“‘ /

. . _——r—( \. _

«.3 animauir Sena" ———f‘ _ // \\ 3

’ \ :

9 E Mvﬁiters \\

‘P E Primitives ' 7
‘E’ E W primitives i .
"’ ”””''° 9 Same 9“ _ Public
<.a Gauche _ I \\
E Shared primitives . \\
9 E Filters I \
i \
Y Marches puplics rend“ E - . - \
Y Smite mm 1 H Demon-strateur CORA|L.pub|ic \\‘\ x.‘
Y Electionsjrance \

\
x

Y Animai_ma|ade_abai1u K‘\. \ 

Y NtiuveaLi_i:as_ﬁevre_aphieuse , \\\ 

E Bhareclﬁiiers \~ \ g

p EF‘ro1iIes ADUA \“\\ ..;
‘:3 E My proﬁles / _______{——-"’(_ ' §
- . ,»r" K’ :

_ , . i K -0/,/-' 4—_i__)_4_#—or—" _
= p . . .1; __f_{_— CDOMSP »
I - i

///I

 / /r

Shared proﬁles , \\_  % _
  r \ / 9 I ,; 

- i‘. \\K // /// 

  \ ‘re  /

i Z ,,

|<|

/H
/
\ collectivité I
.‘ 1

Figure 3 : Interface simpliﬁée d’édition de ﬁltre

Bibliographic

Frédéric Meunier, Antonio Balvet, Thierry Poibeau, 1999. Projet CORAIL (COmposition de

Requétes par des Agents Intelligents Linguistiques), Linguisticae Investigationes, 22, pp.369-
3 81 .

Antonio Balvet, Frédéric Meunier, Thierry Poibeau, Didier Viard, Frantz Vichot et Francis
Wolinski, 2001. <<Filtrage de documents et grammaires locales: le projet CORAE», d
paraitre dans les actes de la conférence ISKO, Nanterre, 5-6 juillet 2001

T utoriel .' Intex et ses applications informatiques

3.2 Extraction d’information

Dans de nombreux services de Veille, les analystes sont confrontés a de large masse de textes
qu’ils doivent analyser. La mise en surbrillance de certains éléments pertinents facilite
l’analyse en guidant la lecture. La ﬁgure suivante présente l’analyse des entités nomrnées
(noms de personnes et d’entreprise, dates, etc.) d’un texte. L’inforrnation est reprise par type
d’entité dans la partie gauche. L’analyse des sequences pertinentes et leur mise en
surbrillance grace a l’insertion de balises HTML est effectuée en partie par INTEX.

‘Q Eile Edll Eiew ﬂesnurees Eroeess ﬂelp Format ﬂmdnw 
D 2'; B I H at E. mil
d A

LOCATIONS

Beijing(3 occ) 4 4 4

Vietnam (1 occ ) 4 C4I-Pro-Digest Volume 02 Number 529

Calif (1 one ) 4

United States (1 one.) 4

Taiwan (9 0:3: ) 4 4 4 4 4 4 4 4 4

WASFDNGTON (1 occ.) 4 c4i-pro has everybody seen this? (been on travel)

U S (3 one) 4 4 4 c4i—pro information vacuum

San Diego (2 oce.) 4 4 C41-pro this 15 interesting

China (8 one ) 4 4 4 4 4 4 4 4

PERSONS

Pierre Salinger (1 oee.) 4 Date 11:06 57' +0000 (HELP)

David K Probst (7 one) 4 4 4 4 4 4 4 From‘ "David K Probst" <PROBST@vax2 Concordia ca>

SL1b_]ECtI e4i-pro has everybody seen this? (been on travel)
URI.
"David K. Probst" <PROBST@vax2.eoneordia.ca>

EMAJI.

David.K Probst@eri.m.ea (1 one.) 4 Date 07.15.19 -0800

hpcvvii'e@newsmaster.tgc.con1 (1 occ ) 4 From: IIPCwi.re <hpcvvii'e@newsrnaster.tgc com>

PROBST@vax2 Concordia ca (5 one) 4 4 To David K Probst@eriir1 ea

4 4 4 4 Subject: SDSC WARNS OF UNIX FILE SYSTEM ATTACK MANY MACHINES MAY BE AT RISK
KEYWORDS SDSC WARNS OF UNIX FILE SYSTEM ATTACK MANY MACHINES MAY BE AT RISK

Reuter (1 one) 4 11 08 96

IIPCvvii'e (2 oce.) 4 4 NEWSFLASH HIPCvvii'e

NEWSFLASH (1 one) 4 _

Intelligence (1 oee.) 4

 (1 0:32) 4 iTan DVEDO Calif —— Researehers: at ll'lE San Diem’: Siinernommiter Center 4?
i,....\mi.,i,.- (1 AMA‘ . ﬂ ‘ l ’

Figure 4 : Marquage des entités nomrnées

Il est aussi possible de remplir des bases de données avec de l’information structurée extraite
de textes, comme sur la ﬁgure suivante.

Max Silberztein, Thierry Poibeau, Antonio Balvet

El Tahlehfp 
Fil Type D ate From Source T epic

Liv J  news i 14-lév-DU |BEHL|N luneétuderendue publr

jij |AFF‘ news i 14-lév-DU |STHASBUUHG lunedeleguee.
E

MM |AFF news l 1-Hév-VEIEI |LEINDFlES l un rappull de la Erlllsh l— Llrlande seipiace en lele des pays eurupeens pour Ie nombie de deces dus :a des defaillemces Eardlaques,
./J E E afp_Dn3_mt _ wmdpad E 5 an de la British Heart
Erie gum yew lnserl Fgrrnal ﬂelp T
E Vnlume : Fnrm W mlnlees Iundi devant Ie ieelurai
,  D B Q B; M E. % JE iuur duranl les vatzances de

Volume

 

v

- L‘Espagne a été Ia destination favorite des Allemands pour Ieurs vacances e létrangei au cows des
dernieies annees. selen une elude iendue publique Iundr

- Le personnel inliimrer de la réanimalrcn du centre ncsprlalrer unrveisilarie [CHU] de Strasbourg-Hauteprerre
a decide de reconduire Ia greve qu'rl avail enliepiise lundi pour dénoncer une insuffisance deffectrf, selcn
une deleguee.

r
iI‘1OSCOU, 14 fév (JLFPJ — La Russle prévolt weccélérer ses négoeiations avec le 

Club de Parls pour restrueeurer quelque 4U m1111are1s cle dollars de clette ndimalrnpendantdeuxheuies
. . . . . . . . . cm... _.-.. .__.:. .4-

 

4"“ '  hér1tée de .1'é1:oque so‘ _ _ _ _

35“ _ auprés [in Club de Luna‘ I E.\useIs\pn|heau\PIngIam Data\|e:us\EnlIours\tmp\afp.hlmI - Hlcrosolt Inlernet Explorer
Mikhail Kaselennv. Eile Edit Miew Q0 Fgvcirles ﬂelp 

Ziﬂll -

25“ Le: Ru331e vex "trava1.ll: v v J Q @ Q  Q j @ é
Samblables ;. Belles cm Slop Refresh Home Search Favorites History Channels Fullscreen Mail Print
hanquﬁs Crﬁanclﬁrﬁsi 5 Address  E \useis\poibeau\Program Data\|exis\EnCouis\lrnp\alp nlml j Links

1511 even: 1e summer: du GB 1
par 1 ‘ agenee Interfax. _ J

1"“ MOSCOU, (AFP) — La RUSSIE preVo1td'aeeelerer ses negotiations avec le Club de Pans pour

5|! "La RIASSIE S malnt-Ellen‘ restructurer quelque 40 milhards de dollars de clette hentee de l'epoque sovietlque a des conditions s1.mi.lai.res ‘a
u . '3‘édi'3E“I5 d“ Chm '13 I celles obtenues aupres du Club de Londres, a declare le premier mce-Premier minrstre I\4i1k_l1aﬂ Kasslanov
effeeer les eletees” Diuz - u - - -- . in
\§ oft ‘ﬁfe  ﬁg: kg; 5? ‘ft: Andrei Kosunel présldi La RL|SS1E Va travarller pour obtenrr des COI1Cill1OI1SfdEr-l‘ESiI1.1ClIL1Iai2lOr1 semblables -aeelles eonelues
'5‘ 9 49 ,5‘ 49 49 . ,.SW1éuq“e.._ avec le Club de Londres (qur reun1t les banques creancieres) a Francfort ElSpI’BVO1tClB commencer les
consultations avant le sommet du G8 prevu en procham, a premse M Kassmnov, c1te par l'agence
Record: I4 ii] ,. OF 1 Le Club de Paris don; I Interfax. "La Russie amarntenant des arguments eonvaineants éipresenter" aux Etats erediteurs clu Club de

13°“: ‘m réé’-“hE1°m‘e’"E“‘ Pans, “connus pour Etre beaucoup plus reticents it eifacerles dettes" que les banques du Club de Londres, a

rééchelonnement portam releve ole son Cote I3.r1dre1Kos1:ir1e, president de la Vnechelconombarik qui deiient la dette "sovieinque" Le Club
Plueueurs Eteits, dent. .

Dppgaés é um Eﬁacemam ole Pans doit reprendre les negocianons avec Moseou é31'automne pour un reechelonnement global de la

dette Le , un accord ole reeehelonnernent portant sur environ 8 mﬂhards ole dollars await ete
Le Club de Lendres ee . eonelu. Plusieurs Etats, dont l'Allemagne, principal credrteur, s'eta1ent declares opposes 5 un eﬁaeement pamel
' " ' "' """' """‘ ' " de la dette Le Club ole Londres et la Russie sont parvenus is un accord £1 Francfort sur une

Fm Hap’ mess F1 restructuratton de quelque 32 mﬂhards de dollars de dette hentee ole l'URSS L'aeeord prevo1t une reductton ole
36,5”/u clu montant de la clette et un etalement sur 30 ans (avec une periocle cle greiee de 7 ans) clu

remboursement de la parhe restante, convertie en euro-oblrgalzlons garanties. megfcpbibm eaf D

E_'] 5; My Curripuler

Figure 5 : Integration de differents modules d’analyse de textes. Le texte source est analyse
pour en extraire les entités nommees et remplir une base de données avec de 1’inforrnation
structurée. A partir de la base de données, il est possible d’accéder a plusieurs fonctions de
suivi sur les champs structures. Une telle analyse est bien sﬁr impossible sur du texte brut.

Bibliographic

Thierry Poibeau, 1999. <<Repérage des entités nommées : un enjeu pour la Veille
technologique», Terminologies Nouvelles (actes de la conference Terminologie et
Intelligence Artiﬁcielle (TIA), Nantes, mai 1999), n°19, pp. 43-51

Thierry Poibeau, 2000. <<Corpus-based learning for Information Extraction», Actes du
workshop Machine Learning for Information Extraction (ML4IE), ECAI'2000, Berlin.

