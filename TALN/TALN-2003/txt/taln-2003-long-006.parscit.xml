<?xml version="1.0" encoding="UTF-8"?>
<algorithms version="110505">
<algorithm name="ParsCit" version="110505">
<citationList>
<citation valid="false">
<authors>
<author>Abeillé Anne</author>
</authors>
<title>Une grammaire d&apos;arbres adjoints pour le français,</title>
<date>2002</date>
<journal>Editions</journal>
<booktitle>in proc TAG+6 Venise Joshi Aravind K. and Schabès Yves,</booktitle>
<volume>10</volume>
<pages>136--163</pages>
<editor>Gaiffe B., Crabbé B. et Roussanaly A.</editor>
<publisher>Springer Verlag</publisher>
<location>Berlin,</location>
<marker>Anne, 2002</marker>
<rawString>Abeillé Anne, (2002), Une grammaire d&apos;arbres adjoints pour le français, Editions du CNRS, Paris Bonhomme P. et Lopez P (2000), TagML : codage XML et ressources pour les grammaires darbres adjoints lexicalisés, LREC 2000 Athènes Candito Marie-Hélène, (1999), Organisation Modulaire et Paramétrable de Grammaires Electroniques Lexicalisées, Thèse de lUniversité de Paris 7 Gaiffe B., Crabbé B. et Roussanaly A. (2002), A new metagrammar compiler, in proc TAG+6 Venise Joshi Aravind K. and Schabès Yves, (1997), Tree Adjoining Grammars, Handbook of Formal Languages, eds G. Rozenberg and A. Salomaa, Berlin, Springer Verlag Joshi Aravind K., Levy Leon S. and Takahashi M., (1975), Tree Adjunct Grammars, Journal of the Computer and System Sciences, vol.10, pp.136-163 Kinyon Alexandra, (2000), Hypertags, COLING-00 Sarrebrück Levin Beth, (1993) English Verb Classes and Alternations, The University of Chicago Press Saint-Dizier Patrick, (1999) Predicative Forms in Natural Language and Lexical Knowledge Bases in Alternations and Verb Semantic Classes for French : Analysis and Class Formation, ed. Patrick Saint-Dizier, Kluwer, Dordrecht Saint-Dizier Patrick, (1996), Verb Semantic Classes in French Version 2, Tech. Report., IRIT - CNRS&amp;quot;, Schabès Y. et Waters R (1995), Tree Inserted Grammar : a Cubic-time Parsable Formalism that lexicalizes Context Free Grammar without Changing the Trees Produced, Computational Linguistics MIT Press 1995.</rawString>
</citation>
<citation valid="true">
<authors>
<author>K Vijay-Shanker</author>
</authors>
<title>A study of Tree Adjoining Grammar,</title>
<date>1987</date>
<booktitle>of computer and information science XTAG Research Group</booktitle>
<pages>01--03</pages>
<institution>PhD. Th. University of Pennsylvania, Department</institution>
<contexts>
<context position="4242" citStr="Vijay-Shanker 1987" startWordPosition="610" endWordPosition="611">élémentaires sont construits dynamiquement lors du processus d&apos;analyse syntaxique. Le processus de construction dynamique est appelé ancrage. Le principe est le suivant : la forme fléchie détermine le lemme correspondant. Ce lemme permet de sélectionner la famille. La forme fléchie est ensuite greffée aux nuds ancres de chacun des schèmes composant la famille sélectionnée. Les traits associés à la forme fléchie, au lemme et 1 Les arbres utilisés dans cet article sont inspirés de la grammaire proposée par (Abeillé 2002). De plus, nous utilisons une variante usuelle de TAG : Feature-Based TAG (Vijay-Shanker 1987), version dans laquelle chaque nud d&apos;un arbre est associé à une structure de trait top et une structure de traits bottom. Une plate-forme de conception et dexploitation dune grammaire darbres adjoints au nud ancre sont alors unifiés. Il est donc possible que l&apos;ancrage échoue suite à un échec d&apos;unification. 2.1 Problématique de lopération dancrage Cette problématique est liée à la construction des structures de traits dans les arbre élémentaires. Elle est illustrée à la Figure 2. FLEXION (1) + LEMME (2) + SCHEME (3) mange manger S morpho→num=sg famille→n0Vn1  pers= 3  top(arg0)→[hu</context>
<context position="17198" citStr="Vijay-Shanker 1987" startWordPosition="2613" endWordPosition="2614">mmaires au format TAGML2. Enfin, un outil annexe permet de décrire les associations lemmes, structures de traits de filtrage, équations symboliques et de les traduire en TAGML2. 5.2 Analyseur syntaxique L&apos;analyseur LTAG du Loria (LLP2) est développée à partir de la version précédente écrite par Lopez (Lopez 1999). Les caractéristiques de cette nouvelle version sont les suivantes : 3 Moyennant des contraintes de compatibilité 4 Ce sont des constantes Une plate-forme de conception et dexploitation dune grammaire darbres adjoints • elle permet le traitement des structures de traits (FB-LTAG) (Vijay-Shanker 1987), • elle est limitée aux grammaires darbres insérés (TIG) (Schabes et Waters 1995), une version restrictive des TAG, • elle prend en charge des ressources décrite au format TAGML2 ; les schèmes créés par le compilateur de métagrammaires sont, de ce fait, directement exploitables par l&apos;analyseur, • elle dispose d&apos;une interface graphique interactive permettant de tester une grammaire, et offre également la possibilité d&apos;un fonctionnement en mode lignes de commandes; ceci permet de lancer globalement l&apos;analyse d&apos;un lot de phrases (par exemple, un corpus), • elle intègre une représentation XML de</context>
</contexts>
<marker>Vijay-Shanker, 1987</marker>
<rawString>Vijay-Shanker K, (1987) A study of Tree Adjoining Grammar, PhD. Th. University of Pennsylvania, Department of computer and information science XTAG Research Group (2001) A Lexicalized Tree Adjoining Grammar for English, IRCS, University of Pennsylvania, num. IRCS-01-03</rawString>
</citation>
</citationList>
</algorithm>
</algorithms>