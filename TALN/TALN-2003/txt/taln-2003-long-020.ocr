TALN 2003, Batz-sur-Mer, 11-14juz'n 2003

MULTI-ANALYSE
vers une analyse syntaxique plus ﬁable

Laura Monceaux et Anne Vilnat

LIMSI/CNRS — Universite Paris Sud
Bat 508 — BP 133 91403 Orsay Cedex
{monceaux, vi1nat}@1imsi.ﬁ

Résumé — Abstract

Dans cet article, nous proposons de montrer que la combinaison de plusieurs analyses
syntaxiques permet d’extraire l’analyse la plus ﬁable pour une phrase donnée. De plus, chaque
information syntaxique sera affectée d’un score de conﬁance determine selon le nombre
d’analyseurs syntaxiques la conﬁrmant. Nous verrons que cette approche implique l’étude des
différents analyseurs syntaxiques existants ainsi que leur evaluation.

In this paper, we propose an algorithm of combination between several syntactic parses ir1
order to extract the most reliable syntactic parse for the sentence given and to affect these
syntactical informations with the conﬁdence rate, determined with regard to the number of
parsers returning the same information. This approach involves the study of syntactic parsers
and their evaluation.

Mots Clés - Keywords

Analyseurs syntaxiques, Combinaison d’informations, Evaluation
Syntactic parsers, Information combination, Evaluation

1 Introduction

Dans le cadre du développement d’un systeme de question — réponse dans le groupe LIR
(Ferret et al, 2002), nous nous sommes particulierement intéressées aux analyseurs syntaxiques
dits « robustes » dans le but de déterminer l’analyseur syntaxique le plus approprié pour ce
type d’application. En effet, l’analyse de la question dans le systeme QALC dépend de
connaissances syntaxiques et sémantiques (Monceaux et Robba, 2002). Mais aujourd’hui, les
analyseurs syntaxiques ne sont pas nécessairement tous ﬁables pour analyser totalement ce type
de questions. Or, la ﬁabilité des informations syntaxiques utilisées dans le module d’analyse des
questions est essentielle; plus celles-ci seront ﬁables, plus les informations extraites de

L. Monceaux, A. Vilnat

l’analyse de la question le seront. Meme si l’on dispose d’un protocole d’evaluation des
analyseurs syntaxiques permettant de detecter l’analyseur le plus ﬁable pour notre type
d’applications, cela ne garantira pas que toutes les informations retoumees par celui-ci seront
ﬁables. Ainsi nous avons eu l’idée, aﬁn d’ameliorer les resultats de l’analyse des questions,
d’utiliser une multi-analyse permettant d’obtenir l’analyse la plus ﬁable pour une phrase donnee
et d’affecter un score de conﬁance a chaque information retournee.

Cette approche de combinaison entre plusieurs informations de méme type a deja connu de
nombreux succes notamment dans la combinaison de plusieurs transcriptions de la parole
CFiscus, 1997), (Schwenk et Gauvain, 2000) grace a une strategie de vote simple ou encore la
combir1aison d’étiquetages morpho-syntaxiques (Marquez et Padro, 1998), (Paroubek and
Rajman, 2000) permettant d’obtenir un etiquetage plus ﬁable mais egalement de fournir des
corpus annotes. En ce qui conceme la combinaison d’analyseurs syntaxiques, une telle
approche fait actuellement defaut. En effet, cette combinaison semble plus diﬁcile car les
analyseurs syntaxiques peuvent retourner differents types de réponse: une segmentation en
constituants ou/et un ensemble de relations syntaxiques entre mots voire entre groupes de
mots. Dans un premier temps, notre module d’analyse des questions utilisant essentiellement le
decoupage en constituants, nous avons developpe une multi-analyse dans le but de reconnaitre
les groupes verbaux, nominaux et prépositionnels les plus ﬁables. Toutes les informations
syntaxiques obtenues par la combinaison de plusieurs analyses seront obtenues par un
consensus entre plusieurs analyseurs syntaxiques.

Apres avoir detaille quels analyseurs etaient appropriés pour une telle combinaison, nous
présenterons la strategie de combinaison que nous avons mise au point et nous illustrerons
cette strategie sur un exemple. La présentation des resultats obtenus pour l’evaluation des
resultats obtenus par combir1aison sera suivie d’une discussion sur les perspectives de ce
travail.

2 Quels analyseurs syntaxiques utiliser pour la combinaison ?

Dans un premier temps, nous avons etudie les differents analyseurs existants pour detecter les
analyseurs les plus appropriés pour notre type d’application. En effet, dans le projet
MULTITAG (Paroubek and Rajman, 2000), il a ete remarque que l’utilisation de systemes
ayant a peu pres les mémes competences était preferable P¢)ur réaliser le meilleur multi-
etiquetage pour une phrase donnée.

Pour réaliser notre premiere combinaison, nous avons ete confrontees au choix des analyseurs
a utiliser. Comme nous l’avons presente plus haut, un analyseur robuste semble plus approprie
pour une telle application, mais il faut egalement que l’analyseur retoume une segmentation en
constituants. Le choix de l’analyseur pour l’anglais repose sur le fait que le systeme de
question — reponse developpé dans notre equipe de recherche (groupe LIR: Langages,
Information et Representations) est actuellement en anglais. Mais l’approche proposee sera
applicable egalement pour le francais. Ces analyseurs ont éte choisis car chacun d’eux retoume
une segmentation en constituants, information syntaxique sur laquelle nous voulons réaliser
notre combinaison. Nous avons donc selectionne quatre analyseurs syntaxiques robustes pour
l’anglais :

0 L’analyseur IFSP de Xerox (A'1’t-Mokhtar and Chanod, 1997)

M ULT I-ANALY SE vers une analyse syntaxique plus ﬁable

0 L’analyseur statistique Apple Pie (Sekine and Grishman, 1995)
0 L’analyseur SCOL (Abney, 1996)
0 L’analyseur IPS (Wehrli, 1992)

Cependant au regard des sorties obtenues par ces différents analyseurs, on remarque qu’il n’y
a aucun accord sur la représentation des sorties d’une analyse syntaxique (voir Fig. 1.). La
premiere étape pour faciliter la combinaison consiste a trouver un langage pivot qui Va nous
permettre de projeter chacune de ces sorties dans un méme formalisme.

Analyseurs Résultats

IFSP 1 [SC [NP Which museum NP] [PP in Florence PP] :v was
damaged SC] [PP by a major bomb PP] ?

APPLE-PIE 2 (S (NP (NPL Which museum) (PP in (NLP Florence))) (VP
was (VP damaged (PP by (NP (NPL a major bomb)))))) ?

SCOL 3 [rc [orc0 [Wdt which] [nx [nn museum]] [pp [in in] [tip
Florence]] [vx [bedz was] [vbn damaged]]] [pp [by by] [nx
[dt-a a] [jj major] [nn bomb]]]]] ?

[PS 4 [CP [DP which [NP museum [PP in [DP Florence]]]] [C [TP
[DP e] [T was [VP [FP [DP e] [F [VP damaged [PP by [DP a
[NP [A1 maj01"] [Nb0mb]]]]]]]]]]]] 7

Figure 1. Diversité des sorties des ditférents analyseurs syntaxiques

Le formalisme que nous avons décidé d’utiliser est le formalisme d’armotation décrit dans le
projet PEAS du LI1V[SI dans lequel nous travaillons (Gendner and al, 2002). Le projet PEAS
consiste a déﬁnir un protocole d’évaluation des analyseurs syntaxiques reposant sur la
comparaison des sorties d’un analyseur avec un corpus annoté de référence. Un formalisme

1 SC (Sentence Clause), NP (Noun Phrase), PP (Prepositional Phrase), :v (verbe) 
2 S (Sentence), NP (Noun Phrase), NLP (Proper Name), VP (Verbal Phrase), PP (Prepositional Phrase)...
3 pp (prepositional phrase), nx (noun phrase), vx (verbal phrase), np (proper noun) 

4 DP (Determiner Phrase), VP (Verbal Phrase), PP (Prepositional Phrase), CP (Complementizer Phrase), TP
(Tense Phrase)

L. Monceaux, A. Vilnat

d’armotation a ete etabli. La segmentation en constituants repose sur 6 groupes syntaxiques
terminaux :

0 Les noyaux verbaux (NV),

0 Les groupes nominaux (GN),

0 Les groupes prepositionnels (GP),

0 Les groupes adj ectivaux (GA),

0 Les groupes adverbiaux (GR),

0 Les groupes verbaux prepositionnels (PV)

Pour faciliter la combinaison, nous avons donc elabore pour chaque analyseur syntaxique un
algorithme de projection de leur segmentation dans le formalisme PEAS (developpe en JAVA).
L’elaboration de ces algorithmes de projection a entraine une etude approfondie des diﬁerentes
theories linguistiques employees par les analyseurs et a debouche sur l’elaboration d’un
ensemble plus ou moins complexe de regles de reecriture ordonnees pour chaque analyseur
(Monceaux, 2002). On peut notamment constater dans les regles de reecriture de l’analyseur
[FSP que les inforrnations pour la projection sont autant dans la segmentation proposee que
dans les relations syntaxiques.

Resultats de l’analyseur IFSP Resultats apres reecriture
[PP liste-de-mots PP] <GP> liste-de-mots </GP>
: v auxiliaire SC] [SC [NP pronom NP] : v <NV> auxiliaire pronom verbe </NV>

verbe SC] && SUBJ (pronom auxiliaire)

[NP pronom NP] IV verbe SC] <NV> pronom verbe </NV>
&& SUBJ (pronom, Verbe)

[NP liste-de-mots NP] <GN> liste-de-mots </GN>

Figure 2 : Quelques regles de reecriture pour l’analyseur [FSP

Pour l’exemple de la ﬁgure 1, l’application des diﬁerentes regles de reecriture permettra de
construire l’analyse syntaxique suivante a partir de l’analyse retournee par [FSP :

<GN> Which museum </GN> <GP> in Florence </GP> <NV> was </NV>
<NV> damaged <NV> <GP> by a major bomb explosion </GP> ?

Ces algorithmes de projections vont non seulement nous permettre de projeter les resultats de
chaque analyseur dans le forrnalisme PEAS dans le but de combiner les diﬁerents resultats pour
une analyse syntaxique la plus probable, mais egalement nous servir pour evaluer les resultats
obtenus par la combinaison par rapport a chaque analyseur syntaxique. Ces diﬁerentes

M ULT I-ANALY SE vers une analyse syntaxique plus ﬁable

évaluations nous permettront ainsi de conclure si l’algorithme de combinaison nous permet
d’obtenir de meilleurs résultats qu’un analyseur seul.

3 Combinaison entre plusieurs analyses syntaxiques

Dans cette section, nous allons expliquer plus précisément l’a1gorithme de combinaison que
nous avons utilisé basé sur la notion de vote a la majorité : plus une information sera retoumée
par un grand nombre d’analyseurs syntaxiques, plus celle-ci sera ﬁable et donc affectée d’un
fort taux de conﬁance. Successivement, l’algorithme de combinaison va essayer de determiner
les groupes verbaux les plus plausibles, les groupes prépositionnels et pour ﬁnir les groupes
nominaux. En eﬁ'et, grace aux evaluations effectuées sur les différents analyseurs que nous
présenterons dans la suite, nous avons remarqué que les noyaux verbaux étaient généralement
mieux reconnus que les groupes prépositionnels, et ces derniers mieux que les groupes
nominaux. Pour chaque information syntaxique recherchée, on réalisera donc un ensemble de
phases.

3.1 Construction de l’ensemble des groupes syntaxiques possibles

La premiere phase de cet algorithme consiste a sélectionner les analyseurs syntaxiques sur
lesquels la combinaison va étre réalisée. Puis pour chaque phrase, les résultats obtenus par
chaque analyseur sont projetés dans le forrnalisme commun PEAS. L’algorithme de
combinaison construit, a partir de ces différentes sorties, l’ensemble des groupes syntaxiques
susceptibles d’étre ﬁable. Cet ensemble est organise par type syntaxique ou chaque groupe
syntaxique proposé sera accompagné du nombre d’analyseurs l’ayant reconnu. De plus, ces
ditférents groupes seront également étiquetés d’une étoile s’ils ont été retoumés par l’analyseur
le plus approprié pour détecter ce type d’information suite a l’éva1uation réalisée au préalable
(que nous présenterons dans la suite).

A partir des résultats obtenus par les quatre analyseurs sélectionnés pour la question « What
grape variety is used in Chateau Petrus Bordeaux ? », nous obtiendrons ainsi l’ensemble
suivant :

Noyaux Verbaux Groupes Prépositionnels Groupes Nominaux
is — 4* In Chateau Petrus Bordeaux — 2* what grape variety — 2*
used — 4* in Chateau — 2 Petrus — 2

Bordeaux — 2

Figure 3 : Ensemble des groupes syntaxiques possibles pour la combinaison

Les groupes syntaxiques retournés par un seul analyseur sur les quatre seront automatiquement
supprimés puisque considérés comme non ﬁables donc les groupes nominaux « what grape »,
« variety », « grape variety » n’ont pas été sélectionnés.

L. Monceaux, A. Vilnat

A partir de cet ensemble des groupes syntaxiques possibles, on Va tenter de détecter les
groupes syntaxiques les plus ﬁables et comme nous l’avons dit plus haut les noyaux verbaux
dans un premier temps, les groupes prépositionnels puis les groupes nominaux.

3.2 Sélection des groupes syntaxiques les plus ﬁables

La sélection des groupes syntaxiques les plus ﬁables parmi1’ensemble des groupes syntaxiques
possibles se realise en deux phases :

1. Selection des groupes syntaxiques les plus ﬁables: il s’agit ici de sélectionner les
informations considérées comme les plus ﬁables, c’est-a-dire données par plus de la
moitié des analyseurs. Dans notre exemple, il s’agira des groupes syntaxiques
retournés par au moins trois des analyseurs. Si l’information syntaxique sélectionnée
est retournée par le maximum des analyseurs, on lui attribuera un taux de conﬁance
égal a 1 et de 0.75 si elle est retoumée par seulement trois analyseurs.

2. Selection des groupes syntaxiques dits « litigieux » : certains groupes retournés par
seulement la moitié des analyseurs sont également sélectionnés mais avec un taux de
conﬁance moindre. Si le groupe syntaxique étudié n’est pas en conﬂit avec un autre
groupe de méme type, celui-ci sera sélectionné et affecté d’un taux de conﬁance 0.5.
Sinon le groupe syntaxique étudié est en conﬂit (un mot ou plusieurs mots sont
presents dans plusieurs groupes de meme type et retournés par la moitié des
analyseurs), alors le groupe syntaxique retoumé par l’analyseur le plus approprié pour
détecter ce type d’information (marque d’une étoile) sera sélectionné avec un taux de
conﬁance 0.25.

A chaque fois qu’un groupe syntaxique est sélectionné, tout autre groupe possédant un ou
plusieurs mots de ce groupe devra étre déﬁnitivement supprimé de 1’ensemble des groupes
syntaxiques possibles. En eﬁ'et, dans le forrnalisme PEAS, les groupes syntaxiques sont
tern1inaux : donc quand un mot est associé a un groupe, il ne peut pas étre aﬁecté a un autre

groupe.

3.3 Exemple de combinaison

La premiere étape de 1’algorithme de combinaison consiste a déterminer l’ensemble des
groupes syntaxique susceptibles d’étre les plus ﬁables. Nous allons détailler les ditférentes
étapes de sélection des groupes a partir de l’ensemble des groupes syntaxiques construits pour
l’exemple « What grape variety is used in Chateau Petrus Bordeaux ? >> (voir Fig. 3).

Come nous l’avons vu, la premiere étape de 1’algorithme consiste a détecter les groupes
verbaux les plus ﬁables. Dans notre exemple, les deux groupes « is » et « used >> sont retournés
par la majorité des analyseurs, ils sont donc sélectionnés et aﬁectés d’un poids de conﬁance 1.

L’étape suivante doit détern1iner les groupes prépositionnels les plus ﬁables. Ici on se retrouve
confronter a deux groupes litigieux contradictoires. En eﬁet, « in Chateau Petrus Bordeaux »
et « in Chateau » possedent des mots en commun. Dans ce cas, le groupe syntaxique retoumé

M ULT I-ANALY SE vers une analyse syntaxique plus ﬁable

par l’analyseur le plus approprie pour detecter ce type d’information (marque d’une etoile) sera
selectionne et aﬁ'ecte d’un taux de conﬁance 0.25.

Suite 51 ces deux premieres etapes, on obtient l’ensemble des groupes syntaxiques presentes
dans la ﬁgure 4. La selection du groupe « in Chateau Petrus Bordeaux >> comme groupe
prepositionnel a entraine la suppression des deux groupes nominaux « Petrus >> et
« Bordeaux » puisque les mots qu’ils comportent ont ete aﬁ'ectes a un autre groupe syntaxique.

Noyaux Verbaux Groupes Prepositionnels Groupes Nominaux
is — Conf : 1 in Chateau Petrus Bordeaux — What grape variety —
Conf : 0.25 2*
used — Conf : 1 i  e
 %

Figure 4 : Ensemble des groupes syntaxiques possibles apres les deux premieres etapes

La derniere etape reside dans le choix des groupes nominaux les plus ﬁables. Ici seul « What
grape variety » peut étre un groupe nominal. Comme il est retoume par la moitie des
analyseurs et aucunement en contradiction avec un groupe du meme type, il est selectionne
avec un taux de conﬁance de 0.5.

Finalement, pour la phrase « What grape variety is used in Chateau Petrus Bordeaus ? »,
l’algorithme de combinaison retoumera l’analyse suivante :

<GN Conf: 0.5> What grape variety </GN> <NV Conf: 1> is </NV> <NV Conf: 1>
used <ﬂVV> <GP Conf: 0. 25> in Chdteau Petrus Bordeaux </GP> ?

Cet exemple nous montre qu’a partir de quatre analyses (pas necessairement correctes), on
peut obtenir une analyse pertinente et donc ﬁable. Dans le but d’evaluer cet algorithme, nous
avons realise une evaluation quantitative de la pertinence des resultats obtenus par la
combinaison.

4 Evaluation de la combinaison

Pour evaluer les resultats obtenus par l’algorithme de combinaison, nous avons utilise’ les bases
du protocole d’evaluation des analyseurs syntaxiques du projet PEAS. Pour chaque type de
groupe syntaxique, nous allons donc calculer les mesures de rappel et de precision. La mesure
de rappel va nous permettre de conclure quant a la quantité d’informations correctes trouvees
alors que la mesure de precision va nous permettre de valider la ﬁabilite des informations
retournees.

Dans le protocole PEAS, chaque analyse est evaluee par rapport a une analyse annotee
reference. Pour realiser une premiere evaluation de 1’algorithme de combinaison, nous avons
donc atmote un petit corpus de 66 questions, plus precisement les noyaux verbaux, les groupes
prepositionnels et les groupes nominaux. Ce corpus a ete extrait de la campagne d’evaluation

L. Monceaux, A. Vilnat

TREC 2001 pour la tﬁche Question — Réponse en contexte : i1 regroupe 49 groupes nominaux,
77 noyaux verbaux et 38 groupes prépositionnels.

Dans un premier temps, nous avons étudié la ﬁabilité des résultats obtenus par chaque
analyseur et par l’a1gorithme de combinaison grace 21 la mesure de précision (voir Fig. 5). Cette
mesure Va non seulement nous permettre de voir si1’a1gorithme de combinaison permet d’avoir
des informations plus ﬁables mais également de déterminer 1’ana1yseur le plus approprié pour
chaque type d’information. On constate qu’eﬁ'ectivement la combinaison des ditférentes
analyses permet d’améliorer la ﬁabilité des résultats obtenus notamment en ce qui concernent
les groupes nominaux.

   

Précision
100
/
80 5' Compromis
60 / IAna|yseur 1
40 / UAna|yseur 2
/ 5' Analyseur 3
20
I Anal seur 4
0
GN

Figure 5 : Mesure de precision

Cependant si l’on voit que la ﬁabilité des inforrnations a augmenté, i1 faut vériﬁer que
1’a1gorithme nous permet d’avoir autant d’informations qu’un analyseur seul grace 21 la mesure
de rappel. Au vu des résultats obtenus (voir Fig. 6), on peut dire que les résultats sont
satisfaisants : on a une bonne moyenne d’inforrnations retournées par rapport aux résultats des
analyseurs seuls.

Rappel
100
/
80 5' Compromis
60 / I Analyseur 1
40 / '3 Analyseur 2
20 / UAna|yseur 3
I Analyseur 4
0
GN GP NV

Figure 6 : Mesure de rappel

Les ditférentes évaluations réalisées nous permettent de conclure que sur ce corpus,
1’a1gorithme de combinaison permet de retourner plus d’informations syntaxiques ﬁables qu’un
analyseur seul.

M ULT I-ANALY SE vers une analyse syntaxique plus ﬁable

Si l’on regarde de plus pres les resultats obtenus par la combinaison par rapport aux résultats
obtenus par l’ana1yseur 1 (celui ayant les meilleurs resultats lors de l’evaluation), on peut
constater que l’algorithme de combinaison a pern1is de rattraper certaines erreurs realisees par
l’analyseur 1. Par exemple, pour la phrase « Name a company that ﬂies. », le mot « name >> est
etiquete comme groupe nominal par l’analyseur 1, alors que dans le compromis, celui-ci est
etiquete noyau verbal avec un taux de conﬁance de 0.75 :

<NVConf: 0. 75> Name </NI/> <GN Conf: 1> a company </GN> that
<NI/Conf: 1>ﬂ1'es </NV>

Cependant, certaines erreurs ne peuvent etre corrigees surtout si elles sont commises par une
majorite d’analyseurs. Par exemple pour la question « How much did the ﬁlture cost for the
vintage 1989 ? », trois analyseurs retournent le groupe nominal « the ﬁ1ture cost ». Donc il est
impossible de corriger puisque plus de la moitie des analyseurs font cette erreur. L’algorithme
de combinaison selectionnera donc ce groupe avec un taux de conﬁance assez important :

How much <NT/Conf: 1> did <ﬂVV> <GN Conf: 0. 75> theﬁzture cost </GN>
<GP Conf: 0. 75 > for the vintage 1989 </GP> ?

Cette premiere evaluation nous laisse esperer que la ﬁabilite d’une telle combinaison
augmentera d’autant plus avec un corpus plus large.

5 Conclusion

La combinaison d’informations de meme type permet generalement d’augmenter Peﬁcacite
des systemes utilises. Face 21 ce constat, nous avons donc developpe un outil de combinaison
entre plusieurs analyses syntaxiques et avons montre que l’eva1uation realisee sur les résultats
obtenus par une combinaison entre quatre analyseurs syntaxiques sur un corpus de question
permettait de valider cette hypothese de depart. Cette combinaison permet effectivement
d’augmenter la performance de l’analyse syntaxique retoumee et plus particulierement la
segmentation en constituants. On peut esperer que sur un corpus plus large, ces résultats
seront conﬁrmes. La principale difﬁculte de cette proposition reside dans la projection des
resultats de chaque analyseur dans un meme formalisme, qui requiert une bonne connaissance
de la theorie linguistique de chaque analyseur. Un des avantages de cette combinaison reside
egalement dans le fait que les informations syntaxiques retoumees sont accompagnees d’un
taux de conﬁance, cela permettant aux utilisateurs de choisir les informations les plus
pertinentes pour son application selon cette estimation de ﬁabilite. Notre motivation etait partie
en effet du constat que pour obtenir de bons resultats dans l’analyse des questions d’un
systeme de question — reponse, les informations syntaxiques de la question devaient etre
ﬁables.

A moyen terme, nous avons l’intention de developper 1’algorithme de combinaison notamrnent
sur les types d’informations a combiner comme les relations syntaxiques entre mots ou / et
groupes de mots. Mais nous voulons egalement tester notre algorithme sur un corpus plus
large et plus divers. Cette evaluation nous permettra non seulement de conﬁrmer les résultats
obtenus par la premiere evaluation mais egalement nous permettra de voir si les analyseurs
syntaxiques choisis sont de meme performance. En effet, comme nous l’avons dit, il est plus
interessant de realiser une combinaison sur des systemes ayant des performances proches.

L. Monceaux, A. Vilnat

Nous verrons également si 1e nombre d’ana1yseurs utilises est suﬁsant ou si 1’augmentation du
nombre des analyseurs permet d’augmenter la ﬁabilité des résultats. A plus long terme, cette
proposition de multi-analyse pourra également servir de base au développement d’un corpus de
reference pour l’éva1uation des analyseurs syntaxiques.

Références

Abney S. (1996) Partial Parsing via ﬁnite-state cascades. J. of Natural Language Engineering,
2(4), 337-344.

A'1’t-Mokhtar S., Chanod JP. (1997) Incremental ﬁnite-state parsing. Actes ANLP-97,
Washington.

Gendner V., ]11ouz G., Jardino M., Monceaux L., Paroubek P., Robba 1., Vilnat A. (2002) A
protocol for evaluating analyzers of syntax (peas). Proceedings of LREC-2002, Las Palmas,
Canary.

O. Ferret, B. Grau, M. Hurault-Plantet, G. Illouz, L. Monceaux, I. Robba, A. Vilnat —
Recherche de la réponse fondée sur la reconnaissance du focus de la question, Actes de
TALN’2002, Nancy, France, 24-27 juin 2002, pages 307-316

Fiscus J.G (1997) A post-processing system to yield reduced word error rates.‘ Recognizer
output voting error reduction (rover). Actes IEEE Workshop on Automatic Speech
Recognition and Understanding.

Marquez and Padro (1998) On the evaluation and comparison of taggers.‘ the effect of noise
in test corpora. Actes COLING/ACL’98, Montreal, Canada.

Monceaux L. (2002) Adaptation du niveau d’analyse des interventions dans un dialogue —
application a un syste‘me question — réponse, These de doctorat, Université Paris XI.

Monceaux L., Robba I. (2002) Les analyseurs syntaxiques .' atouts pour une analyse des
questions dans un systéme de question-réponse? Actes TALN-2002, Nancy, France.

Paroubek P., Rajman M. (2000) Multitag.' une ressource linguistique produit du paradigme
d ‘evaluation, Actes TALN-2000, Lausarme, Suisse.

Sekine S., Grishman R. (1995) A corpus-based probabilistic grammar with only two Non-
terminals. Actes IWPT-95, Prague.

Schwenk H., Gauvain J.L. (2000) Combining multiple speech recognizers using voting and
language model information. Actes ICSLP-2000, pages 915-918, Pekin.

Wehrli E. (1992) The [PS System. Actes COLING-92, pages 870-874

