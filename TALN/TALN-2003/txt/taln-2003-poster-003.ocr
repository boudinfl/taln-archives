TALN 2003, Batz-sur-Mer, 11—14juin 2003

Remarques et perspectives sur les
langages de prégroupe d’ordre 1/2

Denis Béchet, Annie Foret
INRIA & Université de Rennes 1, IRISA
Campus Universitaire de Beaulieu
Avenue du Général Leclerc
35042 Rennes Cedex
France
{Denis.Bechet,Annie.Foret}@irisa.fr

Mots-clefs — Keywords

Acquisition automatique, inférence grammaticale, modele de Gold, prégroupe.
Automatic acquisition, grammatical inference, model of Gold, pregoup.

Résumé - Abstract

Cet article traite de l’acquisition automatique des grammaires de Lambek, utilisées pour la mo-
délisation syntaxique des langues. Récemment, des algorithmes ont été proposés dans le modele
d’apprentissage de Gold, pour certaines classes de grammaires catégorielles. En revenche, les
grammaires de Lambek rigides ou k-valuées ne sont pas apprenables a partir des chaines. Nous
nous intéressons ici au cas des grammaires de prégroupe. Nous montrons que la classe des
grammaires de prégroupe n’est pas apprenable a partir des chaines, méme si on limite forte-
ment l’ordre des types (ordre 1/2); notre preuve revient a construire un point limite pour cette
classe.

The article is concerned by the automatic acquistion of some grammars introduced by Lambek
that are used for modeling the syntax of natural languages. Recently, some algorithms have
been proposed in the model of Gold for several classes of categorial grammars. On the other
hand, rigid or is-valued Lambek calculus grammars are not learnable from strings. We study
here pregroup grammars. We prove that rigid grammars are not learnable from strings even if
the order of types are bound by a constant (1/2) ; Our proof gives a limit point for this class of
grammars.

Denis Béchet, Annie Foret

1 Introduction

Les grammaires de prégroupe ont été introduites récemment dans (Lambek, 1999) dans le do-
maine du traitement automatique des langues, comme une alternative aux autres modeles de la
structure syntaxique des langues. Ce sont des grammaires lexicalisées, tout comme les gram-
maires catégorielles en général auxquelles les grammaires de prégroupe sont apparentées ; c’est-
a-dire qu’elles associent des types a chaque mot du lexique, tandis que les regles avec lesquelles
elles fonctionnent sont ﬁxées; ces regles, que ce soit dans les prégroupes ou dans les gram-
maires catégorielles de Lambek introduites auparavant, sont de nature logique et algébrique;
analyser une phrase revient alors a faire une deduction logique ou algébrique.

Nous nous intéressons plus particulierement au probleme de l ’acquisiti0n automatique de telles
grammaires; dans ce cadre, il s’agit d’obtenir les types associés aux mots, a partir d’eXem-
ples ; en se plagant dans le modele de Gold d’apprentissage, le processus est supposé converger
lorsque le nombre d’eXemples positifs est sufﬁsamment grand. Ce paradigme a suscité des tra-
vaux récents, depuis les résultats encourageants de (Kanazawa, 1998) et concerne plusieurs
équipes, notamment en France, citons les travaux tels que (Bonato & Retoré, september 2001;
Dudau-Sofronie, décembre 2001).

L’interét des prégroupes parait multiple : ils offrent un moyen d’eXpression de constructions
linguistiques complexes, par exemple (Bargelli & Lambek, 2001; Casadio & Lambek, 2001)
montrent comment traiter des clitiques; d’un autre point de vue, ils disposent d’un algorithme
polynomial pour tester l’appartenance au langage; enﬁn dans une perspective d’acquisition
automatisée, étre lexicalisé est un avantage : cela permet des mises a jour incrémentales lorsque
des mots ou des usages nouveaux doivent étre pris en compte.

L’ article est organisé comme suit. La section 2 présente des exemples, les déﬁnitions nécessaires
et des résultats connus. La section 3 donne ensuite la construction de point limite et la preuve
pour les grammaires de prégroupe d’ordre 1/2. La section 4 conclut.

2 Exemples, déﬁnitions et prérequis
2.1 Prégroupes

Un prégroupe est un monoi'de partiellement ordonné dans lequel tout element a possede un
adjoint a droite a’ et un adjoint a gauche al tel que a’ - a 3 1 3 a - al et a - a’ 3 1 3 a’ - a
Ceci permet de parler d’adjoints itérés : a(i‘1) = (a(i))l , a(i+1) = (a(i))T, am) = a
Prégroupes pour la linguistique. Nous reprenons ici un exemple linguistique dﬁ a Lambek
(Lambek, 2001). Ces exemples utilisent les types de base suivants :

7r2 = deuxieme personne 31 = énoncé au temps présent
p1 = participe présent p2 = participe passé

0 = objet q = question en oui ou non
q’ = question

— Voici un exemple de type 3 31 :
You have been seeing her
7T2 (7T§31P§) (P2Pi) (P100 0
Les réductions successives portent ici sur des parties de types provenant de mots consécutifs :
7r27r§ 3 1, pap; 3 1, pllpl 3 1 et olo 3 1.

Remarques et perspectives sur les langages de prégroupe d’ordre 1/2

— Un exemple de type 3 q (et aussi de type 3 q’ si q 3 q’) :
have you seen her ?
((1175775) 7T2 (P20l) 0
Ici les réductions peuvent se produire a un certain stade entre mots distants (pg et pg).
— un exemple de type 3 q’ (en reprenant des types ci-dessus — le tiret indique ici une trace) :

whom have you seen —?

(q’0“q‘) (qpéﬁé) W2 (p2o‘)

Prégroupes libres. En fait, dans les grammaires de prégroupe pour la linguistique, nous uti-
lisons des prégroupes libres qui sont obtenus a partir du monoi'de libre sur un alphabet P(Z)
(l’ensemble des mots sur cet alphabet). Nous notons de facon générale X * l’ensemble des mots
(comprenant le mot vide) sur un alphabet X et X + l’ensemble des mots non vides sur l’alphabet
X. Par la suite, 2 désigne un alphabet donné (les mots d’une langue naturelle).

Soit (P, 3) un ensemble ordonné ﬁni de types primitifs. L’ ensemble des types cie base est P(Z) =
{p(“ | p E P,i E Z} et l’ensemble des types Tags) = (P(Z)) = {p§“’ - - -pg") | 0 3
is 3 n, p], E P et 1'], E Z} (l’ensemble des mots de longueur ﬁnie sur l’alphabet P(Z)). Pour
X et Y 6 Tags), on dit que X 3 Y si et seulement cette relation est déductible dans le systeme
d’inférence suivant ou p, q E P, n, k E Z et X, Y, Z 6 Tags) :

XY 3 Z X 3 YZ
(ID) 3 (AG) 3 (AD)
X 3 X Xp(n)p(n+1)y s Z X s yp(n+1)p(n)Z
X 3 < Z Xp(k)Y 3 Z X 3 Yp(k)Z
(CUT) T (INDG) T (INDD)
X 3 Z Xq(k)Y 3 Z X 3 Yq(k)Z

q3psikestpair,etp3qsikestimpair

Cette construction, due a Buskowski, déﬁnit un prégroupe qui étend l’ordre 3 sur les types
primitifs P a Tags). Nous appelons prégroupe libre simple le prégroupe libre basé sur l’égalité
des types primitifs. La regle de coupure peut étre éliminée (Buszkowski, 2001).

Grammairellangage de prégroupe libre, rigide, is-valuée.

— Une grammaire du prégroupe libre base’ sur (P, 3) est un triplet G = (E, I, 3) tel que :
— 2 est un alphabet ﬁni;
— I : 2 »—> Pf (T( 1gs)) assigne un ensemble ﬁni de types a chaque élément de 2 ;
— s E P est le type principal associé aux phrases correctes.

— Les grarnmaires associant au plus is types a chaque symbole de l’alphabet sont appelées
grammaires is-valuées ou grarnmaires rigides si is = 1.

— La grammaire assigne le type X 61 un mot 111 - - -11,, de 2* si et seulement si pour 1 3 i 3 n,
EIX, E I tels que X1 - - -X,, 3 X dans le prégroupe libre.

— Le langage de cette grammaire noté .C(G) est l’ensemble des mots de 2* dont on peut assi-
gner le type 3.

2.2 Apprentissage et points limites

Point limite. Une classe de langages a un point limite L ssi il existe une suite inﬁnie (L,,),,EN
delangagestelleque: {L0gL1...g...gLng...
L : UnEN L”

Propriété. Une classe de langages qui possede un point lirnite n’est pas apprenable.

Denis Béchet, Annie Foret

3 Grammaires de prégroupe d’ordre n / 2

La classe des grammaires de prégroupe is-valuées n’étant pas apprenable (Foret, 2002), nous
nous sommes intéressés a des sous-classes avec l’espoir d’obtenir des résultats positifs. Nous
pouvons notamment hiérarchiser les grammaires en bomant l’ordre des types.

Grammaire de prégroupe d’ordre n / 2
— Une grammaire de prégroupe sur (P, 3) d’ordre n E N est une grammaire o1‘1 les types de
base sont dans P(‘”"'”) = {a(i)|a E P et — n 3 i 3 
— Une grammaire de prégroupe sur (P, 3) d’ordre n + 1 / 2, n E N est une grammaire o1‘1 les
types de base sont dans P(‘”‘1"'”) = {a(i)|a E P et — n — 1 3 i 3 
L’utilisation des 1 / 2 ordres permet de distinguer les grammaires avec des types symétriques
autour des types primitifs (les grammaires d’ordre n) et les grammaires sans type central (les
grammaires d’ordre n + 1 / 2).

Nous montrons dans cette section que la plus petite classe, a part la classe des grammaires
d’ordre 0 qui n’est pas tres intéressante, admet un point limite. Ainsi, toutes ces familles, sauf a
l’ordre O, ne sont pas apprenables.

Déﬁnitions de R et R*
R : Xplpy B XY,p e P, X,Y e (PU P‘)*.
R* : la fermeture transitive et symétrique de R (notation 73>).

Lemme. Pour X E (P U Pl)* et 3 E P, X 3 s si et seulement si X 73> s

Preuve. X 3 s ssi X 3 s dans le systeme de deduction des prégroupes libres sans coupure.
Or, dans ce systeme puisque l’ordre 3 pour les types primitifs est l’identité (le prégroupe est
simple), les regles (I N Dg) et (I N D D) ne sont pas utilisables. De meme, 3 étant un type primi-
tif, la regle (A D) est impossible. Donc, une deduction sans coupure ne comporte que l’aXiome
s 3 s suivi éventuellement d’une ou plusieurs applications de la regle (AG) qui correspond a la

regle de réécriture 3 appliquée a la partie gauche de l’inégalité
Lemme. R est fortement conﬂuent et noethérien sur (P U Pl)*.

Preuve. Pour la conﬂuence, il sufﬁt de voir que lorsque la regle B est applicable a deux en-
droits différents sur un meme mot, les deux motifs ne peuvent pas se recouper : X YblbZ <3
X a‘aYbl bZ B X a‘aYZ . Donc, dans les deux cas nous pouvons réduire les deux mots a X YZ :
XYb‘bZ B XYZ (3 Xalayz.

Le systeme est noethérien car toute application de la regle diminue la longueur du mot de deux
lettres. I1 ne peut pas y avoir de suite inﬁnie de réécritures.

Lemme. Pour X, Y E (P U P‘)* et p, q, s E P, si XplqY B s alorsp = q

Preuve. Dans un mot, les lettres disparaissent deux a deux. Une lettre de Pl Va disparaitre avec
une lettre de P qui se trouve a sa droite et symétriquement une lettre de P avec une lettre de
P‘ a sa gauche. Donc, un couple de deux lettres consécutives pl et q ne peut que disparaitre au

meme moment lors de l’application de la regle B et p = q.

Remarques et perspectives sur les langages de prégroupe d’ordre 1/2

Construction du point limite. Soient P = {p, q, r, 3} et 2 = {a, b, c, d, e}.

a H (p‘)”q‘
b '—> qpq‘
— Pour n 2 0, soient Gn = (E, c n—> qrl ,3) et Ln = .C(p,=)(Gn).
d I—> rplrl
e I—> rpns
a n—> ql
b '—> qplql
— Soient G,, = (E, c I—> qr‘ ,3) et L* = L',(p,:)(G,,).
d I—> rprl
e n—> rs

Lemme. Pour n 2 0, Ln = {abkcdke | 0 3 is 3 

Preuve. Les lemmes précédents nous indiquent que seuls les mots de ab*cd*e peuvent apparte-
nir a Ln. Pour_z' 3 0 et j 2 0, ablcdje E ab*cd*e et nous avons :
ab‘cd7e 6 Ln <=>

(pl)”ql(qpql)iqrl(rplrl)jrp”s 73 s <=> (R>I< conﬂuent et noethéiien)
(p‘)”p”'(p‘)jp“s 73 8
Quatre cas doivent étre analysés.

—Sii3netj3n: abiCdje€Ln . 3
(p‘)”‘*'p""'s 73 s <=>
i=j

— Sii 3 n etj > n : abicdje 6 Ln <=> (pl)”‘i(pl)j‘”s 73 s impossible!
— Sii > n et j 3 n : abicdje 6 Ln <=> pi‘”p”‘js 73 s impossible!

— Sii > n etj > n : abicdje 6 Ln <=> pi‘”(pl)j‘”s 73 s impossible!
Lemme. L* = {abkcdke | is 2 0}.

Preuve. Comme pour le lemme précédent, seuls les mots de ab*cd*e peuvent appartenir a Ln.
Pouri 2 0 et j 2 0, abicdje E a_b*c_d*e et nous avons :

ab‘cd9e E L* <=>
<1’ (qp‘q‘)iqr‘ (7‘p7“‘)j 7‘8 73 8 <=>
(1/)‘”p"p”s 73 8 <=>
2 = _] <=>

abicdje E {abkcdke | k 2 0}
Théoréme. L,, est un point limite de la faInille de langages (Ln)nZ0 pour la classe des langages
de prégroupe libre (simple) d’ordre 1/2.
Preuve. Les lemmes précédents montrent que Vic 2 0, Ln Q Ln+1 et L = UkEN Ln.

Corollaire. Les classes des grammaires /c-valuées de prégroupe libre d’ordre n/ 2, n 2 1 ne
sont pas apprenables dans le modele de Gold depuis des chaines.

4 Conclusion

Nous avons montré que la classe des grammaires rigide de prégroupe libre n’est pas apprenable
a partir des chaines, meme si on limite fortement l’ordre des types (ordre 1/2).

Denis Béchet, Annie Foret

/-\ /

Un résultat de non apprenabilité pour la classe des prégroupes rigides avait deja eté présenté a
(Foret, 2002), le point limite alors obtenu était une traduction d’un point limite pour le calcul
de Lambek (Foret & Le Nir, 2002) qui est en fait a l’ordre 2. On aurait pu s’attendre a ce que
l’ordre 1/2 soit apprenable. Notre résultat de non-apprenabilité peut donc surprendre mais il
précise les contours de ce qui peut étre entrepris ou non pour la mise au point d’algorithmes
d’ acquisition.

La non-apprenabilité a partir des chaines (sans structures) indique sans doute le besoin de struc-

turer les exemples servant a l’apprentissage. C’est une voie de recherche qui nous intéresse tout
particulierement.

Références

V. ABRUSCI & C. CASADIO, Eds. (2001). New Perspectives in Logic and Formal Linguisitics, Procee-
dings Vth ROMA Workshop. Bulzoni Editore.

BARGELLI D. & LAMBEK J. (2001). An algebraic approach to french sentence structure. In (de Groote
et al., 2001).

BONATO R. & RETORE C. (september 2001). Learning rigid lambek grammars and minimalist gram-
mars from structured sentences. Third workshop on Learning Language in Logic, Strasbourg.
BUSZKOWSKI W. (2001). Cut elimination for the lambek calculus of adjoints. In (Abrusci & Casadio,
2001).

CASADIO C. & LAMBEK J. (2001). An algebraic analysis of clitic pronouns in italian. In (de Groote
et al., 2001).

P. DE GROOTE, G. MORILL & C. RETORE, Eds. (2001). Logical aspects of computational linguistics :
4th International Conference, LACL 2001, Le Croisic, France, June 2001, volume 2099. Springer-Verlag.
DUDAU-SOFRONIE, TELLIER T. (décembre 2001). Learning categorial grammars from semantic types.
In I3e Amsterdam Colloquium, Palaiseau.

FORET A. (2002). Some unlearnability results for lambek categorial and pregroup grammars (unpubli-
shed). In Gracq, ESSLII, Trento, Italy.

FORET A. & LE NIR Y. (2002). Lambek rigid grammars are not learnable from strings. In C0-
LING ’2002, 19th International Conference on Computational Linguistics, Taipei, Taiwan.

KANAZAWA M. (1998). Learnable classes of categorial grammars. Studies in Logic, Language and
Information. FoLLI & CSLI. distributed by Cambridge University Press.

LAMBEK J. (1999). Type grammars revisited. In A. LECOMTE, F. LAMARCHE & G. PERRIER,
Eds., Logical aspects of computational linguistics : Second International Conference, IACL ’97, Nancy,
France, September 22-24, 1997; selected papers, volume 1582 2 Springer-Verlag.

LAMBEK J. (2001). Mathematics and the mind. In (Abrusci & Casadio, 2001).

