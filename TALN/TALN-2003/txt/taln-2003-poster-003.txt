TALN 2003, Batz-sur-Mer, 11–14 juin 2003
Remarques et perspectives sur les
langages de prégroupe d’ordre 1/2
Denis Béchet, Annie Foret
INRIA & Université de Rennes 1, IRISA
Campus Universitaire de Beaulieu
Avenue du Général Leclerc
35042 Rennes Cedex
France
{Denis.Bechet,Annie.Foret}@irisa.fr
Mots-clefs – Keywords
Acquisition automatique, inférence grammaticale, modèle de Gold, prégroupe.
Automatic acquisition, grammatical inference, model of Gold, pregoup.
Résumé - Abstract
Cet article traite de l’acquisition automatique des grammaires de Lambek, utilisées pour la mo-
délisation syntaxique des langues. Récemment, des algorithmes ont été proposés dans le modèle
d’apprentissage de Gold, pour certaines classes de grammaires catégorielles. En revenche, les
grammaires de Lambek rigides ou k-valuées ne sont pas apprenables à partir des chaînes. Nous
nous intéressons ici au cas des grammaires de prégroupe. Nous montrons que la classe des
grammaires de prégroupe n’est pas apprenable à partir des chaînes, même si on limite forte-
ment l’ordre des types (ordre 1/2) ; notre preuve revient à construire un point limite pour cette
classe.
The article is concerned by the automatic acquistion of some grammars introduced by Lambek
that are used for modeling the syntax of natural languages. Recently, some algorithms have
been proposed in the model of Gold for several classes of categorial grammars. On the other
hand, rigid or k-valued Lambek calculus grammars are not learnable from strings. We study
here pregroup grammars. We prove that rigid grammars are not learnable from strings even if
the order of types are bound by a constant (1/2) ; Our proof gives a limit point for this class of
grammars.
Denis Béchet, Annie Foret
1 Introduction
Les grammaires de prégroupe ont été introduites récemment dans (Lambek, 1999) dans le do-
maine du traitement automatique des langues, comme une alternative aux autres modèles de la
structure syntaxique des langues. Ce sont des grammaires lexicalisées, tout comme les gram-
maires catégorielles en général auxquelles les grammaires de prégroupe sont apparentées ; c’est-
à-dire qu’elles associent des types à chaque mot du lexique, tandis que les règles avec lesquelles
elles fonctionnent sont fixées ; ces règles, que ce soit dans les prégroupes ou dans les gram-
maires catégorielles de Lambek introduites auparavant, sont de nature logique et algébrique ;
analyser une phrase revient alors à faire une déduction logique ou algébrique.
Nous nous intéressons plus particulièrement au problème de l’acquisition automatique de telles
grammaires ; dans ce cadre, il s’agit d’obtenir les types associés aux mots, à partir d’exem-
ples ; en se plaçant dans le modèle de Gold d’apprentissage, le processus est supposé converger
lorsque le nombre d’exemples positifs est suffisamment grand. Ce paradigme a suscité des tra-
vaux récents, depuis les résultats encourageants de (Kanazawa, 1998) et concerne plusieurs
équipes, notamment en France, citons les travaux tels que (Bonato & Retoré, september 2001;
Dudau-Sofronie, décembre 2001).
L’interêt des prégroupes paraît multiple : ils offrent un moyen d’expression de constructions
linguistiques complexes, par exemple (Bargelli & Lambek, 2001; Casadio & Lambek, 2001)
montrent comment traiter des clitiques ; d’un autre point de vue, ils disposent d’un algorithme
polynomial pour tester l’appartenance au langage ; enfin dans une perspective d’acquisition
automatisée, être lexicalisé est un avantage : cela permet des mises à jour incrémentales lorsque
des mots ou des usages nouveaux doivent être pris en compte.
L’article est organisé comme suit. La section 2 présente des exemples, les définitions nécessaires
et des résultats connus. La section 3 donne ensuite la construction de point limite et la preuve
pour les grammaires de prégroupe d’ordre 1/2. La section 4 conclut.
2 Exemples, définitions et prérequis
2.1 Prégroupes
Un prégroupe est un monoïde partiellement ordonné dans lequel tout élément a possède un
adjoint à droite ar et un adjoint à gauche al tel que al · a ≤ 1 ≤ a · al et a · ar ≤ 1 ≤ ar · a
Ceci permet de parler d’adjoints ( )itérés l ( )r: a(i−1) = a(i) , a(i+1) = a(i) , a(0) = a
Prégroupes pour la linguistique. Nous reprenons ici un exemple linguistique dû à Lambek
(Lambek, 2001). Ces exemples utilisent les types de base suivants :
pi2 = deuxième personne s1 = énoncé au temps présent
p1 = participe présent p2 = participe passé
o = objet q = question en oui ou non
q′ = question
– Voici un exemple de type ≤ s1 :
You have been seeing her
pi2 (pir2s1pl2) (p2pl1) (p1ol) o
Les réductions successives portent ici sur des parties de types provenant de mots consécutifs :
pi2pi
r
2 ≤ 1, p
l
2p2 ≤ 1, p
l
1p1 ≤ 1 et o
lo ≤ 1.
Remarques et perspectives sur les langages de prégroupe d’ordre 1/2
– Un exemple de type ≤ q (et aussi de type ≤ q ′ si q ≤ q′) :
have you seen her ?
(qpl2pi
l
2) pi2 (p2ol) o
Ici les réductions peuvent se produire à un certain stade entre mots distants (pl2 et p2).
– un exemple de type ≤ q′ (en reprenant des types ci-dessus — le tiret indique ici une trace) :
whom have you seen – ?
(q′ollql) (qpl2pi
l
2) pi2 (p2ol)
Prégroupes libres. En fait, dans les grammaires de prégroupe pour la linguistique, nous uti-
lisons des prégroupes libres qui sont obtenus à partir du monoïde libre sur un alphabet P (Z)
(l’ensemble des mots sur cet alphabet). Nous notons de façon générale X ∗ l’ensemble des mots
(comprenant le mot vide) sur un alphabet X et X+ l’ensemble des mots non vides sur l’alphabet
X . Par la suite, Σ désigne un alphabet donné (les mots d’une langue naturelle).
Soit (P,≤) un ensemble ordonné fini de types primitifs. L’ense(mble)des types de base est P (Z) =(i (i
{p(i) | p ∈ P, i ∈ Z} et l’ensemble des types T(P,≤) = P (Z)
∗
= {p 1
)
1 · · · p
n)
n | 0 ≤
k ≤ n, pk ∈ P et ik ∈ Z} (l’ensemble des mots de longueur finie sur l’alphabet P (Z)). Pour
X et Y ∈ T(P,≤), on dit que X ≤ Y si et seulement cette relation est déductible dans le système
d’inférence suivant où p, q ∈ P , n, k ∈ Z et X, Y, Z ∈ T(P,≤) :
XY ≤ Z X ≤ Y Z
(ID) (AG) (AD)
X ≤ X Xp(n)p(n+1)Y ≤ Z X ≤ Y p(n+1)p(n)Z
X ≤ Y Y ≤ Z Xp(k)Y ≤ Z X ≤ Y p(k)Z
(CUT ) (INDG) (INDD)
X ≤ Z Xq(k)Y ≤ Z X ≤ Y q(k)Z
q ≤ p si k est pair, et p ≤ q si k est impair
Cette construction, due à Buskowski, définit un prégroupe qui étend l’ordre ≤ sur les types
primitifs P à T(P,≤). Nous appelons prégroupe libre simple le prégroupe libre basé sur l’égalité
des types primitifs. La règle de coupure peut être éliminée (Buszkowski, 2001).
Grammaire/langage de prégroupe libre, rigide, k-valuée.
– Une grammaire du prégroupe libre basé sur (P,≤) est un triplet G = (Σ, I, s) tel que :
– Σ est un alphabet fini ;
– I : Σ 7→ Pf (T(P,≤)) assigne un ensemble fini de types à chaque élément de Σ ;
– s ∈ P est le type principal associé aux phrases correctes.
– Les grammaires associant au plus k types à chaque symbole de l’alphabet sont appelées
grammaires k-valuées ou grammaires rigides si k = 1.
– La grammaire assigne le type X à un mot v1 · · · vn de Σ∗ si et seulement si pour 1 ≤ i ≤ n,
∃Xi ∈ I(vi) tels que X1 · · ·Xn ≤ X dans le prégroupe libre.
– Le langage de cette grammaire noté L(G) est l’ensemble des mots de Σ∗ dont on peut assi-
gner le type s.
2.2 Apprentissage et points limites
Point limite. Une classe de langages a un point limite L ssi il existe une suite infinie (Ln)n∈N
de langages telle que {: L0 (⋃L1 · · · ( · · · ( Ln ( · · ·
L = n L∈N n
Propriété. Une classe de langages qui possède un point limite n’est pas apprenable.
Denis Béchet, Annie Foret
3 Grammaires de prégroupe d’ordre n/2
La classe des grammaires de prégroupe k-valuées n’étant pas apprenable (Foret, 2002), nous
nous sommes intéressés à des sous-classes avec l’espoir d’obtenir des résultats positifs. Nous
pouvons notamment hiérarchiser les grammaires en bornant l’ordre des types.
Grammaire de prégroupe d’ordre n/2
– Une grammaire de prégroupe sur (P,≤) d’ordre n ∈ N est une grammaire où les types de
base sont dans P (−n···n) = {a(i)|a ∈ P et − n ≤ i ≤ n}.
– Une grammaire de prégroupe sur (P,≤) d’ordre n + 1/2, n ∈ N est une grammaire où les
types de base sont dans P (−n−1···n) = {a(i)|a ∈ P et − n− 1 ≤ i ≤ n}.
L’utilisation des 1/2 ordres permet de distinguer les grammaires avec des types symétriques
autour des types primitifs (les grammaires d’ordre n) et les grammaires sans type central (les
grammaires d’ordre n + 1/2).
Nous montrons dans cette section que la plus petite classe, à part la classe des grammaires
d’ordre 0 qui n’est pas très intéressante, admet un point limite. Ainsi, toutes ces familles, sauf à
l’ordre 0, ne sont pas apprenables.
Définitions deR etR∗
R
R : XplpY → XY , p ∈ P , X, Y ∈ (P ∪ P l)∗.
R∗ : la fermeture transitive et symétrique deR (notation R∗→).
Lemme. Pour X ∈ (P ∪ P l)∗ et s ∈ P , X ≤ s si et seulement R
∗
si X → s
Preuve. X ≤ s ssi X ≤ s dans le système de déduction des prégroupes libres sans coupure.
Or, dans ce système puisque l’ordre ≤ pour les types primitifs est l’identité (le prégroupe est
simple), les règles (INDG) et (INDD) ne sont pas utilisables. De même, s étant un type primi-
tif, la règle (AD) est impossible. Donc, une déduction sans coupure ne comporte que l’axiome
s ≤ s suivi éventuellement d’une ou plusieurs applications de la règle (AG) qui correspond à la
règle de réécriture R→ appliquée à la partie gauche de l’inégalité
Lemme.R est fortement confluent et nœthérien sur (P ∪ P l)∗.
Preuve. Pour la confluence, il suffit de voir que lorsque la règle R→ est applicable à deux en-
droits différents Rsur un même mot, les deux motifs ne peuvent pas se recouper : XY blbZ ←
XalaY bl
R
bZ → XalaY Z. Donc, dans les deux cas nous pouvons réduire les deux mots à XY Z :
R R
XY blbZ → XY Z ← XalaY Z.
Le système est nœthérien car toute application de la règle diminue la longueur du mot de deux
lettres. Il ne peut pas y avoir de suite infinie de réécritures.
Lemme. Pour RX, Y ∈ (P ∪ P l)∗ et p, q, s ∈ P , si XplqY → s alors p = q
Preuve. Dans un mot, les lettres disparaissent deux à deux. Une lettre de P l va disparaître avec
une lettre de P qui se trouve à sa droite et symétriquement une lettre de P avec une lettre de
P l à sa gauche. Donc, un couple de deux lettres consécutives pl et q ne peut que disparaître au
même moment lors de l’application de la règle R→ et p = q.
Remarques et perspectives sur les langages de prégroupe d’ordre 1/2
Construction du point limite. Soient P = {p, q, r, s} et Σ = {a, b, c, d, e}. a 7→ (p
l)nql
 b 7→ qpql 
– Pour n ≥ 0, soient Gn = (Σ,  c 7→ qr
l
  d 7→ rplrl 
, s) et L = L
 n (P,=)
(Gn).

 e 7→ rpns  a 7→ q
l
 b 7→ qplql 
– Soient G∗ = (Σ,  c 7→ qrl 
, s) et L
d 7→ rprl  ∗
= L(P,=)(G∗).

e 7→ rs
Lemme. Pour n ≥ 0, Ln = {abkcdke | 0 ≤ k ≤ n}.
Preuve. Les lemmes précédents nous indiquent que seuls les mots de ab∗cd∗e peuvent apparte-
nir à Ln. Pour i ≥ 0 et j ≥ 0, abicdje ∈ ab∗cd∗e et nous avons :
abicdje ∈ Ln ⇐⇒
(pl)nql(qpql)iqrl(rplrl)jrpn
R∗
s→ s ⇐⇒ (R∗ confluent et nœthérien)
(pl)npi(pl)jpn
R∗
s→ s
Quatre cas doivent être analysés.
– Si i ≤ n et j ≤ n : abicdje ∈ Ln ⇐⇒
(pl)n−ipn−j
R∗
s→ s ⇐⇒
i = j
– Si i ≤ n et j > n : abicdje ∈ Ln ⇐⇒ (pl)n−i(pl)j−n
R∗
s→ s impossible !
– Si i > n et j ≤ n : abicdje ∈ Ln ⇐⇒ pi−npn−j
R∗
s→ s impossible !
– Si i > n et j > n : abicdje ∈ Ln ⇐⇒ pi−n(pl)j−n
R∗
s→ s impossible !
Lemme. L∗ = {abkcdke | k ≥ 0}.
Preuve. Comme pour le lemme précédent, seuls les mots de ab∗cd∗e peuvent appartenir à Ln.
Pour i ≥ 0 et j ≥ 0, abicdje ∈ ab∗cd∗e et nous avons :
abicdje ∈ L∗ ⇐⇒
ql(qplql)iqrl(rprl)j
R∗
rs→ s ⇐⇒
(pl)ipjpn
R∗
s→ s ⇐⇒
i = j ⇐⇒
abicdje ∈ {abkcdke | k ≥ 0}
Théorème. L∗ est un point limite de la famille de langages (Lk)k≥0 pour la classe des langages
de prégroupe libre (simple) d’ordre 1/2. ⋃
Preuve. Les lemmes précédents montrent que ∀k ≥ 0, Lk ( Lk+1 et L = k∈N Lk.
Corollaire. Les classes des grammaires k-valuées de prégroupe libre d’ordre n/2, n ≥ 1 ne
sont pas apprenables dans le modèle de Gold depuis des chaînes.
4 Conclusion
Nous avons montré que la classe des grammaires rigide de prégroupe libre n’est pas apprenable
à partir des chaînes, même si on limite fortement l’ordre des types (ordre 1/2).
Denis Béchet, Annie Foret
Un résultat de non apprenabilité pour la classe des prégroupes rigides avait déjà été présenté à
(Foret, 2002), le point limite alors obtenu était une traduction d’un point limite pour le calcul
de Lambek (Foret & Le Nir, 2002) qui est en fait à l’ordre 2. On aurait pu s’attendre à ce que
l’ordre 1/2 soit apprenable. Notre résultat de non-apprenabilité peut donc surprendre mais il
précise les contours de ce qui peut être entrepris ou non pour la mise au point d’algorithmes
d’acquisition.
La non-apprenabilité à partir des chaines (sans structures) indique sans doute le besoin de struc-
turer les exemples servant à l’apprentissage. C’est une voie de recherche qui nous intéresse tout
particulièrement.
Références
V. ABRUSCI & C. CASADIO, Eds. (2001). New Perspectives in Logic and Formal Linguisitics, Procee-
dings Vth ROMA Workshop. Bulzoni Editore.
BARGELLI D. & LAMBEK J. (2001). An algebraic approach to french sentence structure. In (de Groote
et al., 2001).
BONATO R. & RETORÉ C. (september 2001). Learning rigid lambek grammars and minimalist gram-
mars from structured sentences. Third workshop on Learning Language in Logic, Strasbourg.
BUSZKOWSKI W. (2001). Cut elimination for the lambek calculus of adjoints. In (Abrusci & Casadio,
2001).
CASADIO C. & LAMBEK J. (2001). An algebraic analysis of clitic pronouns in italian. In (de Groote
et al., 2001).
P. DE GROOTE, G. MORILL & C. RETORÉ, Eds. (2001). Logical aspects of computational linguistics :
4th International Conference, LACL 2001, Le Croisic, France, June 2001, volume 2099. Springer-Verlag.
DUDAU-SOFRONIE, TELLIER T. (décembre 2001). Learning categorial grammars from semantic types.
In 13e Amsterdam Colloquium, Palaiseau.
FORET A. (2002). Some unlearnability results for lambek categorial and pregroup grammars (unpubli-
shed). In Gracq, ESSLII, Trento, Italy.
FORET A. & LE NIR Y. (2002). Lambek rigid grammars are not learnable from strings. In CO-
LING’2002, 19th International Conference on Computational Linguistics, Taipei, Taiwan.
KANAZAWA M. (1998). Learnable classes of categorial grammars. Studies in Logic, Language and
Information. FoLLI & CSLI. distributed by Cambridge University Press.
LAMBEK J. (1999). Type grammars revisited. In A. LECOMTE, F. LAMARCHE & G. PERRIER,
Eds., Logical aspects of computational linguistics : Second International Conference, LACL ’97, Nancy,
France, September 22–24, 1997 ; selected papers, volume 1582 : Springer-Verlag.
LAMBEK J. (2001). Mathematics and the mind. In (Abrusci & Casadio, 2001).
