TALN 2003, Batz-sur-Mer, 11-14 juin 2003

MDA-XML : une expérience de rédaction contrﬁlée
multilingue basée sur XML

Guy Lapalme (1), Caroline Brun (2), Marc Dymetman (2),
(1) RALI - Université de Montréal
Montréal (Québec)
lapalme@iro.umontreal.ca
(2) Xerox Research Centre Europe
6, chemin de Maupertuis, 38240 Meylan
{Caroline.Brun,Marc.Dymetman} @ xrce.xerox.com

Mots-clefs — Keywords

rédaction controlée multilingue, XML
multilingual controlled authoring, )ﬂV[L

Résumé - Abstract

Nous décrivons dans cet article l’implantation d’un systeme de rédaction controlée multilingue
dans un environnement XML. Avec ce systeme, un auteur rédige interactivement un texte se
conformant a des regles de bonne formation aux niveaux du contenu sémantique et de la réa1i-
sation linguistique décrites par un schéma XML. Nous discutons les avantages de cette approche
ainsi que les difﬁcultés rencontrées lors du développement de ce systeme. Nous concluons avec
un exemple d’app1ication a une classe de documents pharmaceutiques.

We describe an XML implementation of a multilingual authoring system. Using this system,
an author can interactively write a text conforming to well-formedness content and realization
rules described by an XML schema. We discuss the advantages of such an approach as well as
the problems we met during the implementation of our system. We show in the end an example
of an application for a class of pharmaceutical documents.

Guy Lapalme, Caroline Brun, Marc Dymetman

La production moderne de documentation fait de plus en plus l’objet d’applications informa-
tisées, en particulier pour des domaines ou la forme et le contenu des documents sont des
parametres cruciaux, comme c’est le cas par exemple pour la documentation technique ou les
manuels d’instructions. Les besoins en termes de formatage sont maintenant bien identiﬁés, et
la plupart des outils de traitement de texte proposent des fonctionnalités telles que des feuilles
de style ou des modeles de documents. On ne peut cependant pas réduire la notion de rédaction
de document a celle de formatage. Ainsi, des recherches en cours visent a développer des meth-
odes pour aider un auteur a composer le contenu du texte, en particulier lorsque les documents
appartiennent a des domaines restreints. En effet, certains standards imposent des contraintes
strictes sur l’information véhiculée dans les documents, et dans certains cas, la forme meme des
phrases peut étre décrite au moyen d’une langue controlée.

Parmi ces différentes recherches, le systeme “Multilingual Document Authoring” (MDA), (Brun
et al., 2000; Dymetman et al., 2000; Dymetman, 2002; Brun & Dymetman, 2002), développé
ces dernieres années dans la lignée des travaux de (Power & Scott, 1998) et de (Ranta, 2002),
permet d’encoder sous forme de grammaires l’information nécessaire a la constitution d’un
document valide. Nous montrerons un exemple tiré du domaine pharmaceutique illustrant la ca-
pacité de ces grammaires a décrire les connaissances du domaine (le fait qu’un produit pharma-
ceutique soit commercialisé sous une certaine forme contraint a la fois son conditionnement et
son mode d’administration) ainsi que des contraintes sur l’organisation du document (la forme
pharmaceutique et le mode d’administration doivent apparaitre dans des sections spéciﬁques
d’une notice).

Le systeme MDA développé a XRCE a été utilisé avec succes pour la production de notices
pharmaceutiques et de comptes-rendus d’expériences biologiques (Brun et al., 2002). Ce sys-
teme possede de fortes connexions avec XML, car dans les deux cas le document est représenté
comme une combinaison de structures d’arbres balisées et d’éléments de surface en texte libre.

Dans l’approche proposée par MDA, la rédaction est fondée sur des décisions sémantiques in-
dépendantes de la langue permettant la construction de structures également indépendantes de
la langue. Ce sont des mécanismes propres aux différentes langues couvertes par le systeme qui
sont ensuite utilisés pour produire les réalisations textuelles multilingues. La structure séman-
tique guide l’auteur dans la spéciﬁcation du document, a la maniere d’une DTD ou d’un schéma
guidant la structure d’un document XML. Mais les DTDs et les schémas XML sont tres limités
dans l’expressivité des dépendances sémantiques ou grammaticales qu’ils peuvent établir entre
les différents sous-arbres de la structure du document. De plus, les outils de gestion de styles
comme XSLT ou CSS, développés pour opérer des transformations sur la présentation des doc-
uments, sont mal adaptés aux traitements linguistiques. Cependant, les outils de rédaction basés
sur XML sont de plus en plus largement utilisés pour la création de documentation technique, le
controle de la qualité des documents et l’amélioration de leur réutilisabilité. Du point de vue du
traitement automatique des langues, la nouveauté des représentations XML n’est a priori pas
évidente. Néanmoins, XML possede un large potentiel en tant que linguafranca, et draine une
large communauté d’utilisateurs vers des pratiques de rédaction ou l’explicitation du contenu
prend une importance cruciale.

Nous avons donc jugé intéressant d’approfondir les connexions existant entre MDA et XML
en développant le prototype MDA-XML, qui implante les principes du systeme MDA dans un
environnement basé sur )ﬂV[L. Nous décrivons dans les sections suivantes l’état d’avancement
de notre prototype de rédaction multilingue interactive, et discutons certaines des difﬁcultés
rencontrées dans la poursuite de son développement.

MDA-XML : une experience de redaction controlee multilingue basee sur XML

Intégration dans XML

Les feuilles de styles XML, (eXtensible Stylesheet languages), proposent une notation declara-
tive pour les transformations de structures XML, elles-memes decrites en XML. (Cawsey, 2000)
et (Wilcock, 2001) ont decrit quelques experiences de generation automatique en utilisant des
feuilles de style XSLT initialement concues pour la presentation de documents. Comme les
transformations d’arbres XSLT ne s’appliquent que sur l’arbre d’entree sans acces a la sortie
partielle d’un traitement intermediaire, ceci induit une vision “pipeline” du processus de genera-
tion avec des separations de traitement assez artiﬁcielles. Dans un contexte interactif (non en-
visage par ces auteurs) comme celui de MDA, ceci impliquerait de generer une sequence de
transformations apres chaque choix de l’utilisateur, les appliquer, recuperer l’arbre transforme
et l’afﬁcher. C’est pourquoi ils suggeraient d’autres implantations ou les transformations sont
realisees a l’aide de programmes standard. Deux caracteristiques importantes de XML sont la
veriﬁcation de types a priori ainsi que la validation du document accomplie avant le traitement
informatique. L’ information decrivant les types d’un document XML peut etre donnee par des
schemas, qui offrent un systeme de typage ﬂexible et puissant. Les editeurs XML actuels ne
vont cependant pas bien au dela du niveau de la presentation. De nombreuses recherches sont
menees concemant le Semantic Web ou des extensions de XML pour des applications speci-
ﬁques, mais elles se concentrent sur les methodes de structuration et d’annotation de donnees,
qui seront par la suite presentees de diverses facons ou bien encore traitees informatiquement. A
notre connaissance, seul (Boardman, 1999) a aide des auteurs a produire un texte grammatical
et conforme a des schemas XML.

Dans le systeme MDA, les interactions sont realisees par le biais du texte de sortie : bien que
les choix soient de nature semantique, l’auteur n’interagit jamais directement avec la struc-
ture semantique mais seulement avec une representation textuelle de cette structure, les valeurs
semantiques (equivalentes a des balises) etant cachees. Le but d’un systeme comme MDA
n’est donc pas uniquement de produire un document valide comme c’est le cas pour XML,
mais egalement des realisations textuelles grammaticales. La structure inteme du document est
constamment Inise a jour et les dependances semantiques sont propagees entre les differentes
parties du texte, et ceci dans l’ensemble des langues couvertes par le systeme. La notion de
presentation (rendering) XML est ainsi considerablement etendue dans le systeme MDA. Nous
decrivons dans la section suivante un experience visant a obtenir les fonctionnalites du systeme
MDA dans un environnement reposant sur les schemas XML.

Description du prototype MDA-XML

Les principes du systeme de redaction assistee decrits dans cet article sont implantes au sein
d’une interface utilisateur conviviale qui permet une interaction en temps reel avec des gram-
maires multilingues. Actuellement, le prototype MDA-XML dispose de deux grammaires par-
alleles en francais et en anglais decrivant une classe de notices pharmaceutiques.

L’interface utilisateur (cf. ﬁgure 1) comprend une fenetre de texte par langue ainsi qu’une
fenetre presentant l’arbre semantique construit par le biais d’interactions dans les fenetres de
texte. Cette fenetre est presentee ici a des ﬁns d’illustration, mais n’est pas necessaire dans
une phase de production. L’ auteur interagit dans les fenetres de texte en cliquant sur un mot :
s’il s’agit d’un non-terminal (cf. le mot form dans le menu de la ﬁgure 1), un menu apparait

Guy Lapalme, Caroline Brun, Marc Dymetman

dans lequel les choix valides sont presentes a l’utilisateur qui selectionne un element parmi ces
possibilites ou effectue un retour-arriere. Lorsque un choix est effectue pour un langage donne
(cream dans la ﬁgure 1), l’arbre semantique est mis a jour pour reﬂeter le choix: pharmF0rm
prend la valeur creme dans la fenétre semantique de la ﬁgure 2 et le mot correspondant creme
est produit dans le texte francais. Dans ce cas precis, le mode “automatique” du systeme est
actif : toutes les Inises a jour obligatoires qui dependent directement du choix que vient de
faire l’auteur sont effectuees. Sur la ﬁgure 2, on peut observer que conditionnemem‘ est de-
venu tube, puisqu’il s’agissait de la seule possibilite compatible avec la forme pharmaceutique
creme. De la meme facon, le mode d’administration m0deEmpl0i a ete mis a jour par sa reali-
sation textuelle (a nouveau la seule compatible avec creme). Les actions correspondantes sont
egalement realisees en francais.

Comme son nom le suggere, MDA-XML est une reconstruction systematique des idees develop-
pees dans le projet MDA, avec cependant certaines variantes dans les choix d’implantation : les
grammaires sont decrites dans un format XML controle par un schema, au lieu de l’etre dans la
notation proprietaire inspiree de Prolog; toutes les interactions et interpretations sont faites en
Java, au sein duquel une version simpliﬁee (uniﬁcation de termes atomiques seulement) du me-
canisme d’uniﬁcation de Prolog est reimplantee : l’utilisation d’un interpreteur Prolog comme
dans la version actuelle du systeme MDA n’est plus necessaire.

Idealement nous aurions souhaite implanter les regles semantiques et grammaticales dans des
schemas XML. Bien que des expressions regulieres ou des contraintes d’occurrence puissent
etre deﬁnies pour des elements, le standard XML actuel ne dispose que de contraintes limitees
entre differents elements : seules quelques contraintes relativement simples concernant l’unicite
d’identiﬁcateurs et de references peuvent etre imposees. I1 existe des propositions plus etendues
de modeles de contraintes, mais elles reposent pour la plupart sur des processus extemes (par
exemple XSLT) et ne sont pas adaptees a un environnement interactif comme MDA-XML. Nous
avons donc deﬁni notre propre format de regle : il s’agit d’une adaptation plus ou moins directe
du format des grammaires a clauses deﬁnies se conformant aux conventions XML et inspiree
de la syntaxe des deﬁnitions et des appels de “modeles” (templates) des feuilles de style XSLT.
Ces regles peuvent etre validees syntaxiquement par un schema, mais il serait interessant d’en
permettre une validation d’ordre semantique en cours d’edition. Un autre avantage important
est que ce schema peut etre utilise dans le cadre d’un editeur XML qui peut ainsi suggerer les
expansions possibles des regles a chaque etape de leur deﬁnition.

Une grammaire “MDA-XML” bilingue francais/anglais (environ 2500 lignes de XML) a ete
developpee pour la redaction assistee de notices pharmaceutiques. Un des aspects interessants
de cette experience reside dans l’utilisation de standards industriels XML; par exemple les vues
“Authentic” et tabulaires de XMLSpy (XML Spy, 2002), qui permettent d’utiliser des sug-
gestions deduites du schema, simpliﬁent la saisie des regles. Les balises XML sont cachees au
developpeur dans ce mode. Contrairement au systeme MDA initial, MDA-XML est entierement
developpe en Java et ne depend donc pas d’une communication avec un interpreteur Prolog ex-
terne pour les calculs et la Inise a jour du texte, ce qui permet de conjuger portabilite et rapidite.
I1 presente cependant certains inconvenients, car le pouvoir expressif de l’interpreteur Prolog
permet de simpliﬁer les grammaires par l’utilisation du non-determinisme. Actuellement MDA-
XML ne dispose pas d’une implantation complete du mecanisme d’uniﬁcation, ce qui rend dif-
ﬁcile la description de listes recursives correlees. Comme dans le systeme MDA, l’interaction
se fait par le biais du texte, ce qui nous semble une approche assez naturelle. Cependant, il
serait interessant de voir si l’arbre semantique peut aussi etre utilise a cette ﬁn. Meme si au-
cune difﬁculte technique ne se pose pour proposer des choix semantiques dans la fenetre de vue

MDA-XML : une experience de rédaction contrélée multilingue basée sur XML

3 3 B MDA-XML
E Automatic mode English
5*”-"“'°‘""” drugName currentLabName eaducee dci
myNoticeP‘harm
up pham.,-I-itre 1.Presentation

drugName number unitFormat catperson property form property conditionnement of

' Pharmpresematim number unitcomptable fuIlLabName Laboratories

nrJmi'I-icd Syru p
mgmmb 2. Administration and dosage capsule
I’ dosageNon‘u"ide “S393 _ tablet
number unItFormat

pcrs cream

pharrarfhrrzr 3_ gumpngmgn EVE drops

prop <presentaI.ion::-
 Fmh -m

5’ cpt
- A
-' Pharmmodepus drugName r.urrentLabName t.adur.ee dr.i
nmdcﬂrarpfor 1_ presentatinn

P dosageNon‘u"ide

drugName number unitFormat catperson form property conditionnement de number
unitcomptable Laboratoires fu|lLabName

2. Mode d'emp|oi et posologie
usage

number unitFormat

3. Composition ;

Figure 1: Apres que 1’uti1isateur a sélectionné form, un menu des choix possibles lui est présenté.

w

B 3 B MDA-XML
5 Automatic mode English
Semantics drugName t.urrentLabName caducee dei
myNotir:ePharn'I
up phammtre 1.Presentation
.'. Pharmpresentatinn L:rbucgrP::::i:Snumber unitFormat catperson eream property tube of number I'u||LabName
i1omi'I-‘I-;.1::'
nomJ_ab 2. Administration and dosage
p d,35ageN,3n.,Me Spread theeream on the damaged area and rub in by massaging gently.
PC“ number unitFormat
Creme 3. Composition
wide
condCrer'ne French
P’ tpt
.' Pharmmodepos drugName :urrentLabName caducee dci ‘
modeCren'Ie

1. Presentation
P dosageNon‘-r'ide

drughlame number unitFnrmat catperson creme tube de number Laboratoires
ful|LabName

2. Mode d'emp|oi et posologie
Etaler Ia creme sur la zone ii. traiter et masser doucement pour faire penetrer.
number unitFormat

3. Composition '.

Figure 2: Etat de MDA-XML apres que 1’uti1isateur a choisi cream dans 1. Les choix devenus obli-
gatoires sont mis 51 jour 2 conditionnememt prend la Valeur tube et usage est remplacé par une phrase

appropriée. L’information sémantique a aussi été mise 51 jour dans la fenétre Semantics 2 pharmform
prend la Valeur creme, cond prend la Valeur condCreme et modeEmploi prend la Valeur modeCreme.

Guy Lapalme, Caroline Brun, Marc Dymetman

de l’arbre sémantique, il faudrait pousser plus avant les expérimentations sur l’interface util-
isateur, pour évaluer la convivialité d’une interaction purement sémantique. Actuellement, les
grammaires subissent une vériﬁcation de cohérence sémantique et de complétude lors de leur
analyse par MDA-XML, le schéma actuel ne pouvant exprimer que des vériﬁcations syntax-
iques relativement simples. I1 serait également intéressant d’approfondir notre réﬂexion pour
intégrer ces veriﬁcations sémantiques dans le schéma lui-méme.

Conclusion

Nous avons décrit MDA-XML, un prototype de rédaction controlée multilingue développé dans
un environnement XML. Les regles de grammaires, écrites en )ﬂVIL, peuvent étre vues comme
des variantes linguistiquement expressives de schémas XML. Le systeme, entierement imple-
menté en Java (l’analyseur, l’interpréteur de grammaire et l’interface graphique), a été appliqué
a une classe de documents pharmaceutiques. Ce travail est un exemple d’utilisation des outils
XML dans un contexte de rédaction controlée s’étendant au-dela du formatage vers des exten-
sions intégrant des aspects sémantiques et dynamiques dans le processus de rédaction.

Références

BOARDMAN R. (1999). An XML/XSL architecture for language-neutral document authoring. Master’s
thesis, Centre for Cognitive Science, Edinburgh University.

BRUN C. & DYMETMAN M. (2002). Rédaction multilingue assistée dans le modele MDA, Dans Multi-
linguisme et traitement de l ’information, p. 129-152. Traité des sciences et techniques de l’information.
Hermes.

BRUN C., DYMETMAN M., FANCHON E. & LHOMME S. (2002). Controlled authoring of biological
experiment reports. a paraitre dans EACL’03 demo session, p. 4 pages.

BRUN C., DYMETMAN M. & LUX V. (2000). Document structure and multilingual authoring. Dans
Proceedings of the First International Natural Language Generation Conference (INLG’2000), p. 24-31,
Mitzpe Ramon, Israel.

CAWSEY A. (2000). Presenting tailored resource descriptions: Will XSLT do the job? Dans 9th
International World Wide Web Conference.

DY METMAN M. (2002). Text authoring, knowledge acquisition and description logics. Dans Proceed-
ings of Coling 2002, Taiwan.

DYMETMAN M., LUX V. & RANTA A. (2000). XML and multilingual document authoring: converg-
ing trend. Dans Proceedings of the The 18th International Conference on Computational Linguistics
(COLING 2000), p. 243-249, Saarbruecken: COLING.

POWER R. & SCOTT D. (1998). Multilingual authoring using feedback texts. Dans Coling-ACL, p.
1053-1059, Montréal.

RANTA A. (2002). Grammatical framework. a type-theoretical grammar formalism. to appear in Jour-
nal of Functional Programming.

WILCOCK G. (2001). Pipelines, templates and transformations: XML and natural language generation.
Dans Proceedings of the ﬁrst XML and NLP workshop, p. 1-8.

XML Spy (2002). XML Spy 5 Entreprise Edition Manual. Altova Corp.

