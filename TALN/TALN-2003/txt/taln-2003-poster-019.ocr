TALN 2003, Batz-sur-Mer, II-I4 juin 2003

Le contexte au service de la correction
des graphies fautives arabes

Chiraz Ben Othmane Zribi, Mohamed Ben Ahmed

Laboratoire de recherche RIADI
Université La Manouba, ENSI, La Manouba, Tunisie
adn@ gnet.tn, Mohamed.BenAhmed@riadi.mu.tn

Résumé — Abstract

Les mots arabes sont lexicalement beaucoup plus proches les uns des autres que les mots
frangais et anglais. Cette proximité a pour effet un grand nombre de propositions a la
correction d'une forme erronée arabe. Nous proposons dans cet article une méthode qui prend
en consideration le contexte de l'erreur pour éliminer certaines propositions données par le
correcteur. Le contexte de l'erreur sera dans un premier temps les mots voisinant l'erreur et
s'étendra jusqu'a l'ensemble des mots du texte contenant l'erreur. Ayant été testée sur un corpus
textuel contenant des erreurs réelles, la méthode que nous proposons aura permis de réduire le
nombre moyen de propositions d'environ 75% (de 16,8 a 3,98 propositions en moyenne).

Arabic words are lexically closer to each other than can be English or French words. This
proximity mainly results a great number of candidates given by a spelling corrector when
processing an erroneous word. We address in this paper a new method aiming to reduce the
number of proposals given by automatic Arabic spelling correction tools. We suggest the use
of error's context in order to eliminate some correction candidates. Context will be nearby
words and can be extended to all words in the text. Our method was tested on a corpus
containing genuine errors and has yield good results. The average number of proposals has
been reduced of about 75% (from 16,8 to 3,98 proposals on average).

Mots Clés — Keywords

Langue, Arabe, Erreur orthographique, Correction automatique, Contexte
Language, Arabic, Misspelled word, Automatic correction, Context

1. Introduction

La majorité des correcteurs orthographiques existants sont semi-automatiques, ils assistent
l'utilisateur en lui proposant un ensemble de candidats proches du mot erroné. Disposant d'un
tel correcteur orthographique pour l'arabe [Ben Othmane Zribi et Zribi, 1999], nous nous
sommes proposes de l'améliorer en diminuant le nombre de ses propositions. Deux motivations
principales nous ont incite a s'intéresser a ce probleme : D'abord la nécessité qu'ont certaines
applications d'une correction des erreurs orthographiques completement automatique [Kukich,
1992]. Ensuite, l'importance du nombre de candidats pour une forme erronée arabe compare a
d'autres langues comme le frangais et l'anglais due a la proximité lexicale des mots. Le nombre
moyen de formes lexicalement voisines (mots qui different d'une seule erreur d'édition: ajout,

Chiraz Ben Othmane Zribi, Mohamed Ben Ahmed

suppression, substitution et interversion) qui est de 3 pour l'anglais et de 3,5 pour le francais
est de 26,5 pour l'arabe non voyellé [Ben Othmane Zribi et Zribi, 1999].

Notre but étant une correction completement automatique, nous avons tenté de l'approcher en
minimisant autant que possible le nombre de candidats et ceci en commencant par éliminer les
candidats les moins probables. La méthode que nous proposons pour diminuer le nombre de
candidats s'appuie sur le contexte du mot erroné. Elle considere les mots voisinant l'erreur ainsi
que l'ensemble des mots du texte contenant l'erreur.

Dans ce qui suit, nous commencons par présenter notre systeme de correction ainsi qu'une
évaluation initiale de notre correcteur portant sur des erreurs réelles. Nous présentons par la
suite notre méthode accompagnée d'une procédure d'évaluation mesurant son efﬁcacité.

2. Le correcteur orthographique utilisé

Le systeme utilisé pour la vériﬁcation et la correction des mots arabes se base principalement
sur l’utilisation d’un dictionnaire contenant toutes les formes ﬂéchies voyellées (1 600 000
entrées qui correspondent a 577 546 formes non voyellées) de la langue arabe. A cause de
l’agglutination des proclitiques (articles, prépositions, conjonctions) et des enclitiques
(pronoms) aux radicaux (formes ﬂéchies), ce dictionnaire ne sufﬁt pas pour reconnaitre les
formes textuelles arabes. II a donc été accompagné d’un analyseur morphologique des formes
textuelles. Cet analyseur utilise en plus du dictionnaire des formes ﬂéchies, un petit dictionnaire
incluant tous les enclinomenes (90 entrées) et applique un ensemble de regles pour rechercher
tous les découpages possibles en proclitique, radical et enclitique. Ces memes dictionnaires et
grammaire servent pour la détection et la correction des erreurs orthographiques. La détection
des erreurs est effectuée lors de l'analyse morphologique. La correction, quant a elle, se fait par
une version améliorée dite "tolérante" de l'analyseur morphologique.

3. Evaluation initiale du correcteur
Pour évaluer le correcteur utilisé nous avons pris en considération les mesures suivantes:

0 Couverture : pourcentage d'erreurs pour lesquelles le correcteur n'est pas silencieux
c'est a dire qu’il fournit des propositions

0 Précision : pourcentage d'erreurs pour lesquelles le mot correct se trouve parmi les
propositions

0 Ambiguité : pourcentage d'erreurs pour lesquelles le correcteur fournit plus qu'une
proposition

0 Proposition : nombre moyen de propositions de correction par mot erroné

Notre experimentation a porté sur des erreurs réelles. Nous avons pris pour cela, trois textes
(comptant au total environ 5 000 formes) traitant du meme domaine et contenant 151 formes
erronées qui relevent de l'une des quatre opérations d’édition. L’invocation de notre systeme
de correction sur ces textes a donné les résultats suivants :

Couverture Précision Ambigu'1'té Proposition

100% 100 % 78,80 % 12,50 [min:1, max:l60]

Tableau 1. Evaluation initiale du correcteur orthographique
Outre le fait que la couverture est maximale et le fait que le correcteur nous donne toujours la
bonne correction parmi ses propositions, ces comptages nous apprennent que le taux
d'ambigui'té est tres élevé. Plus de 78% des erreurs présentent en effet plus d'une proposition a

Le contexte au service de la correction des graphiesfautives arabes

leur correction. Par ailleurs, bien que le nombre moyen des propositions soit inférieur a la
moyenne théorique prévue précédemment (27 formes candidates), il reste toujours trop élevé si
on le compare a d'autres langues. Pour l'anglais par exemple le nombre moyen de candidats est
de 3,4 pour des erreurs réelles [Agirre et al., 1998].

4. Proposition
Notons: Me : un mot erroné ;
Mc : la correction de Me ;
C = {c1, .., cu} : l'ensemble des candidats a la correction de Me ;

Mctxt = {mk, ..., ml, m+1, ..., m+k} : l’ensemble des mots entourant (avant et
apres) le mot erroné Me dans le texte (en considérant une fenétre de taille k).

Viser une correction completement automatique revient a chercher a réduire l'ensemble C a un
singleton qui correspond au mot correct Mc. On aurait alors : Card (C) = 1 avec Me as C.
Pour notre part, nous visons simplement a ce que Card (C) soit le plus petit possible. Pour
cela, nous allons chercher a éliminer les candidats les moins probables. L'utilisation du contexte
qui est a la base de notre méthode s'effectuera en deux temps. D’abord considérer les mots
voisinant l'erreur seulement, ensuite seront considérés l'ensemble des mots du texte contenant
l'erreur.

4.1 Mots en contexte

L'hypothese de départ est que chaque candidat c.- posséde une certaine « affinite’ » lexicale
avec les mots du contexte du mot erroné Me qu’il corrige. En conséquence, pour classer les
candidats entre eux et éliminer les moins probables, nous examinons le contexte et nous
choisissons les candidats les plus "proches" des mots du contexte.

Pour ce faire, nous avons opté pour une méthode statistique qui consiste a calculer pour
chaque candidat la probabilité d’étre la bonne solution étant donnés les mots qui entourent
l'erreur dans le texte. Seuls les candidats ayant une probabilité jugée acceptable sont gardés, les
autres sont éliminés.

Pour chaque candidat nous calculons p(ci\Mctxt) qui représente la probabilité que ci soit la
bonne solution sachant que le mot erroné Me est entouré du contexte Mctxt.

Calculer cette probabilité n'est pas chose aisée car elle nécessite beaucoup de données pour
l’apprentissage. Nous utiliserons a la place, la probabilité p(Mctxt\ci) et ceci en appliquant la
regle d'inversion de Bayes :

p (Ci\MCtXt) =ep(M(£)t()(1\t/}:::;g(>t<)p(c1)

Puisque nous cherchons les candidats ayant la plus grande valeur p(ci\Mctxt), nous pouvons
calculer uniquement la valeur p(Mctxt\ci) x p(ci). La probabilité p(Mctxt) étant la méme pour
tous les candidats (le contexte est le meme), elle n'a donc pas d'effet sur le résultat.

En supposant que la présence d’un mot dans un contexte ne dépend pas de la présence des
autres mots dans ce méme contexte, nous pouvons effectuer l'approximation suivante comme
l'ont déja démontré d'une maniere plus générale [Gale et al., 1994]:

-k....,k
p (MCtXt\Ci) =  p(IIlj\Ci)
J

Chiraz Ben Othmane Zribi, Mohamed Ben Ahmed

Somme toute, nous calculons pour chaque candidat :

kijikp (IIlj\Ci) X p (Ci) avec :

Nombre de fois ou IIlj et Ci co-occurrent
Nombre d'occurrences de Ci

p(IIlj\Ci) =

Nombre d'occurrences de Ci

p(ci) = Nombre total de mots

4.1.1 Expérience :

Notre expérience se réalise en deux étapes : une étape d'apprentissage pendant laquelle on

collecte les probabilités pour les candidats et une étape de test qui consiste a utiliser ces
probabilités pour choisir entre les candidats.

— Etape d ’apprem‘issage

Cette étape consiste en la construction d'un dictionnaire de co-occurrences a partir d’un corpus
d’apprentissage. Les entrées de ce dictionnaire sont les candidats proposés par notre systeme
de correction pour les erreurs qu'il a détectés dans le texte de test. On met au compte de
chaque entrée sa probabilité d'apparition p(ci) dans le corpus d'apprentissage et l’ensemble de
ses mots co-occurrents avec leur probabilité de co-occurrence p(m,-\ci).

— Etape de test

Cette étape consiste a invoquer le systeme de correction sur un texte de test et a accéder pour
chaque candidat au dictionnaire des co-occurrences pour calculer la probabilité p(ci\Mctxt).
Seuls les candidats ayant une probabilité jugée satisfaisante (> 0,3 dans notre exemple, car le
corpus d'apprentissage n'est pas volumineux) sont choisis.

4.1.2 Résultats :

Textes d’apprentissage : corpus textuel utilisé précédemment de 5000 formes environ
Texte detest : une partie du corpus de 1763 formes dont 61 erronées

Couverture Précision Ambiguité Proposition
Initialement 100% 100 % 88,52 % 16,8 formes [min:l, max:160]
Mots en contexte 100% 93,44% 72,13% 10,33 formes [min:1, 1nax:47]

Tableau 2. Evaluation du correcteur orthographique : Mots en contexte.

L'utilisation des mots en contexte a permis de réduire le nombre de candidats d'environ 40% .
La précision a toutefois diminué, dans 6,6% des cas la bonne solution ne se trouve plus parmi
les propositions.

4.2 Mots du texte

L'idée de cette expérience est née a partir de comptages effectués sur le corpus textuel utilisé
précédemment et qui contient les erreurs réelles. Ces comptages nous ont informé qu'un radical
apparait en moyenne 5,6 fois et qu'un lemme apparait en moyenne 6,3 fois.

Ceci nous a amenés a déduire que dans un texte, les mots ont tendance a souvent se répéter.
Partant de cette idée, on pourrait penser que les mots corrections des mots err0ne’s dans un
texte peuvent se trouver dans le texte lui-meme. En conséquence, la recherche des candidats a

Le contexte au service de la correction des graphiesfautives arabes

la correction d'un mot erroné Va se faire désormais dans des dictionnaires construits a partir
des mots du texte qui contient les erreurs au lieu des dictionnaires généraux de la langue arabe
que nous avons utilisés précédemment.

Deux expériences ont été réalisées dans cette perspective: la premiere a porté sur l'utilisation
du dictionnaire des radicaux du texte et la seconde sur l'utilisation du dictionnaire de toutes les
formes ﬂéchies des radicaux du texte.

4.2.1 Expérience 1 : Dictionnaire des radicaux du texte

La correction du texte de test en utilisant le dictionnaire de tous les radicaux du texte (l 025
formes non voyellées) et le dictionnaire de tous les enclinomenes du texte (33 formes non
voyellées) nous donne les résultats suivants :

Couverture Précision Ambiguité Proposition

73,77% 97,61% 35,55% 2,36 formes [min:0, max:20]

Tableau 3. Utilisation du dictionnaire des radicaux du texte

Nous pouvons lire a partir de ce tableau que le taux d’ambigui'té a diminué de plus que la
moitié. Le nombre moyen de propositions a nettement diminué lui aussi, il est passé de 16,8
formes a environ 2,4 formes. Nous avons donc réussi a diminuer le nombre de propositions,
mais nous avons perdu en couverture et en precision. 74% des erreurs ont des propositions. Ce
qui nous parait insufﬁsant, il faut donc essayer d'amé1iorer ce résultat. Pour ce qui concerne la
precision, 98% est un chiffre acceptable.

4.2.2 Expérience 2 : Dictionnaire des formes ﬂéchies du texte

La deuxieme experience ressemble a la premiere sauf que nous avons utilisé a la place du
dictionnaire des radicaux du texte, un dictionnaire de toutes les formes ﬂéchies des radicaux du
texte (21 712 formes non voyellées).

La correction du texte précédent utilisant ce dictionnaire et le dictionnaire des enclinomenes
construit dans l'expérience précédente, nous donne les résultats suivants :

Couverture Précision Ambigu'1'té Proposition

86,75% 92% 58 % 4,88 formes [min:0, max:67]

Tableau 4. Utilisation du dictionnaire des formes ﬂéchies du texte

On remarque que la méthode utilisant le dictionnaire des radicaux permet de diminuer
d'avantage le nombre de propositions par rapport a celle du dictionnaire des formes ﬂéchies.
Cependant ce dernier donne de meilleurs résultats au niveau de la couverture. La précision
quant a elle a diminué en utilisant le dictionnaire des formes ﬂéchies, car quand on utilise ce
dernier, la chance de retrouver la bonne solution parmi les propositions diminue par rapport a
celle calculée pour le dictionnaire des radicaux.

4.3 Combinaison

Comme ultime experimentation, nous avons voulu combiner les deux expériences précédentes:
mots du texte et mots en contexte. Premierement, la recherche des candidats a été effectuée
dans le dictionnaire des formes ﬂéchies des mots du texte. A chaque candidat, nous avons
attribué une probabilité mesurant sa proximité avec le contexte du mot erroné qu'il corrige. Les
candidats peu plausibles ont été éliminés. Ainsi, nous avons obtenu 2,68 propositions en

Chiraz Ben Othmane Zribi, Mohamed Ben Ahmed

moyenne (cf. Tableau 5), et un taux de couverture de 82%. La deuxieme combinaison, que
nous jugeons meilleure, recherche les candidats dans le dictionnaire général et leur attribue
ensuite une probabilité contextuelle. Les candidats qui appartiennent au dictionnaire des formes
ﬂéchies des mots du texte sont pondérés par la note de 0,81 et les autres par 0,2. On procede
par la suite de la meme maniere que précédemment, en ne laissant que les candidats les plus
probables. Le nombre moyen de propositions obtenu dans ce cas est de 3,98 avec une
couverture de 100% et une précision de 88,52%.

Couverture Précision Ambigu'1'té Proposition
Combinaison 1 81,97% 86% 46% 2,68 formes [min:0, maX:20]
Combinaison 2 100% 88,52% 62,29% 3,98 formes [min:0, maX:20]

Tableau 5. Evaluation ﬁnale du correcteur orthographique

5. Conclusion

Dans ce travail nous nous sommes intéressés a réduire le nombre de candidats proposés par un
correcteur orthographique arabe. La méthode que nous avons proposée se base sur l'utilisation
du contexte lexical de l'erreur. Elle nous a permis de réduire considérablement le nombre de
propositions au prix d’une baisse du taux de couverture que nous jugeons acceptable. Faut-il
tenter de faire intervenir d’autres informations contextuelles telles que le contexte syntaxique
(contraintes grammaticales) par exemple ? Bien que nous n'ayons pas mis a contribution
d'informations syntaxiques pour éliminer encore plus de candidats superﬂus, nous avons
mesuré manuellement le role que pourraient avoir ces informations si elles venaient a étre
utilisées. Nous avons trouvé que les contraintes syntaxiques parviendraient a diminuer le
nombre de propositions d’environ 40%. Ce serait déja considérable mais il faut hélas compter
avec les inévitables ambigu'1'tés non résolues par un analyseur syntaxique automatique. ..

Références
Agirre E., Gojenola K., Sarasola K., Voutilainen A. (1998), "Towards a single proposal in spelling
correction", COLING-98, pp. 22-28.

Ben Othmane Zribi C. et Zribi A. (1999), "Algorithmes pour la correction orthographique en arabe
", TALN’ 9,9Corse, 12-17 juillet 1999.

Ben Othmane Zribi C. et Zribi A. (1999), "Algorithmes pour la correction orthographique en arabe
", TALN’ 9,9Corse, 12-17 juillet 1999.

Gale W., Church K. W., Yarowsky D. (1994), "Discrimination decisions for 100,000 dimensional
spaces", In Current Issues in Computational Linguistics: In Honour of Don Walker, pages 429-
450. Kluwer Academic Publishers.

Kukich K. (1992), "Techniques for automatically correcting words in text". In ACM Computing
Surveys, Vol.24, N.4, pp.377-439

Oﬂazer K. (1994), "Spelling correction in agglutinative languages", in Proceedings of the 4th ACL
Conference on Applied Natural Language Processing, Stuttgart, Germany.

Yarowsky D. (1994), "Decision lists for lexical ambiguity resolution: Application to Accent
Restoration in Spanich and French", ACL’ 9,4pp. 88-95.

1 D'aprés 4.2.2, dans 80% des cas la bonne solution appartient au dict. des formes ﬂéchies des mots du texte

