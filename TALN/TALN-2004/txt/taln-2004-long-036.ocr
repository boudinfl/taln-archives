TALN 2004, Fés, 19-21 avn'12004

Les Grammaires a Concaténation d’Inter'valles (RCG)
comme formalisme grammatical pour la linguistique

Benoit Sagot (1,2) et Pierre Boullier (1)
(1) Projet ATOLL — INRIA
Domaine de Voluceau, B.P. 105, 78153 Le Chesnay Cedex, France
{benoit.sagot;pierre.boullier}@inria.fr
(2) TALaNa/Lattice — Université Paris 7
2 place Jussieu, 75251 Paris Cedex 05, France

Résumé - Abstract

Le but de cet article est de montrer pourquoi les Grammaires a Concaténation d’Intervalles
(Range Concatenation Grammars, ou RCG) sont un formalisme particulierement bien adapte’ a
la description du langage naturel. Nous expliquons d’abord que la puissance nécessaire pour de’—
crire le langage naturel est celle de PTIME. Ensuite, parmi les formalismes grammaticaux ayant
cette puissance d’expression, nous justiﬁons le choix des RCG. Enﬁn, apres un apergu de leur
déﬁnition et de leurs propriétés, nous montrons comment leur utilisation comme grammaires
linguistiques permet de traiter des phénomenes syntagmatiques complexes, de re’aliser simul-
tanément l’analyse syntaxique et la vériﬁcation des diverses contraintes (morphosyntaxiques,
sémantique lexicale), et de construire dynamiquement des grammaires linguistiques modulaires.

The aim of this paper is to show why Range Concatenation Grammars (RCG) are a formalism
particularly suitable to describe natural language. We ﬁrst explain that the power necessary to
describe natural language is that of PTIME. Then, among grammatical formalisms that have this
expressing power, we justify the choice of RCGs. Finally, after an overview of their deﬁnition
and properties, we show how their use as linguistic grammars makes it possible to deal with
complex syntactic phenomena, to achieve simultaneously both syntactic parsing and constraints
checking (e.g., morphosyntactic and/or lexical semantic constraints), and to build dynamically
modular linguistic grammars.

Mots-clefs — Keywords

Grammaires de réécriture, Grammaires Faiblement Contextuelles, complexite’ du langage natu-
rel, Grammaires a Concaténation d’Intervalles (RCG)

Rewriting Systems, Mildly Context—Sensitive Grammars, Complexity of Natural Language,
Range Concatenation Grammars (RCG)

Benoit Sagot, Pierre Boullier

1 La complexité du langage naturel

1.1 Les grammaires faiblement contextuelles (MCS)

La puissance formelle permettant de de’ﬁnir la syntaxe du langage naturel fait encore l’objet
de discussions. 11 a été de’montre’ par (Schieber, 1985) que les Grammaires Non—Contextuelles
(CFG) sont insufﬁsantes pour décrire certains phe’nomenes linguistiques. De ce fait, (Joshi,
1985) a introduit une classe de grammaires a la puissance formelle légerement supe’rieure a
celle des CFG : il s’agit des grammaires faiblement contextuelles (mildly conteXt—sensitiVe, ou
MCS). Encore aujourd’hui, on considere souvent que les grammaires MCS ont la puissance
adéquate pour décrire le langage naturel. Elles sont de’ﬁnies par les proprie’tés suivantes :
MCS1. les langages MCS contiennent strictement les Langages Non—ConteXtuels,

MCS2. les langages MCS peuvent étre analyse’s en temps polynomial,

MCS3. les langages MCS doivent reconnaitre certains langages a dépendances complexes,

comme {a"b"c"}, {a"b"‘c"d"‘} ou le langage 2—copy,
MCS4. les langages MCS Vériﬁent la Proprie’té de Croissance Constante (ci—apres CGP)1.

Les grammaires MCS proposées aujourd’hui pour l’analyse linguistique sont d’une part les
Grammaires d’Arbres Adjoints (TAG) et les grammaires qui lui sont faiblement équivalentes,
et d’autre part, avec un pouvoir d’eXpression plus grand, les Systemes de Réécriture Linéaire
Non—ConteXtuels (LCFRS) et ses divers e’quiValents2. A notre connaissance, aucun formalisme
grammatical MCS n’a e’té propose’ qui soit strictement plus puissant que ceux qui rentrent dans
le cadre des LCFRS, bien qu’il existe des langages se rangeant strictement dans cet intervalle.

1.2 Nombres chinois et génitifs en géorgien ancien

ll existe dans certaines langues des constructions sporadiques qui ne sont pas analysables par
des grammaires MCS car elles ne respectent pas la CGP (condition MCS4). Classiquement,
il en est ainsi des nombres chinois (Radzinski, 1991) et du génitif en géorgien ancien3 (Mi-
chaelis et Kracht, 1996). En revanche, les Grammaires Non—ConteXtuelles Paralleles Multiples
(PMCFG) introduites par (Kaji et al., 1992) couvrent ces deux cas tout en étant strictement
moins puissantes que les formalismes couvrant tout PTIME (Groenink, 1996).

Naturellement, on pourrait conside’rer ces cas comme des cas marginaux dont il n’est pas ne'-
cessairement souhaitable de pouvoir rendre compte. En particulier, dans le cas des nombres
chinois, il peut étre objecte’ (Radzinski, 1991) que les contraintes qui font que la CGP n’est pas
respecte’e pourraient ne pas étre de nature linguistique, mais étre issues des proprie’tés mathe’—
matiques des objets qu’il dénote. Par ailleurs, il serait satisfaisant de disposer d’une grammaire
pour le géorgien ancien permettant un nombre arbitraire de génitifs empilés, mais il n’est pas
toujours considére’ que cela soit indispensable (Kallmeyer, 1997). Cependant, au moins deux
autres phe’nomenes, bien moins sporadiques, mettent en cause l’idée selon laquelle les langages
MCS sufﬁsent au traitement des langues. ll s’agit des exemples bien connus que sont le «scram-
bling» et les constructions coordonne’es a Verbes multiples.

1Un lan a e vériﬁe la CGP our Constant Growth Pro ert si, lors ue l’on ordonne ar taille croissante les
8 8 P Y ‘I P
chaines du langage, on peut majorer la différence entre les longueurs de deux chaines consécutives.
2Comme les TAG Multi-Composants (MC-TAG) ou les Grammaires Minimalistes (MG)
3Les auteurs cités montrent que le génitif en géorgien ancien n’est pas semi-linéaire. En réalité le génitif en
géorgien ancien, pouvant étre réduit a {alb aggb . . . akgk‘1b}, ne respecte meme pas la CGP, ce qui est plus fort.

Les RCG comme formalisme grammatical pour la Iinguistique

1.3 Scrambling en allemand et coordonnées a Verbes multiples en néer-
landais

Le scrambling en allemand4 peut étre décrit de la fagon suivante : dans une subordonnée com-
prenant des complétives, les compléments des différents Verbes sont placés entre le sujet du
Verbe principal et les Verbes. Les Verbes sont alors généralement ordonnés du plus enchasse’ au
Verbe principal, mais les compléments sont dans un ordre quelconque (on trouvera des exemples
dans (Becker et al., 1991)). Il est montre’ par (Boullier, 1999b) que le langage utilise’ par (Be-
cker et al., 1992) pour modéliser le scrambling est insufﬁsant, et utilise un langage plus Vaste
qu’il appelle SCR5 Ce langage est au—dela de la puissance des TAG (Becker et al., 1991) et
méme de celle des LCFRS (Becker et al., 1992). ll semble pourtant Vériﬁer la CGP. Cependant,
comme indiqué plus haut, aucun formalisme grammatical n’a été propose’ jusqu’a présent qui
soit simultanément MCS tout en ayant une puissance strictement plus grande que les LCFRS.
ll semble donc raisonnable de chercher un formalisme grammatical qui ne soit pas MCS pour
décrire le scrambling en allemandé.

Les constructions coordonnées a Verbes multiples en néerlandais sont analysées par (Groenink,
1996) : il exhibe une classe d’eXemples 01 non exprimables dans le cadre des LCFRS7, qui
regroupe des exemples ayant un nombre de Verbes arbitraire, ce qui nécessite une argumentation
sur la pertinence de cet argument (cf. ci—dessous). 11 a été prouvé par la suite qu’elle n’était
pas méme semi—line’aire (Michaelis et Kracht, 1996). Cependant, bien qu’une PMCFG puisse
analyser cette classe d’eXemples, (Groenink, 1996) montre qu’on peut l’étendre a une classe
plus large 02, encore moins acceptable linguistiquement que C1, que méme les PMCFG, qui

subsument strictement les LCFRS et ne respectent pas la CGP, ne peuvent de’crire8.

1.4 La puissance nécessaire pour décrire le langage naturel est PT IME

Méme en rejetant la classe C2 d’eXemples du néerlandais, les exemples ci—dessus semblent
indiquer que les formalismes MCS ne sufﬁsent pas a décrire le langage naturel9. Toutefois,
les trois premieres conditions MCS semblent devoir étre Vériﬁées par les langues naturelles :
MCS1 a été justiﬁée plus haut, MCS3 a été explicitement introduite pour que les grammaires
MCS puissent traiter divers phénoménes linguistiques courants, et MCS2 est justiﬁée au moins
par les besoins pratiques de complexite’. Seule MCS4 peut donc étre Violée : la modélisation du
langage naturel passe par des grammaires ne Vériﬁant pas la CGP.

4Ce phénoméne existe dans d’autres langues, comme le japonais.

511 s’agit approximativement du langage suivant 2 soit un alphabet de terminaux partitionné en {n1, . . . ,nl}
et {v1, . . . , vm} et muni d’une correspondance h indiquant, si 2; = h(n), que 11 est un argument de 2;. Une suite
de terminaux est reconnue par SCR si et seulement si elle est de la forme -/r(n1, . . . , n,,)v1 . . . vq oil 7r est une
permutation, les 11,- et les vj sont deux a deux distincts, et pour tout 11,- i1 existe un et un seul 21,- tel que  = 113-.

6On peut noter des ici que le fait qu’un tel formalisme ne serait peut-étre pas de la puissance minimale pour
exprimer SCR n’est pas nécessairement un probléme. En effet, si l’on peut exhiber des grammaires analysables
sans véritable surcoﬁt par rapport aux grammaires MCS mais permettant d’exprimer simplement et élégamment le
scrambling, rien ne justiﬁe dans la pratique la quéte de la plus petite grammaire possible incluant SCR.

711 s’agit de son fragment (1.14) répété en (3.39).

811 s’a it du cas oil l’on ne se restreint as a un seul Verbe a montée a l’inﬁnitif armi les Verbes multi les

8 P P P
coordonnés (cf. paragraphe 3.3 de (Groenink, 1996)).

9Notons a cet égard que si l’on accepte la classe d’exemples C2, l’insufﬁsance des PMCFG a les traiter ne
prouve rien de plus 2 on pourrait imaginer trouver un formalisme grammatical agréable subsumant les grammaires
MCS mais non comparable avec les PMCFG.

Benoit Sagot, Pierre Boullier

Toutefois, la problématique de la distinction compétence/performance ne rend pas la chose si
simple, par exemple pour la classe d’eXemples C1 du néerlandais. De fait, (Manaster—Ramer,
1987) indique que le re’sultat dépend du point de Vue que l’on adopte sur ce que l’on inclut
dans la langue et ce que l’on en exclut. Toutefois, et parallelement a la note 6 du paragraphe
1.3, il nous semble artiﬁciel de Vouloir chercher la grammaire minimale couvrant une langue
donne’e, en allant jusqu’a s’autoriser a borner ex abrupto certains parametres sans justiﬁcation
linguistique claire, surtout s’il existe des classes de grammaires permettant de s’affranchir de
telles limitations sans pour autant entrainer un surcoﬁt signiﬁcatif.

La problématique compétence/performance est encore plus forte concernant l’insufﬁsance des
PMCFG pour décrire la classe C2. En re’alité, on peut penser qu’une telle classe d’eXemples,
peu convaincante en termes de performance mais acceptable (quoiqu’a la marge) en termes de
compétence, est plus ou moins du niveau maximal de complexite’ de la langue concerne’e, lequel
est disponible mais presque jamais utilise’ dans une grammaire de la langue. Ainsi, un forma-
lisme grammatical permettant de traiter le néerlandais devrait avoir la puissance nécessaire au
traitement de C2. Mais il devrait pour ce faire exprimer sa pleine puissance, utilise’e tres rare-
ment dans une grammaire complete du néerlandais. En poursuivant ce raisonnement, et puisque
les PMCFG ne sufﬁsent pas, on ne peut que conclure que le niveau de complexite’ requis est le
seul autre niveau imme’diatement supérieur a celui des grammaires MCS pour lequel il existe
des formalismes grammaticaux aux bonnes proprie’tés, a savoir tout PTIME (cf. partie 2).

Par ailleurs, nous n’aVons parle’ jusqu’a présent que de puissance générative faible. Or si l’équi—
Valence faible entre le néerlandais et un langage analysable avec une PMCFG n’est pas certaine,
l’«équiValence forte» entre structures linguistiques et analyse par une PMCFG, que l’on sou-
haite évidemment, est encore plus douteuse. Cela renforce l’intuition selon laquelle les gram-
maires adéquates a l’analyse des langues ne respectent pas la CGP, ne sont pas meme eXpri—
mables par une PMCFG, et nécessitent un formalisme grammatical couvrant tout PTIME.

2 Les Grammaires a Concaténation d’Intervalles (RCG)

2.1 Pourquoi les RCG

Les classes de grammaires proposées dans la littérature ne Vériﬁant pas la CGP“) mais satisfai—
sant les trois autres conditions MCS1, MCS2 et MCS3 ne sont pas en nombre tres important“.
Dans la plupart des cas, il s’agit de classes de grammaires couvrant exactement PTIME. Cer-
tains sont moins puissants, comme les PMCFG, mais on a Vu leur insufﬁsance dans la partie 1.
D’autres formalismes non—MCS ont été proposés qui ne sont pas analysables en temps polyno-

1°Les véritables conséquences de la violation de CGP sur la nature d’une classe de grammaire sont peu claires.
Toutefois, d’une part pour des raisons intuitives et d’autre part a travers les classes de grammaires proposées a
ce jour et ne respectant pas CGP, il semble qu’il y ait un lien entre le respect de CGP et le fait d’ étre «linéaire»
au sens des LMG ou des RCG, c’est-a-dire le fait que deux non-terminaux de l’analyse ne peuvent avoir dans
leurs «portées» respectives, quoi que cela puisse dire dans un formalisme donné, un terminal en commun 2 le non-
respect de CGP passerait par une certaine f orme de non-linéarité se traduisant par l’utilisation multiple de mémes
terminaux au cours de l’analyse. 11 en est ainsi des PMCFG, des LMG, des RCG, et des MC-TAGS a noeuds
partagés (restreintes ou non) proposés par (Kallmeyer, 2003). A vrai dire, la condition CGP doit peut-étre étre
remplacée dans ces considérations par celle de semi-linéarité. Mais dans tous les cas, si ces réﬂexions s’avérent
justiﬁées, elles indiqueraient la nécessité de grammaires non-linéaires pour traiter le langage naturel.

“Il est a noter que la condition MCS3, qui est imposée par divers phénoménes linguistiques, rend inadéquats des
formalismes comme les V-TAGs (Rambow, 1994) ou les D-Tree Substitution Grammars (Rambow et al., 2001).

Les RCG comme formalisme grammatical pour la Iinguistique

mial, qu’ils subsument PTIME ou non, mais ils ne sont pas satisfaisants en termes de complexite
(condition MCS2). Parmi les formalismes couvrant exactement PTIME, on trouve en particu-
lier la Variante dite «simple» des Litteral Movement Grammars (sLMG) introduites par (Groe-
nink, 1996) et les Grammaires a Concatenation d’InterValles (Range Concatenation Grammars,
ci—apres RCGs) introduites par (Boullier, 2000a). Tout en restant polynomiales (MCS2), elles
peuvent traiter les cas presentes en partie 1 (Groenink, 1996; Boullier, 1999a; Boullier, 1999b).

Parmi ces deux formalismes, les RCG deﬁnissent des predicats sur des intervalles de la chaine
d’entree, alors que les sLMG considerent des sous—chaines. Or il semble plus naturel d’un point
de Vue linguistique de considerer non pas des sous—chaines, mais plutet des intervalles de la
chaine d’entree, en particulier lorsqu’un meme mot (i.e. un terminal) est present plus d’une fois
dans la phrase (i.e. la chaine)”. C’est encore plus Vrai si l’on a moins de terminaux que de
mots de la langue, choix raisonnable mais en realite non necessaire moyennant des methodes
appropriees (cf. Partie 3). En outre, il est de plus en plus clair que la description du langage
naturel necessite la prise en compte d’informations de nature topologique (Gerdes et Kahane,
2001; Clement et al., 2002). Or il est facile d’encoder de telles informations dans une RCG
qui manipule des intervalles, et donc des positions dans la chaine, mais plus difﬁcile dans une

sLMG qui ne manipule que des sous—chaines13.

2.2 Les RCG : exemple et propriétés

Pour une deﬁnition formelle des RCG, leur complexite exacte d’analyse, et la demonstration de
leurs proprietes, on se reportera par exemple a (Boullier, 2000a). Nous nous contenterons ici de
presenter sur un cas particulier le fonctionnement des RCG.

Une RCG se presente sous la forme de clauses, qui ont la forme P —> P1 . . . P”, ou P et les
P,- sont des prédicats (P est le predicat de partie gauche, les P,- sont ceux de partie droite).
Une telle clause s’interprete ainsi : «si les predicats P1 a P” sont Veriﬁes, alors le predicat P
l’est aussi». Les predicats ont un ou plusieurs arguments. Chaque argument est la concatenation
d’une ou plusieurs Variables, chaque Variable representant un intervalle de la chaine (et pas
une sous—chaine) ou un terminal (dont le nom commence par une minuscule ou un guillemet).
La concatenation de plusieurs Variables denote donc aussi un intervalle, mais les intervalles
concatenes doivent etre successifs. Une clause comme P(X Y) —> P1 (X ) P2(X Y) P3(X , Y)
peut donc se comprendre comme «le predicat P appele sur l’interValle denote par X Y de la
chaine d’entree peut etre remplace par le predicat P1 applique a l’interValle X, le predicat P2
a l’interValle X Y et le predicat P3 au couple (X , Y)» (on dit que les predicats de partie droite
sont appelés). Le predicat de partie gauche de la premiere clause est l’aXiome, et prend en entree
un intervalle couvrant toute la chaine. Un predicat est Veriﬁe sur un intervalle si et seulement si
l’on peut en deriver la chaine Vide a l’issue de remplacements successifs. Une chaine est dans le
langage si et seulement si le predicat axiome est Veriﬁe sur l’interValle couvrant toute la chaine.

12La difference fondamentale entre les RCG et les sLMG est bien celle qu’il y a entre traiter des intervalles et
traiter des sous-chaines. Or il est tres facile de traiter en RCG toutes les occurrences d’une sous-chaine qui se repete,
puisqu’il sufﬁt de considerer deux des intervalles concemes, de veriﬁer qu’ils correspondent a deux sous-chaines
egales, puis de traiter ces deux chaines. En revanche, distinguer deux sous-chaines egales correspondant a deux
intervalles distincts est basique en RCG mais delicat en sLMG, puisque dans le pire des cas il f aut utiliser la chaine
entiere pour distinguer deux occurrences de la meme sous-chaine. Donc meme independamment de considerations
linguistiques, les RCG semblent plus facile d’emploi que les sLMG.

13L’utilisation des RCG pour ecrire des grammaires topologiques est une direction de recherche tres promet-
teuse, et f era probablement l’obj et de publications ulterieures.

Benoit Sagot, Pierre Boullier

Nous illustrerons ceci par la RCG suivante (Boullier, 2003) qui reconnait le langage 3—copy
{www|w E {a, b}*} (hors de portee des TAG), trivialement extensible aux langages k—copy :

S'(XYZ) —> A(X,Y,Z)
A(aX',aY’,aZ’) —> A(X’,Y’,Z’)
A(bX’, bY’, bZ’) —> A(X’,Y’, Z’)

A(s, 5, 5) —> 5

La premiere clause a pour partie gauche l’axiome, qui prend donc comme argument un inter-

valle couvrant toute la chaine. ll decoupe cet intervalle en 3 sous—interValles, qui sont nommes

respectivement X, Y et Z, qui, si la chaine est Valide, seront les intervalles (distincts) corres-
pondant aux trois sous—chaines identiques. Puisque c’est la seule clause ou S’ intervient, on est
force de remplacer l’axiome par A(X, Y, Z A ce stade, il y a quatre possibilites :

— ou bien la deuxieme clause peut s’appliquer, c’est—a—dire que chacun des trois intervalles
commence par le terminal a, et alors on remplace A(X, Y, Z), c’est—a—dire A(aX’ , aY’, aZ’),
par A(X’, Y’, Z’ On a ainsi «consomme» un a a l’initiale de chaque intervalle (ceci est un
exemple du fait que l’analyse par une RCG n’est pas une analyse gauche—droite)14 ;

— ou bien la troisieme clause peut s’appliquer (meme situation mais avec le terminal b) ;

— ou bien les trois intervalles sont Vides (borne inferieure et borne superieure sont egales), et
on peut remplacer A(z—:, z—:, 5) par z—:, ce qui signiﬁe que la chaine initiale est dans le langage;

— ou bien aucune clause ne s’applique, et z—: ne peut etre derive : la chaine n’est pas reconnue.

Si l’on est dans l’un des deux premiers cas, on recommence jusqu’au succes ou a l’echec, en

consommant en parallele a chaque fois un terminal a l’initiale de chacun des trois intervalles, a

condition qu’ils designent la meme chaine. Si on reussit a reduire les intervalles a des intervalles

Vides, c’est que les terminaux des intervalles initiaux se correspondaient correctement.

Les RCG permettent d’appeler la negation d’un predicat : on note par exemple A(X, Y) la
negation de A(X, Y)). Un tel appel negatif est Veriﬁe si et seulement si son appel positif echoue
(Boullier, 2000a), ce qui implique d’interdire les grammaires inconsistantes, c’est—a—dire les
grammaires qui peuvent generer des derivations ou un predicat peut deriver sa propre negation.

Il est prouve par (Boullier, 2000a) qu’une RCG peut etre analysee en un temps polynomial,
l’exposant dependant de la grammaire (c’est la somme du nombre maximum d’arguments d’un
predicat et du nombre maximum de Variables presentes dans une partie gauche). Par ailleurs,
Boullier a developpe un analyseur pour les RCG qui a precisement cette complexite.

Enﬁn, (Boullier, 2000a) montre que les RCG beneﬁcient de proprietes tres interessantes : sans
modiﬁer les grammaires en jeu, et par le seul ajout d’une a deux clauses, on peut construire
a partir de deux RCG les grammaires deﬁnissant l’union des deux langages correspondants,
leur concatenation, leur intersection, l’iteration de Kleene de l’un d’eux, et le complement de
l’un d’eux. Ceci peut etre resume, en reprenant la deﬁnition de la modularite’ donnee dans
(Boullier, 2000a), en disant que les RCG sont modulaires par rapport a ces cinq operateurs.
De plus, la non—linearite des RCG permet de creer des grammaires melant differents points
de Vue sur une meme chaine. Ces deux proprietes sont tres interessantes pour la linguistique.
D’une part, la modularite permet d’imaginer des bibliotheques de modules linguistiques dans
lesquelles on pourrait piocher pour construire des grammaires d’une langue, introduisant un a un
divers phenomenes15. D’autre part, la non—linearite permet l’ecriture de grammaires apportant

“On notera que l’utilisation d’un nom de variable X’ different de X est inutile, mais facilite l’explication.

15Dans (Boullier, 2003), l’exemple du paradigme «régle generale avec exceptions» est explicite 2 pour construire
une RCG reconnaissant un langage L‘, deﬁni 51 partir de trois autres langages R, S, 8 par L‘, = R (1 3 U 8, oil R
represente le langage ou la régle generale est toujours vraie, 8 le sous-ensemble de R qui est :1 rejeter, et 8 le

Les RCG comme formalisme grammatical pour la linguistique

simultanément divers points de Vue sur la phrase (syntaxe, morphologie, sémantique lexicale).
La partie suivante montre sur quelques exemples ce que permettent effectivement les RCG.

3 RCG pour la linguistique

3.1 Phénoménes syntaxiques complexes

Les phénomenes les plus difﬁciles rencontre’s dans les langues, parmi lesquels ceux cite’s en
partie 1, peuvent tous étre analyse’s correctement des lors que l’on dispose de la puissance des
RCG, i.e. de tout PTIME. De fait, une RCG pour l’analyse des nombres chinois est propose’e
dans (Boullier, 1999b), de meme qu’une RCG pour le «scrambling» en allemand tel que déﬁni
en 2.2. De plus, (Kallmeyer, 2003) montre que le formalisme qu’elle déﬁnit spéciﬁquement pour
analyser correctement ce phénomene est tel qu’on peut facilement convertir une de ses gram-
maires en une RCG. Par ailleurs, le génitif en géorgien ancien est fondamentalement similaire
aux nombres chinois, et peut étre traité par une grammaire similaire. Enﬁn, les constructions co-
ordonne’es a Verbes multiples en néerlandais peuvent étre analysé ade’quatement par une sLMG,
comme le montre (Groenink, 1996), et donc e’galement par une RCG aux analyses similaires.

En plus du cote’ théorique de la puissance d’expression des RCG, leur non—line’arite’ permet
de disposer de différents points de Vue sur une meme chaine ou sous—chaine. Une premiere
illustration de ce phénomene, en se restreignant a la syntaxe, est fourni par le phénomene des
coordinations a ellipses. Soit par exemple la phrase : «Luc aime Marie et Jean Anne.» On peut
la gloser par «Luc aime Marie et Jean aime Anne». Autrement dit, le Verbe «aime» est «sous-
entendu» dans le deuxieme membre de phrase, ce qui peut étre interpre’te’ comme le fait qu’il
est utilise’ deux fois16. La RCG suivante, fournit une analyse convenable de cette phrase :

PC'OORD(S1 V O1”et” S2 02) —> P(S1, V, 01) P(S2, V, 02) V(V)
%Une phrase se découpe en un sujet, un Verbe et un objet qui doivent vériﬁer P, un "et", et
%un autre sujet et un autre objet qui, avec le Verbe, doivent vériﬁer P aussi

P(S,V,O) —> SUJ(S, V) OBJ(O, V)
%Trois intervalles vériﬁent P si le premier est sujet du second, et le troisiéme objet du second
SUJ(S, V) —> G'N(S) AC'C'_G'_N(S, V)

%Le sujet d’un Verbe est un groupe nominal et s’accorde en genre et en nombre avec lui
OBJ(O, V) G'N(O) %L’objet d’un Verbe est un groupe nominal
GN (X) —> N P(X ) %Un nom propre est un groupe nominal

i

AC'C'_G'_N(”Luc” , ”aime”) —> 5 %"Luc" est accordé en genre et nombre avec "aime"
AC'C'_G'_N(” Jean” , ”aime”) —> 5 %"Jean" est accordé en genre et nombre avec "aime"
V(aime) —> 5 %"aime" est un Verbe

NP (”Luc”) —> 5 %"Luc" est un nom propre

N P (” M a7"ie”) —> 5 %"Marie" est un nom propre

NP (” Jean”) —> 5 %"Jean" est un nom propre

N P (” Anne”) —> 5 %"Anne" est un nom propre

langage des exceptions par lequel il faut le remplacer, il sufﬁt de rajouter les clauses L(X) —> R(X) S (X) et
L(X) —> E(X), on l’on a nommé l’axiome d’un langage par la lettre majuscule droite correspondant a son nom.

16L’analyse linguistique de ce phénoméne est bien plus complexe, car d’une part d’autres constituants que le
Verbe peuvent étre élidés (mais pas tous), et d’autre part le Verbe «sous-entendu» n’a que certaines des propriétés
du Verbe plein (ainsi la personne dans «Je mange une pomme et Jean une poire»). Mais cet exemple est la pour
montrer comment peut étre utilisée la non-linéarité des RCG pour la description de la syntaxe, et non comment on
doit analyser en RCG les coordinations a ellipse de maniére linguistiquement cohérente.

Benoit Sagot, Pierre Boullier

Cette grammaire regroupe donc des informations que d’autres formalismes rejettent au—dela
des grammaires de réécriture qui leur sont sous—jacentes. C’est le cas de la nature des relations
syntaxiques (sujet, objet) et de l’accord (meme si par souci de simpliﬁcation ce dernier est
traité de facon tres rudimentaire). C’est tout l’inte’rét des RCG que de pouvoir dire plusieurs
choses sur le meme intervalle de la chaine, contrairement a d’autres formalismes (comme les
TAG ou les LFG), qui sont contraints de ne conserver qu’une seule de ces informations, celle
qui est la plus structurante (le plus souvent les relations de constituance), et de rejeter dans des
décorations (traits) les autres informations (nature de la relation, accord, etc.). L’inconVe’nient
majeur d’une telle approche est que l’analyse perd alors dans le cas géne’ral les bonnes proprie’tés
qu’aVait la grammaire de réécriture sous—jacente (une CFG en LFG, par exemple) et peut devenir
exponentielle. De plus, dans la plupart des cas, l’analyse se fait d’abord sans tenir compte des
décorations, générant un tres grand nombre d’analyses possibles, qui sont ensuite ﬁltre’es a l’aide
des traits. A l’inVerse, les RCG peuvent traiter toutes les informations simultanément, rejetant
des le début les analyses non Valides quelle qu’en soit la raison.

3.2 Interface syntaxe-sémantique intégrée £1 la grammaire

La non—line’arite’ des RCG permet non seulement l’utilisation multiple d’un meme intervalle
de la chaine pour exprimer des relations syntaxiques, mais aussi d’aVoir des points de Vue
Véritablement diffe’rents sur des intervalles, et en particulier pour combiner la syntaxe et la
sémantique (on se restreint ici a la sémantique lexicale, c’est—a—dire en gros aux cadres de sous-
catégorisation et aux restrictions de sélection). C’est une géne’ralisation de la remarque ﬁnale
du paragraphe précédent : non seulement on peut écrire en RCG une grammaire gérant toute la
syntaxe, y compris (entre autres) la nature des relations syntaxiques et les regles d’accord, mais
en plus on peut faire en sorte que la RCG elle—méme Vériﬁe au cours de l’analyse les contraintes
de sous—catégorisation et de restriction de selection. 11 sufﬁt pour cela de rajouter des prédicats
traitant des relations de sémantique lexicale, assortis de prédicats plagant les terminaux dans
une hiérarchie de types. Les interactions entre syntaxe et sémantique lexicale, comme la nature
des syntagmes re’alisant l’agent et le patient d’un Verbe transitif selon le mode (actif ou passif)
sont alors facilement représentables. Nous avons écrit et Vériﬁé des grammaires jouets sur ce
principe. C’est un progres sur les formalismes qui n’utilisent ces contraintes que pour ﬁltrer des
analyses souvent nombreuses fournies par une premiere e’tape purement syntaxique.

3.3 RCG linguistiques modulaires dynamiques

La grammaire présente’e en 3.1 fait le choix d’associer a chaque entre’e lexicale un symbole
terminal. Cependant, ce choix mene a des grammaires excessivement Volumineuses, a la fois
en termes de nombre de terminaux (au moins un par forme du lexique) et en termes de nombre
de clauses (plusieurs clauses pour chaque forme, ne serait—ce que pour traiter ses caracte’ris—
tiques morphosyntaxiques et de sémantique lexicale). C’est la que les proprie’tés de cloture des
RCG interviennent. En effet, elles permettent d’associer a chaque forme une pseudo—grammaire
(une grammaire sans axiome) qui contient toutes les proprie’tés qui lui sont associées, puis,
pour une phrase donne’e, de constituer dynamiquement la grammaire qui pourra l’analyser en
regroupant sans les modiﬁer les pseudo—grammaires associées a chaque mot de la phrase17

“Plus précisément, £1 chaque mot susceptible d’étre dans la phrase, pour traiter les homonymes et d’autres
phénoménes comme les locutions ou les mots composés.

Les RCG comme formalisme grammatical pour la Iinguistique

avec une grammaire—noyau. De plus, rien n’interdit que ces pseudo—grammaires, ainsi que
la grammaire—noyau, soient pre—compilees statiquement puis «linkees» dynamiquement pour
construire tres efﬁcacement a la Volee des grammaires locales d’analyse, par exemple phrase
par phrase. De fait, nous avons implemente un tel mecanisme pour generer des grammaires
avec une grammaire—noyau reduite et un leXique—jouet18.

L’analyseur developpe par Boullier permet de compiler des RCG d’une facon qui rende l’ana—
lyse tres efﬁcace. De plus, il permet l’appel de predicats externes au sein des RCG. Il est donc
possible dans ce contexte de faire appel pour Veriﬁer certains predicats a d’autres mecanismes
que des clauses RCG. Naturellement, ceci n’a d’interet en termes de complexite que si l’on se
limite a des mecanismes exploitables en temps polynomial, et qui dont seraient exprimables a
l’aide de RCG (il en est ainsi par exemple de certaines Logiques de Description). On peut envi-
sager de disposer d’une ontologie (ou une base de connaissances) pour Veriﬁer certains predi-
cats de semantique lexicale (du type CON C'RET(X ) —> COM ESTI BLE (X )), Voire pour
construire dynamiquement les pseudo—grammaires associees a chaque mot a l’aide de clauses
sous—speciﬁees et de proprietes heritees au sein de l’ontologie.

Pour la construction d’une grammaire «en Vrai grandeur», les proprietes des RCG sont a nou-
Veau tres interessantes. En effet, un Volume de travail considerable a ete fourni depuis de nom-
breuses annees pour le developpement de grammaires a large couverture dans d’autres for-
malismes. Or (Boullier, 1999a; Boullier, 2000b) montrent que l’on peut convertir le «sque-
lette syntaxique» (sans les traits) de ces grammaires en des RCG equivalentes manipulant les
memes concepts linguistiques sous—jacents. Dans le cas general, la conversion automatique des
contraintes sur les traits (equations fonctionnelles en LFG, par exemple) est de plus tout a fait
envisageable, si elles sont de complexite polynomiale. Enﬁn, comme indique plus haut, les RCG
obtenues sont analysables avec la meme complexite qu’aVec les analyseurs dedies des forma-
lismes sources. Tout ceci autorise le developpement de la grammaire—noyau non pas a partir de
zero, mais a partir de la conversion en une RCG RC'G;,ase d’une grammaire existante Gbase, et
en la completant (on peut penser par exemple a une TAG ou a une MCTAG). Cette completion
peut se faire soit en modiﬁant la grammaire convertie RC'G;,ase, soit, proﬁtant ainsi de la cloture
des RCG par intersection, en ecrivant un axiome appelant d’une part l’aXiome de RC'G;,ase et
d’autre part, independamment, celui d’une RCG complementaire RCGCOWPZ (qui pourrait ap-
peler autant que necessaire l’aXiome de RC'G;,ase). Cette deuxieme solution, plus simple dans
un premier temps, est cependant moins generale. Elle a l’aVantage de permettre a la grammaire
source Gbase d’eVoluer de son cote et d’etre convertie regulierement en une nouvelle Version de
RC'G;,ase, sans que RCGCOWPZ n’aie besoin d’etre modiﬁee.

4 Conclusion

Un certain nombre de phenomenes linguistiques qui se rencontrent dans diverses langues in-
diquent que le pouvoir d’eXpression adequat pour la description du langage naturel est celui
couvrant PTIME. Parmi les formalismes satisfaisant ce critere, les Grammaires a Concatenation
d’InterValles (RCG) semblent bien les plus adaptees a une utilisation linguistique. De fait, nous
avons suggere comment quelques phenomenes, comme les contraintes topologiques, la coordi-

18On peut faire un paralléle entre ces pseudo-grammaires et les «supertags», et plus generalement avec toutes
les grammaires lexicalisées (ainsi LFG ou LTAG), tout en notant que la difference fondamentale avec ce qui se
passe dans ces f ormalismes est qu’ici ce ne sont pas des structures combinees par la grammaire ou des decorations
ajoutees a ces structures qui sont associees aux elements du lexique, mais bien des «morceaux de grammaire».

Benoit Sagot, Pierre Bou11ier

nation a ellipse, le «scrambling», ou l’interface entre syntaxe et sémantique lexicale, peuvent
étre traite’s de facon approprie’e avec les RCG. De plus, les proprie’tés des RCG permettent
l’écriture de grammaires modulaires, ouvrant ainsi la voie a des grammaires dynamiques, is-
sues d’une grammaire noyau et de pseudo—grammaires associées aux éléments du lexique, et
qui pourraient combiner entre autres les contraintes syntaxiques, morphologiques et de se’man—
tique lexicale. Enﬁn, la conversion aise’e et efﬁcace de TAG existantes permet d’envisager le
développement a relativement court terme de RCG linguistiques opérationnelles.

Références

BECKER T., JOSHI A., RAMBOW O. (1991), Long-distance scrambling and Tree Adjoining Grammars,
Actes de EACL-91, 21-26.

BECKER T., RAMBOW 0., NIV M. (1992), The derivational generative power of formal systems, or
scrambling is beyond LCFRS, Technical Report IRCS-92-38, University of Pennsylvania.

BOULLIER P. (1999a), On Multicomponent—TAG Parsing, Actes de T ALN-99, 321-326.

BOULLIER P. (1999b), Chinese Numbers, MIX, Scrambling and Range Concatenation Grammars, Actes
de EACL—99, 53-60.

BOULLIER P. (2000a), Range Concatenation Grammars, Actes de I WPT 2000, 53-64.

BOULLIER P. (2000b), On TAG parsing, T raitement automatique des langues, Vol. 41 (3), 761-793.
BOULLIER P. (2003), Counting with Range Concatenation Grammars, Theoretical Computer Science,
Vol. 293, 391-416.

CLEMENT L., GERDES K., KAHANE S. (2002), An LFG-type grammar for gerrnan based on the Topo-
logical Model, Actes de LF G ’02, 116-129.

GERDES K., KAHANE S. (2001), Word order in German : A formal dependency grammar using a topo-
logical hierarchy, Actes de ACL ’0I , 116-129.

GROENINK A. (1996), Mild Context-Sensitivity and tuple-based generalizations of Context-Free Gram-
mar, Actes de MoL 4, Linguistics and Philosophy, numéro spécial

JOSHI A. (1985), How much context-sensitivity is necessary for assigning structural descriptions : Tree
Adjoining Grammars, Natural Language Processing, Cambridge University Press, New-York.

KAJI Y., NAKANISHI R., SEKI H., KASAMI T. (1992), The Universal Recognition Problems for Parallel
Multiple Context-Free Grammars and for their Subclasses, IEI CE, Vol. E75-D(4), 499-508.
KALLMEYER L. (1997), Local Tree Description Grammars, Actes de MoL 5, 77-84.

KALLMEYER L. (2003), Tree-local Multicomponent Tree Adjoining Grammars with Shared Nodes,
rnanuscrit disponible a l’adresse http: / /talana . linguist . juss ieu . fr/~lkallmey/.
MANASTER-RAMER A. (1987), Dutch as a formal language, Linguistics and Philosophy, Vol. 10, 221-
246.

MICHAELIS J ., KRACHT M. (1996), Sernilinearity as a Syntactic Invariant, Actes de LACL ’96, Logical
Aspects of Computational Linguistics, Vol. 1328, 329-345.

RADZINSKI D. (1991), Chinese nurnber-names, Tree Adjoining Grammars, and Mild Context-
Sensitivity, Computational Linguistics, Vol. 17(3), 277-299.

RAMBOW O. (1994), Multiset-Valued Linear Index Grammars — Imposing Dominance Constraints on
Derivations, Actes de ACL ’94, 263-270.

RAMBOW O., VIJAY-SHANKER K., WEIR D. (2001), D-Tree Substitution Grammars, Computational
Linguistics, Vol. 27(1), 87-121.

SCHIEBER S. (1985), Evidence against the context-freeness of natural language, Linguistics and Philo-
sophy, Vol. 8, 333-343.

