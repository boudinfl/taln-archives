T ALN 2004, Session Poster, Fes, 19-21 avril 2004

Analogies dans les séquences : un solveur a états ﬁnis

Nicolas Stroppa et Francois Yvon
GET/ENST et LTCI, CNRS UMR 5141
46 rue Barrault — F-75 013 Paris

{stroppa,yvon}@enst.fr

Résumé - Abstract

L’ apprentissage par analogie se fonde sur un principe inférentiel potentiellement pertinent pour
le traitement des langues naturelles. L’utilisation de ce principe pour des taches d’analyse lin-
guistique présuppose toutefois une déﬁnition formelle de l’analogie entre séquences. Dans cet
article, nous proposons une telle déﬁnition et montrons qu’elle donne lieu a l’implantation ef-
ﬁcace d’un solveur d’e’quations analogiques sous la forme d’un transducteur ﬁni. Munis de
ces résultats, nous caractérisons empiriquement l’eXtension analogique de divers langages ﬁnis,
correspondant a des dictionnaires de quatre langues.

Analogical reasoning provides us with an inferential mecanism of potential interest for NLP
applications. An effective use of this process requires a formal deﬁnition of the notion of an
analogy between strings of symbols. In this paper, we propose such a deﬁnition, from which we
derive the implementation of a ﬁnite—state transducer solving analogical equations on sequences.
We ﬁnally present the results of an empirical study of the analogical extension of several ﬁnite
languages, corresponding to dictionnaries of four European languages.

Mots-clefs — Keywords

Apprentissage par Analogie, Automates ﬁnis
Analogical Learning, Finite—State Automaton

Nicolas Stroppa, Francois Yvon

1 Introduction

1.1 Analogie et TAL

L’apprentissage par analogie est une méthode d’inférence qui offre une alternative a la fois aux
méthodes a base de connaissance et aux modélisations probabilistes. Dans cette me’thode, la
connaissance linguistique n’est pas abstraite sous forme de regles ou de modele stochastique;
a l’inverse, elle demeure implicitement représentée dans le corpus (Daelemans, 1996), la gene’-
ralisation a de nouvelles données s’effectuant toujours dans un contexte déﬁni (Lepage, 1999).
Dans sa version “canonique”, l’analyse par analogie d’un objet ac lui associe une representation
f en deux temps :

— identiﬁcation d’un rapport de proportionnalité impliquant ac et 3 objets déja connus, b, c, et

d; on note cette relation as : b :2 c : d, signiﬁant que ac est it b ce que 0 est 61 d;
— construction d’une analyse f de ac par lransfert analogique, consistant a trouver f tel
que: f(w) I N?) =2 f(0) I f(d)-

Ce principe est intéressant a plus d’un titre : en premier lieu, il est régulierement utilise’ pour de’—
crire un certain nombre de phe’nomenes cognitifs ; dans le cadre de la linguistique traditionnelle,
il est invoque’ pour rendre compte de régularités linguistiques, en particulier morphologiques
(Matthews, 1972) ; son utilisation en traitement automatique des langues a donne’ des résultats
encourageants pour un certain nombre de taches telles que : l’analyse et la ge’nération mor-
phologique (Lepage, 1999; Pirrelli & Yvon, 1999a; Tanguy & Hathout, 2002) ; la conversion
orthographique—phonétique (Yvon, 1997; Yvon, 1999), ou encore la de’sambigu'1'sation seman-
tique (Federici et al., 1997). Ces expe’riences ont e’galement de’montre’ que l’induction analo-
gique permet de manipuler directement des données linguistiques sous une forme plus “natu-
relle” (Pirrelli & Yvon, 1999b; Hathout, 2002). Enﬁn, elle se révele fournir un cadre permettant
d’intégrer des connaissances hétérogenes issues de sources différentes.

1.2 Analogie dans les séquences

Utiliser l’analogie en TAL presuppose toutefois de de’ﬁnir cette notion pour des séquences sym-

boliques, puisque telle est la forme sous laquelle se présentent le plus directement les objets

linguistiques. Pourtant, l’analogie entre séquences n’a pas fait l’objet d’une deﬁnition formelle

(voir toutefois (Lepage, 1998; Lepage, 2001) pour l’étude de diverses formalisations et de leurs

proprie’tés). La mise en (euvre de strate’gies d’inférence analogique pose également plusieurs

problemes théoriques et pratiques :

— la construction de tous les triplets d’objets analogues a as : une procédure na'1've examine tous
les quadruplets (as, b, c, d), soit une complexite’ cubique qui est excessive quand on manipule
des bases d’exemples réelles, contenant des milliers d’éléments;

— lorsqu’une e’quation analogique a : b :2 c 2? a plusieurs solutions, il est nécessaire de disposer
de criteres exprimant des préfe’rences sur les ensembles de solutions ;

— inversement, la recherche de triplets analogues peut échouer, entrainant l’échec du calcul de
f Pour faire face a ces situations, il est nécessaire de disposer de notions plus affaiblies
de l’analogie, qui permettent de garantir la construction d’au moins une analyse de ac.

Dans cet article, nous nous proposons de fournir des éléments de réponse aux deux premieres

de ces questions. Dans un premier temps (Section 2), nous proposons une deﬁnition de l’analo—

gie sur les séquences, et nous montrons (Section 3) que cette deﬁnition permet (i) de construire
des transducteurs ﬁnis qui re’solvent les analogies; (ii) de calculer efﬁcacement tous les quadru-

Analogies dans les séquences : un solveur a états ﬁnis

plets analogiques impliquant un élément particulier ; (iii) de de’ﬁnir et calculer efﬁcacement une
mesure quantitative, appele’e degre’, de la qualite’ d’une analogie.

Dans un second temps (Section 4), nous présentons les résultats d’une série d’eXpérimentations
conduites sur des lexiques de plusieurs langues. Ces eXpe’riences Visent d’une part a caracte’riser
empiriquement l’eXtension analogique d’un langage ; d’autre part a Valider l’hypothese que nos
algorithmes sont potentiellement utiles dans un contexte d’apprentissage automatique.

2 Analogies dans les séquences

2.1 Notations

Soit 2 un Vocabulaire ﬁni, 23* est l’ensemble des séquences ﬁnies de symboles de 2 (des mots)
et 6 le mot Vide. Un mot ac, de longueur | an , se décompose de facon unique selon as = acifl ou
encore as = $1 . . .acM, avec 30,- E E. Classiquement, my dénote la concate’nation des mots ac et y.
Si as = uzv, on appelle u un preﬁxe de ac, 1) un suﬁixe de ac, et 2 unfacteur de ac. Un sous—mot
dew =ac1...acn estunmotvtelqueE|I,, = {i1...ik},1 3 i1 <  3 netv = ac,-1...ac,-k.
Réciproquement, tout ensemble ordonne’ I d’indices de {1 . . . | as | } de’ﬁnit un sous—mot ac(I)
de ac. Si 11 est un sous—mot de ac, nous noterons : ‘U E ac.

Un automate ﬁni A est un 5—uplet (E, Q, q°, F, 6), avec 2 le Vocabulaire, Q un ensemble ﬁni
d’états, qo E Q l’état initial, F C Q l’ensemble des e’tats ﬁnals et 6 la fonction de transition
associant des couples de Z X Q avec des parties de Q. Le langage accepté par A est note’ L(A) ; si
6* denote la fermeture transitive de 6 il Vient L(A) = {w, 6*(q°, w) D F aé 0}. Un transducteur
ﬁni est un automate ﬁni comportant deux rubans : un pour l’entre’e et un pour la sortie. En
conséquence, ses transitions sont étiquetées par des paires a : b, avec a dans l’alphabet d’entre’e
21 et b dans l’alphabet de sortie E2. Une pre’sentation détaillée des transducteurs ﬁnis et des
principaux algorithmes s’y rapportant est donne’e dans (Roche & Schabes, 1997).

2.2 Analogies et équations analogiques

Dans cette section, nous donnons une déﬁnition de la notion d’analogie entre mots, de laquelle
nous de’duisons diverses proprie’tés classiques.

Déﬁnition 1 (ac,y,z,t) E 2+ constituent une proportion analogique, note’e ac : y :2 z : t ssi
Eln > 0,04,-,i = 1. . .n,ﬂ,-,i = 1. . .n E 2* telsque .'

S0it {E = 061. . .06” t = /61. .  y = Cl€1,620€3. . . Z = ,61Cld2,63. . .
S0it {E = 061. . .06” t = /61. .  y = ,61Cl€2,63. . . Z = Cld1,620€3. . .

avec Vi, ac,-ﬂi aé 6. Le plus petit n pour lequel une telle relation existe est le degre’ de l ’analogie.

Un exemple de proportion Vériﬁant cette déﬁnition est :

subjecti f : subversi f :2 injection : inversion

Nicolas Stroppa, Frangois Yvon

avec n = 3 et les facteurs suivants 2 041 = sub, 042 = ject, a3 = if, [31 = in, ,62 = vers,
[33 = ionl. Le degre’ de cette proportion est done 3. D’une maniere générale, le degre’ mesure la
qualite’ intrinseque d’une proportion 2 plus il est faible, meilleure est l’analogie.

De cette deﬁnition se déduisent aisément les proprie’tés classiques de l’analogie (Voir e.g. (Le-
page, 2001)) 2

‘v’acEZ3+,ac:ac::ac:ac (1)
VaU,yEE+:ac:ac::y:y (2)
VaU,y,z,tEE+:ac:y::z:t=>z:t::ac:y (3)
‘v’ac,y,z,tEE+:ac:y::z:t=>ac:z::y:t (4)

Une e’quation analogique est une proportion analogique pour laquelle seuls trois termes sur
quatre sont connus ; le calcul du terme manquant correspondant a la résolution de l’e’quation.

Déﬁnition 2 15 est une solution de l’e’quation analogique as 2 y :2 z 2? ssi as 2 y :2 z 2 15.

La deﬁnition (1) ne permet de garantir ni qu’une equation a toujours une solution, ni inversement
l’unicite’ d’une solution. Ainsi, par exemple, abc 2 def :2 2' j k 2? ne peut étre résolue ; alors que c 2
ac :2 be 2? a deux solutions 2 abc et bac. (Lepage, 2001) donne une série de conditions nécessaires
pour qu’une e’quation ait au moins une solution, conditions qui s’appliquent également ici. En
particulier, si 15 est solution de as 2 y :2 z 2?, alors t contient tous les symboles de 3; et de 2 qui
ne sont pas dans ac, dans un ordre inchangé. Un corollaire est que toutes les solutions d’une
e’quation analogique ont la meme longueur.

3 Un solvent‘ 51 états ﬁnis

3.1 Mot complémentaire et mélange

Mots complémentaires Nous commengons par introduire la notion de mots comple’men—
taires. Si 11 est un sous—mot de as, on appelle complémentaire de 1) par rapport a as le sous—mot
forme’ en conservant uniquement les symboles de ac qui ne sont pas dans v. Ainsi, par exemple
eeaie est le complémentaire (Vocalique) de acmplr par rapport a eacemplaire. Formellement 2

Déﬁnition 3 Si 11 est un sous—mot de ac, correspondant it I ’ensemble d ’indices I U, l ’ensemble des
sous—mot complémentaires de 1) par rapport 61 ac est deﬁni par ac\v = {y, y E 30,?) =  . . |
ac|  Si 1) n’estpas un sous—mot de ac, ac\v est vide.

A chaque mot de 2* on associe alors une relation binaire sur 2* X 2*, note’e \w, et déﬁnie par 2
Déﬁnition 4 u\wv si et seulement si u E w\v.

Pour tout mot as de 2*, il est aise’ de construire un automate ﬁni Aw qui reconnait uniquement
an en établissant une bijection entre les états de Aw et les preﬁxes de ac. En ajoutant a chaque

1On peut tout aussi bien prendre 012 = jecti, a3 = f

Analogies dans les sequences : un solveur a états ﬁnis

transition de Aw une transition spontane’e, on derive un automate Sw qui reconnait exactement
les sous—mots de ac. En transformant Sw en un transducteur Tw tel que chaque transition de Sac
étiquete’e par 30,- produit en sortie 6 et chaque transition 6 produit ac,-, on obtient ﬁnalement une
machine calculant la relation de complémentation par rapport a ac. La relation de complementa-
rite’ est donc une relation rationnelle. Ces constructions sont illustre’es sur la Figure 1.

x X x
Ax o I o 2 
X1 X2 Xk
5* 
T X128 X228 9 Xklﬁ
X . e:x1 . e:x2 . e:xk < D

FIG. 1 — Automates et transducteurs pour ac, ses sous—mots et la relation de complémentarite’

On notera pour ﬁnir que les notions de sous—mots complémentaires et de relation de comple’—
mentarite’ s’étendent sans difﬁculte’ a des langages rationnels quelconques.

Mélange Le produit de me’lange est déﬁni par exemple dans (SakaroVitch, 2003) comme suit.
Si u et 1) sont deux mots de 2*, leur mélange u 0 11 est le langage déﬁni par :

‘A’
uov={u1v1u2v2...unvn, avecu,-,1),-E Z} ,u=u1...un,w=v1...vn}

Le me’lange de u et 1) contient tous les mots forme’s des symboles de u et de 1), avec la contrainte
que si a precede b dans u ou v, alors cet ordre est respecte’ dans u 0 v. Ainsi par exemple, si l’on
prend u = abc et 1) = def, alors les mots suivants : abcde f , abde f C, adbec f  sont dans u 0 ’U ;
ce n’est pas le cas de abe f cd, dans lequel d suit 6, alors qu’il devrait le précéder.

Cette opération s’étend naturellement aux langages, selon, pour les langages K et L :

KoL= U acoy

a:€K,y€L

Il est connu que cette opération est une opération rationnelle, et que le me’lange de deux mots est
calcule’ en effectuant le produit des automates reconnaissant ces deux mots. Formellement, si
K et L sont deux langages rationnels reconnus respectivement par A K = (E, Q K, q%,, F K, 6 K)
et AL = (E, Q,-J,q,‘-1, FL, 6,3), avec AK et AL déterministes, l’automate A calculant K o L se
construit par: A = (Z],QK >< QL, (q%,,qg),FK >< FL, 6), avec 6 déﬁnie par: 6((qK,qL),a) =
(mg, 7',;) si et seulement si soit 6K(qK, a) = mg et q,; = r,; soit 6,-J(qL, a) = 7',; et qK = TK.

Les notions de sous—mots et de me’lange sont relie’es par la relation suivante :
as E u 0 ’U <=> u E w\v

qui énonce que u et 1) sont en relation complémentaire par rapport a as si et seulement si ac
appartient au me’lange de ces deux mots.

Nicolas Stroppa, Francois Yvon

3.2 Un solveur analogique

Ces notions préliminaires étant pose’es, il devient possible de ré—eXprimer la notion de proportion
analogique. Le re’sultat principal est énonce’ par la proposition suivante 2

Proposition 1

x:y::z2t<=>acotﬂyoz7é0

L’intuition de cette proposition est que, pour que l’analogie soit établie, il faut non seulement
que les symboles de ac et 15 soient les memes que ceux de 3; et 2, mais aussi que les symboles de
ac (et aussi de 15) apparaissant dans 3; et 2 apparaissent dans le meme ordre. Ce re’sultat est établi
formellement dans (Yvon, 2003), ainsi que le corollaire suivant 2

Proposition 2

testune solution dew 2 y :2 z 2? <=> t E yoz\w

Ce re’sultat énonce que l’ensemble des solutions d’une e’quation analogique as 2 y :2 z 2? est un
ensemble rationnel, qui peut étre calcule’ par un transducteur ﬁni T. T est obtenu en construisant
tout d’abord l’automate qui reconnnait le mélange de 3; et 2, duquel on dérive ensuite l’automate
des complémentaires, par une me’thode analogue a celle détaillée ci—dessus.

Deux résultats comple’mentaires sont e’galement établis dans (Yvon, 2003) 2

— le solveur analogique implante’ sous la forme d’un transducteur ﬁni généralise strictement
l’approche fonde’e sur des distances d’édition propose’e par (Lepage, 1998) ;

— le calcul du degre’ d’une analogie as 2 y :2 z 2 15 est réalise’ en “comptant” dans 15 1e nombre
de transitions entre fragments de 3; et de 2; pour re’aliser directement ce calcul, il sufﬁt de
composer T avec un transducteur ﬁni qui effectue un tel décompte.

Ces résultats théoriques permettent d’implanter efﬁcacement le calcul de l ’extensi0n analogique

d’un langage ﬁni L, note’e L3, qui contient tous les mots entrant dans une relation de proportion

analogique avec 3 mots de L. Dans la pratique, plutot que calculer explicitement le transducteur

(L o L)\L, qui contient un nombre d’états quadratique par rapport a l’automate A L représentant

L, il est plus efﬁcace de le simuler, a partir d’une représentation de A L.

4 Expérimentations

Dans cette section, nous présentons les résultats d’une premiere étude empirique de L3, qui
vise a comprendre le type de géne’ralisation effectue’ par le principe analogique eta controler la
validité de ce principe pour des taches d’inférence. Nous cherchons principalement a répondre
a deux questions 2 L3 contient—il bien les mots “valides” absents de L ? L3 ne surgénéralise—t—il
pas abusivement L ? Outre leur intérét théorique, ces questions sont e’galement importantes dans
l’optique d’utiliser notre modele pour faire de l’apprentissage automatique. Avant en effet de
chercher a transférer des relations analogiques existant dans un langage L vers un autre espace
de représentation L’, il convient de s’assurer au préalable que des séquences qui sont absentes
de L, mais qui sont toutefois des séquences possibles, sont effectivement trouve’es dans L3.

En revanche, il est important de re’aliser que ces experiences ne visent pas a tester un systeme
d’analyse morphologique fonde’ sur l’apprentissage par analogie. La mise en place d’un tel
systeme excedant de loin le cadre de notre travail.

Analogies dans les sequences : un solveur a etats ﬁnis

4.1 Estimation du rappel

L’inference analogique est fondee si elle permet de generaliser correctement a de nouveaux
exemples. Pour tester cette hypothese pour des taches d’analyse lexicale, nous allons montrer
que l’analogie peut etre utilisee comme une procedure effective de reconstruction de lexiques.
Pour ce faire, nous utilisons differents lexiques et repetons l’experience suivante : partitionner
aleatoirement L en n sous—lexiques P, de meme taille et calculer le pourcentage moyen d’ele—
ments de Pi qui appartiennent a l’extension analogique de (L\P,-), et qui sont donc recalculables
a partir d’elements de (L \ P,-). La mesure obtenue, que nous appelons densite’ analogique s’ap—
parente donc a une mesure de rappel, estimee ici par validation croisee a n blocs. La densite
analogique est mesuree pour 11 lexiques, correspondant aux racines, aux lemmes et aux formes
graphiques de quatre langues, le francais, l’anglais, l’allemand et le neerlandais, avec n = 10.
Les lexiques anglais, allemand et neerlandais proviennent du corpus Celex (Burnage, 1990), les
lexiques frangais proviennent du corpus Multext (Ide & Veronis, 1994) (qui ne contient que
lemmes et formes). Par ailleurs, pour l’ensemble des experimentations, nous avons uniquement
considere les analogies ayant un degre inferieur ou egal a 2, ceci nous permettant d’obtenir
plus rapidement une borne inferieure a la densite recherchee. Les resultats obtenus sont donnes
dans le tableau 1. Le calcul de la densite d’un lexique contenant 300 000 entrees demande en
moyenne 3 heures.

TAB. 1 — Densites analogiques de 4 langues (en %)
Frangais Anglais Allemand Neerlandais
Racines — 79.5j:3.1 66.7j:4.7 78.7j:3.5
Lemmes 80.9j:3.9 91.1j:3.4 81.5j:3.4 96.6j:1.4
Formes 99.2j:O.6 98j:1.4 99.7j:O.5 99.3j:O.8

Ces resultats permettent de faire deux constats. Premierement, l’hypothese selon laquelle le
langage est fortement marque par des regularites analogiques est veriﬁee sur les quatre langues
etudiees, comme en attestent des densites analogiques sur les lexiques de formes superieures a
98%. Deuxiemement, on peut remarquer que les formes sont plus facilement reconstructibles
par analogie que les lemmes, eux—memes plus facilement reconstructibles que les racines (Fi-
gure 2), ce qui met en evidence la capacite d’une modelisation analogique pour decrire des
phenomenes de derivation et de ﬂexion morphologiques.

4.2 Estimation de la précision

Une seconde experience vise a montrer que L3 n’est pas surgeneratif. En effet, il s’agit de
veriﬁer non seulement que (L \ P)3 contient une large partie de P, mais egalement qu’il ne
contient que des elements voisins de ceux de L. Le protocole experimental consiste a considerer
differents processus aleatoires de generation d’entrees lexicales modelisant de mieux en mieux
L, pour veriﬁer que mieux on modelise L, plus on genere des mots de L3. Un premier modele,
note “Uniforme”, genere un mot en (i) tirant une longueur l suivant un processus de Poisson;
(ii) tirant l lettres avec une probabilite uniforrne. Deux modeles n—grammes sont egalement
appris sur L, pour des valeurs de n valant 1 et 3. Chacun de ces deux modeles est utilise pour
generer 100 mots et l’on mesure la proportion de ces mots qui ﬁgurent dans L3. La ligne “Reel”
rappelle enﬁn les valeurs de densite calculees dans la section precedente. Les resultat obtenus
sont rapportes dans le tableau 2.

Nicolas Stroppa, Francois Yvon

FIG. 2 — Densite’s analogiques de 4 langues

 

I I néerlandais —~—
anglais 
allemand 
francais ------- --B ------- --
33 100 - -
C
E’.
G, 95 — —
3
.5 90 - _
2
g 85 — —
<5
:03 80 - -
"E
a: 75 - -
D
70 - V -
65 - L -

Racines Lemmes Formes
Type de Iexique

Ces résultats vont tous dans le meme sens : mieux le modele de ge’nération mode’lise L, plus
il a une grande intersection avec L3. Cela conﬁrme notre hypothese que L3 n’est pas n’est
pas compose’ d’éléments aléatoires, mais d’éléments “proches” de L. L’eXtension analogique
d’un langage fournit donc une géne’ralisation ﬁnie de L, qui inclut intégralement L ainsi que de
nombreux mots “proches” de L.

5 Conclusions

Dans cet article, nous avons propose’ une deﬁnition formelle de l’analogie entre séquences de
symbole, de laquelle nous avons pu déduire une implantation d’un solveur d’équations analo-
giques sous la forme d’un transducteur ﬁni. Ces résultats théoriques sont compléte’s par une
étude empirique de l’eXtension analogique d’un langage, qui illustre, sur des données diction-
nairiques, la validité de l’approche a base d’analogie.

Ce travail offre de nombreuses perspectives. Du point de vue théorique, nous envisageons prin-

cipalement d’e’tendre ces modeles dans trois directions :

— déﬁnir, en utilisant les notions de me’lange et de complémentation, des versions plus “fai-
bles” de l’analogie entre séquences, permettant d’obtenir un meilleur rappel pour des taches
d’analyse de phrases;

— de’ﬁnir des mesures plus riches que le degre’ de la qualite’ d’une analogie, intégrant en parti-
culier des informations statistiques ou encore des contraintes linguistiques supplémentaires ;

— de’ﬁnir formellement l’analogie pour d’autres représentations classiquement utilisées en TAL,
en particulier entre arbres, entre langages ﬁnis et entre graphes acycliques oriente’s.

Du point de vue empirique, nous envisageons dans un premier temps d’implanter un systeme

complet et générique d’inférence analogique, qui sera évalue’ sur diverses taches d’analyse lin-

Analogies dans les sequences : un solveur a états ﬁnis

TAB. 2 - Caractérisation de L3 — densite’s en %

Frangais An glais Allemand Néerlandais
Uniforme — 1.0j:0 7.7j:0.9 1.9j:0.3
Racines 1—gramme — 37.9j:0.3 36.9j:0.8 40.2j:0.7
3—gramme — 66.6j:1.0 63.4j:0.8 69.7j:0.8
Re’el — 79.5j:3.1 66.7j:4.7 78.7j:3 .5
Uniforme 0j:0 1.7j:0.5 0j:0 0.7j:0.5
Lemmes 1—gramme 34j:0 38.2j:1.0 18.6j:0.7 25.9j:0.9
3—gramme 58.7j:1.4 50.2j:1.0 33.5j:1.0 41.2j:0
Re’el 80.9j:3.9 91.1j:3.4 81.5j:3.3 96.6j:1.3
Uniforme 1j:0 0.0j:0.0 0.9j:0.3 1.0j:0.0
Formes 1- gramme 26.6j:0.8 33.9j:0.3 18.0j:0.1 44.2j:0.8
3—gramme 61.5j:0 53.0j:0.6 57.7j:1.3 65.3j:2.6
Re’el 99.2j:0.6 98.0j:1.4 99.7j:0.5 99.3j:0.8
guistique.
Remerciements

Une partie de ce travail a été conduit dans le cadre du programme TCAN du CNRS. En parti-
culier, il a béne’ﬁcie’ d’échanges fructueux avec L. Miclet, A. Delhaye de l’IRISA (Lannion) et
de A. Cornue’jols du LRI (Orsay).

Références

BURNAGE G. (1990). CELEX .' A Guide for Users. Rapport interne, University of Nijmegen, Center for
Lexical Information, Nijmegen.

DAELEMANS W. (1996). Abstraction considered harmful : lazy learning of language processing. In
H. J. V. DEN HERIK & A. WEIJTERS, Eds., Proceedings of the sixth Belgian—Dutch Conference on
Machine Learning, p. 3-12, Maastricht, The Nederlands.

FEDERICI S ., MONTEMAGNI S. & PIRRELLI V. (1997). Inferring semantic similarity from distri-
butional evidence : an analogy—based approach to word sense disambiguation. In Proceedings of the
ACL/EACL Workshop on Automatic Information Extraction and Building of Lexical Semantic Resources
for NLP Applications, Madrid, Spain.

HATHOUT N. (2002). From wordnet to celex : acquiring morphological links from dictionaries of syno-
nyms. In Proceedings of the Third Conference on Language, Resources and Evaluation, LREC’03, Las
Palmas de Gran Canaria, Espagne.

IDE N. & VERONIS J. (1994). MULTEXT (Multilingual Tools and Corpora). In Proceedings of the
14th International Conference on Computational Linguistics (COLING), p. 588-592, Kyoto, Japan.
LEPAGE Y. (1998). Solving analogies on words : An algorithm. In Proceedings of COLING—ACL ’98,
volume 2, p. 728-735, Montréal, Canada.

LEPAGE Y. (1999). Analogy+tables:conjugation. In G. FRIEDL & H. MAYR, Eds., Proceedings of
NLDB’99, p. 197-201, Klagenfurt, Germany.

Nicolas Stroppa, Francois Yvon

LEPAGE Y. (2001). Analogy and formal language. Electronic Notes in Theoretical Computer Science,
47, 1-12.

MATTHEWS P. (1972). Inﬂectional Morphology. A Theoretical Study Based on Aspects of Latin Verb
Conjugation. Cambridge : Cambridge University Press.

PIRRELLI V. & YVON F. (1999a). Analogy in the lexicon : a probe into analogy—based machine learning
of language. In Proceedings of the 6th International Symposium on Human Communication, Santiago
de Cuba, Cuba.

PIRRELLI V. & YVON F. (1999b). The hidden dimension : paradigmatic approaches to data—driven

natural language processing. Journal oF Experimental and Theoretical Artiﬁcial Intelligence, Special
Issue on Memory—Based Language Processing, 11, 391-408.

ROCHE E. & SCHABES Y. (1997). Introduction to ﬁnite—state devices in natural language processing.
In E. ROCHE & Y. SCHABES, Eds., Finite State Natural Language Processing, Cambridge, MA : The

MIT Press.

SAKAROVITCH J . (2003). Elements de the’orie des automates. Vuibert, Paris.

TANGUY L. & HATHOUT N. (2002). Webaﬂix : un outil d’acquisition morphologique dérivationnelle
a partir du web. In Actes de la 9eme Confe’rence Annuelle sur le T raitement Automatique des Langues
Naturelles ( T ALN ’2002 ), Nancy, France.

YVON F. (1997). Paradigrnatic cascades : a linguistically sound model of pronunciation by analogy. In
Proceedings of the 35th annual meeting of the ACL, Madrid, Spain.

YVON F. (1999). Pronouncing unknown words using multi—dimensional analogies. In Proceedings of
the European Conference on Speech Communication and Technology (Eurospeech), volume 1, p. 199-
202, Budapest, Hungary.

YVON F. (2003). Finite—state machines solving analogies on words. Rapport inteme, ENST, Paris.

