IALN ZUUD, Uourdan, 0-1 U _]l11I1 ZUUD

Projection et monotonie dans un langage de representation
lexico-grammatical

Benoit Crabbe
LORIA - Universite Nancy 2
BP 239, 54506 Vandoeuvre-les-Nancy Cedex
crabbe@loria.fr

Mots-clefs I Syntaxe, Lexique, Liage, Interface syntaxe semantique, TAG

Keywords: Syntax, Lexicon, Linking, Syntax Semantics interface, TAG

Resume Cet article apporte une methode de developpement grammatical pour la reali-
sation de grammaires d’arbres adjoints (TAG) de taille importante augmentees d’une dimen-
sion semantique. La methode que nous presentons s’exprime dans un langage informatique de
representation grammatical qui est declaratif et monotone. Pour arriver au resultat, nous mon-
trons comment tirer parti de la theorie de la projection dans le langage de representation que
nous utilisons. Par consequent cet article justiﬁe l’utilisation d’un langage monotone pour la
representation lexico-grammaticale.

Abstract This papers provides a methodology for the grammatical development of large
sized tree adjoining grammars (TAG) augmented with a semantic dimension. The provided
methodology is expressed in a monotnic and declarative language designed for the compact
representation of grammatical descriptions. To achieve the result, we show how to express
a linking theory in the language used. Therefore this paper justiﬁes the use of a monotonic
language for lexico-grammatical representation.

1 Introduction

Dans cet article, nous donnons une methode generale qui permet representer de maniere com-
pacte un fragment signiﬁcatif de grammaire TAG pour le frangais comportant une interface
syntaxe-semantique. TAG n’etant pas en tant que tel un formalisme d’analyse syntaxique com-
portant une speciﬁcation explicite de la representation semantique, nous utilisons ici la variante
introduite par (GK03). Celle-ci utilise des unites elementaires qui sont des structures a deux
dimensions. Une dimension syntaxique qui est l’arbre TAG habituel, et une dimension seman-
tique qui represente l’information semantique associee a cet arbre. La dimension semantique
est constituee de formules du langage de representation semantique utilise par (GK03). Celui-ci
est de la meme faInille que la minimal recursive semantics.

1J\/11\}1L \./1(l.l}l}\/

2 Enjeux méthodologiques

Pour représenter une grammaire TAG de maniere non redondante, nous utilisons un langage
informatique destiné a exprimer la grammaire de maniere compacte (CD04). Celui-ci repose
sur l’utilisation de macros (ou classes) réutilisables. Ce langage est destiné a servir de source
a un interpréte effectivement implémenté qui réalise l’eXpansion de la description compacte
(DLP04). Le langage utilisé pose que dans un systeme de description grammatical, il est
souhaitable de reconnaitre deux types de généralisations : les généralisations de structure d’une
part et les généralisations d’alternatives d’autre part.

/N\ On identiﬁe dans la description gram-

maticale un certain nombre de construc-
tions récurrentes que l’on souhaiterait
N1 pouvoir réutiliser. Par exemple dans les

C deux arbres suivants, nous avons encer-
| clé l’information qui représente un su-
jet nominal réalisé en position canon-
la pomme que Jean mange ique. D’autre part, et indépendamment
du partage de structure, on souhaite capturer la notion d’altemative. Par exemple ou souhaitera
identiﬁer qu’une construction passive est une alternative d’une construction active. Les alter-
natives que nous identiﬁons ont un statut particulier. En effet, ces généralisations contribuent
a décrire des ensembles d’unités grammaticales mises en relation. Dans l’exemple donné ci-
dessus, l’altemative entre un contexte transitif actif (a) et un contexte transitif passivisé (b) con-
tribuent a décrire un ensemble de deux arbres qui partagent une sémantique commune (prédicat
binaire transitif). La reconnaissance explicite des alternatives constitue un point important du
langage que nous utilisons. En effet, une famille d’arbres (Abe02), n’est rien d’autre qu’un
ensemble de réalisations alternatives d’une méme structure prédicat-argument. Or la represen-
tation des alernatives a souvent été négligée dans les propositions récentes pour la représentation
grammaticale de TAG (Can99; Xia01; GCR02)1.

N* S

que

Jean mange une pomme

Rejet des régles lexicales Le cadre que nous proposons ici se veut opérationnel. Dans ce
contexte, la méthode que nous proposons se caractérise par le rejet des regles lexicales. La
raison principale est que l’utilisation d’une mécanique procédurale dans le développement de
grammaires d’arbres adjoints de tailles conséquentes pose en pratique de tres sérieux problemes
d’ordonnancement de regles (Pro02). En lieu et place de regles lexicales, nous utilisons un lan-
gage purement déclaratif muni de deux opérateurs qui permettent de combiner des descriptions
grammaticales fragmentaires : la conjonction et la disjonction.

3 Langage utilisé

Le langage que nous utilisons (noté EC) permet de tirer parti des deux types de généralisations
que nous avons identiﬁés. Celui-ci repose crucialement sur la notion de classe. Une classe con-
tient une description de structure(s) grammaticale(s) partielle(s). Pour une TAG, une description
est une description partielle d’arbre potentiellement augmentée de structures de traits associées

1En particulier, mentionnons que (Can99; GCR02) permettent d’ exprimer les alternatives de maniere détournée
a l’aide d’un algorithme de << croisement ». En pratique nous avons observé que cet algorithme complique consid-
érablement le travail de conception de grammaires.

1 1\}J\/\/Llklll \/L 111\}l1\}L\}lLl\/ \¢l(l.llD U11 lﬂllsﬂsb \al\/ 1\/tllk/Dk/l1L(l.L1\}l1 1\/1\l\/\}'s1(l..l11111(l.L1\/(I1

aux noeuds. Une classe a pour fonction de nommer la description D a laquelle elle est associée
de telle sorte qu’il est possible de réutiliser D par ailleurs dans une description D’ quelconque.
Ce sont les classes qui nous permettent dans le langage de capturer les généralisations gram-
maticales. Ce langage détaillé par (CD04) comporte quatre aspects.

N ommage Le langage permet de nommer une description. Associer un nom a une description
permet de la réutiliser par apres. Ceci est illustré par les exemples suivants ou on associe un

nom (a gauche) a la description indiquée a droite2N

S N*

U)

S

SujetCanonique —> N l V SujetRelatiVisé —> N l V FonneVerbale —> V0

Réutilisation Il est possible dans une description donnée de réutiliser une description déja asso-
ciée a un nom par ailleurs. Dans l’exemple suivant, on réutilise ainsi la « macro » FormeVerbale
dans la description de VerbeActif.

VerbeActzf —> F0rmeVerbale
Alternative On peut exprimer dans le langage la notion d’alternative (ou de choix) en utilisant
le symbole V. Ainsi, l’exemple suivant montre comment exprimer que la notion de suj et recou-
vre aussi bien la notion de sujet canonique que de sujet relativisé.

Sujet —> SujetCan0nique V SujetRelativise’
Composition Il est également possible de combiner deux descriptions. Ainsi, on peut exprimer
qu’une famille de constructions intransitives est faite d’un sujet et d’une forme verbale a l’actif
de la maniere suivante :

Verbelntransitif —> Sujet /\ VerbeActzf

X T A
Ni V A V<> :> N1 V<>

Le gargon. .. dort Le gargon dort

N* S /\ i => N* S
V<> /\
 V dart  ‘V<>
(Le gargon) quz. .. Le gargon qm dort

Figure 1: Deux arbres a contexte intransitif

Interpretation du langage Formellement, comme 1’indiquent (CD04), 1’interprétation d’une
description grammaticale d formulée en EC se ramene a un interpréter un programme logique
de la famille Deﬁnite Clause Grammar (DCG). Cela se comprend en considérant que d est
une grammaire dont les terminaux sont des descriptions arborescentes, que l’opération de con-
caténation est ici la conjonction et en imposant que la DCG sous-jacente a d soit non récursive
(CD04). L’interprétation d’une description d engendre de maniere indéterministe toutes les
phrases, prises comme des conjonctions de descriptions, de la DCG sous-jacente a d. Dans
l’exemple présenté jusqu’ici, en considérant la classe Verbelntransitif comme axiome de la
DCG, l’interprete engendre deux arbres représentant deux contextes de verbe intransitif, comme
indiqué en ﬁgure 1. on on illustre sur la gauche les deux conjonctions de descriptions engen-
drées par l’interprete et sur la droite le résultat de la composition des descriptions3.

2Nous utilisons dans ce document une syntaxe abstraite pour illustrer notre propos. Un interpréte concret pour
ce langage a été implanté par (DLP04).
3Le mécanisme de composition est détaillé par (CD04)

1J\/11\}1L \./1(l.l}l}\/

4 Théorie de la projection lexicale

Le langage étant posé, nous donnons dans cette section une méthode générale qui permet
d’eXprimer de maniere déclarative une grammaire a l’aide de ce langage. Cette méthode re-
pose sur la théorie de la projection (linking theory). La fonction de projection associe chaque
élément de la structure argumentale a un élément de la structure syntaxique, comme indiqué ici :

MANGER (agent patient) MANGER (agent patient)

l I ébdw

manger (sujet objet) mangerpass (sujet par—objet)

Approche monotone Utiliser la projection dans un langage
MANGER (agent patient) tel que celui que nous proposons consiste a considérer que
K-rgl l’on génere un ensemble d’unités grammaticales completement
manger?“ (“jet 0) spéciﬁées par surspéciﬁation de la structure argumentale. Cette
méthode permet de garantir un mécanisme monotone pour exprimer l’interface syntaxe séman-
tique. Pour illustrer ce point, prenons le cas classique du passif court qui, dans la littérature est
souvent utilisé pour justiﬁer l’utilisation d’une mécanique procédurale (Bec93; Can99; Xia01).
Dans ce cas, Marie est vue est considéré comme variante de Jean voit Marie dans laquelle
l’agent n’est pas exprimé. Le traitement par regle lexicale du passif court consiste a effacer
l’agent (i.e. Jean). Dans le cas du modele projectif, rien n’est effacé. Au contraire l’agent non
exprimé est projeté sur une réalisation vide en syntaxe, comme illustré a gauche. L’ approche
projective ne fait qu’aj outer de l’information, et éventuellement de l’information vide a la struc-
ture argumentale.

Projection pour une grammaire TAG L’ approche projective présentée jusqu’ a present s’ ada-
pte facilement a une grammaire semi-lexicalisée du type LFG. Ainsi dans une grammaire
LFG, une structure syntaxique comme manger(sujet obj et) correspond directement a la f-
structure de l’entrée lexicale d’un verbe.

En pratique, dans le cas d’une grammaire TAG a dimension sémantique,

S les entrées lexicales a décrire sont des schémas d’arbres comme illus-

tré a droite. La dimension sémantique est prise comme contrepartie de

N l?x V0 N l?y la structure argumentale et la structure arborescente est prise comme
contrepartie de la dimension syntaxique. La fonction de projection est

<>(?x,?y) représentée par le partage de valeurs des traits sémantiques associés aux

noeuds de l’arbre et les variables d’individus de la prédication élémentaire (indiquée en gras).

La méthodologie que nous proposons repose sur l’idée de base que les arbres élémentaires TAG
sont décrits par assemblage de fragments de structure correspondant a la représentation des
arguments et du prédicat. La méthodologie qui suit consiste ensuite a produire des faInilles
d’arbres en assemblant ces différents fragments. Ce qui généralise l’eXemple donné en ﬁg-
ure 1. La méthode comporte quatre étapes : (1) Description des fragments (2) Description de
fonctions syntaxiques (3) Description de changements de diathese (4) Description de faInilles.
Pour réaliser l’interface syntaxe-sémantique, l’idée consiste a établir le lien entre la structure
prédicative et les valeurs de traits dans les arbres a l’aide de classes paramétrées4

La premiere étape de la description consiste a déﬁnir des fragments représentant différentes

4On se rappelle que le langage de contréle .Cc est Vu comme la contrepartie d’une DCG ce qui nous autorise a
utiliser des paramétres.

1 1\}J\/\/Llklll \/L 111\}l1\}L\}lLl\/ \¢l(l.llD U11 lﬂllsﬂsb \al\/ 1\/tllk/Dk/l1L(l.L1\}l1 1\/1\l\/\}'s1(l..l11111(l.L1\/(I1

S

s s I
s V

SujCan(?x)—> N in V 0bjCan(?x)—> V Nlh ForActive—>V|<> ForPassive —>Vl/\V<>

S S S
/\ /\ /\
V PP PP S V PP
/\ '7 /\ '7 /\ '7
Ind0bjCan( ?x) —> 5 Ind0bjWh( ?x) —> 5 Par0bjCan( ?x) —> par
S
PP S N S
/\7 7/\
P N1“ N* S N1“ S
Par0bjWh(?x) _. PL“ SujRel(?x) _. Ni?/w\\] 0bjWh(?x) _. ‘l,

Figure 2: Fragments d’arbres utilisés comme « blocs de construction » de la grammaire

formes du prédicat et des arguments (Figure 2). Chacun de ces fragments est réutilisé pour la
description des arbres. Par exemple, toute description d’arbre qui représente un contexte ou le
sujet est réalisé en position canonique utilisera le fragment SujCan. De plus, pour implémenter
le liage syntaxe/sémantique, chaque classe décrivant un fragment arborescent coindexe la valeur
du trait sémantique dans la structure arborescente avec un parametre de classe approprié. La
seconde étape regroupe les classes qui décrivent les fonctions syntaxiques. Celles-ci capturent
le fait qu’une fonction syntaxique est une notion qui permet de s’abstraire de la question de
l’ordre des mots.
(1) Sujet(?x) —> SujetCan(?x) V SujRel(?x)

Objet(?x) —» ObjCan(?x) v 0bjWh(?x)

ParObjet(?x) —> ParObjCan(?x) V ParObjWh(?x)

ObjetIndirect(?x) —> IndObjCan(?x) V IndObjWh(?x)

Par exemple, la classe Sujet quoi que simpliﬁée ici capture le fait que le sujet recouvre alterna-
tivement une réalisation nominale devant le verbe (SujCan) ou en position relativisée (SujRel).
En outre, les classes décrivant les variantes fonctionnelles contribuent a établir le liage entre
syntaxe et sémantique en propageant la coindexation de valeurs par utilisation de parametres.

La troisieme étape ou l’on décrit les changements de diathese constitue le point important. Pour
capturer l’alternance actif/passif, nous utilisons la déﬁnition suivante :
(2) AlternancePassiVe(?x, ?y) —>

(Sujet(?x) /\ FormeActiVe /\ Objet(?y))

V(Sujet(?y) /\ FonnePassiVe /\ ParObjet(?x))

V(Sujet(?y) /\ FormePassiVe)
Ce qui indique que les réalisations alternatives de l’actif et du passif sont soit faites d’un sujet,
d’une forme verbale active et d’un objet; soit d’un sujet, d’une forme verbale passive et op-
tionellement d’un complément d’agent. Cette classe déﬁnit deux parametres ?J: et ?y qui sont
coindexés avec les parametres des classes de fonctions syntaxiques. Les valeurs des parametres
?J: et ?y représentent les valeurs associées aux arguments dans la structure argumentale. Ainsi
la premiere ligne, qui représente l’actif, a pour effet de lier le premier argument (?a:) au sujet et
le second (?y) a l’objet. Par contre, la seconde ligne, qui représente le passif, lie le premier argu-
ment au complément d’agent et le second au sujet. Finalement la demiere ligne, qui représente
le passif sans agent, lie uniquement le second argument au sujet. Le premier argument n’est
tout simplement pas lié.

1J\/11\}1L \./1(l.l}l}\/

En demier lieu, la déﬁnition des familles (Abe02) demande d’introduire explicitement la represen-
tation sémantique et de lier les variables de la prédication élémentaire avec les parametres de
classe appropriés. On déﬁnira une famille ditransitive de la maniere suivante :
(3) FamilleDitransitive —>
AlternancePassive(?x, ?y) /\ ObjetIndirect(?z)
/\ <sem> <>(?1:, ?y, ?z)

o1‘1 <sem> représente la description d’un littéral sémantique dont les variables d’individu sont
coindexées avec les parametres de classes appropriés Le littéral sémantique ainsi décrit est
la contrepartie dans notre langage de ce que la théorie de la projection appelle la structure
argumentale. A chacun des niveaux de description les variables sont coindexées de maniere
appropriée. La génération de l’ensemble des arbres de la famille produit bien un ensemble de
couples (arbre, représentation sémantique) dans lesquels la projection est bien réalisée.

5 Conclusion

Dans cet article, nous avons proposé une méthode de développement de grammaires d’arbres
adjoints qui s’exprime dans un cadre monotone. Cette méthode permet de justiﬁer l’usage
d’un langage monotone pour la représentation lexico-grammaticale. En second lieu elle ou-
vre la porte au développement de grammaires d’arbres adjoints a large couverture comportant
une interface syntaxe-sémantique. Ces grammaires doivent étre interfacées avec les analyseurs
TAG existants (GP05). Le langage ainsi que la méthode proposés ont permis de générer une
grammaire d’arbre adjoints de taille importante (environ 4000 arbres). De plus le cadre pro-
pose ici s’adapte facilement au développement de grammaires pour d’autres formalismes forte-
ment lexicalisés. Ainsi, G. Perrier a pu réutiliser cette méthode pour produire une grammaire
d’interaction. Nous avons également mené quelques expériences encourageantes qui ont permis
de créer une petite grammaire XDG du francais.

Références

Anne Abeillé. (Abe02) Une grammaire d’arbres adjoints pour le francais. CNRS, Paris, 2002.

Tilman Becker. (Bec93) HyTAG: A new Type of Tree Adjoining Grammars for Hybrid Syntactic Repre-
sentation of Free Word Order Language. PhD thesis, Universitat des Saarlandes, 1993.

Marie-Héléne Candito. (Can99) Organisation Modulaire et Paramétrable de Grammaires Electroniques
Lexicalisées. PhD thesis, Université de Paris 7, 1999.

Benoit Crabbé and Denys Duchier. (CD04) Metagrammar redux. In Constraint Solving and Language
Processing, Copenhagen, 2004.

Denys Duchier, Joseph Leroux, and Yannick Parmentier. (DLP04) The metagrammar compiler: An nlp
application with a multi-paradigm architecture. In Mozart 2004, Charleroi, 2004.

Bertrand Gaiffe, Benoit Crabbé, and Azim Roussanaly. (GCR02) A new metagrammar compiler. In
Proc. TAG+6, Venise, 2002.

Claire Gardent and Laura Kallmeyer. (GK03) Semantic construction in feature-based tree adjoining
grammar. In Proc. EACL, 2003.

Claire Gardent and Yannick Parmentier. (GP05) Large scale semantic construction for tree adjoining
grammar. In Proc. LACL 2005, Bordeaux, 2005.

Carlos Prolo. (Pro02) Systematic grammar development in the XTAG project. In COLING’02, 2002.

Fei Xia. (Xia01) Automatic Grammar Generation from two Diﬁerent Perspectives. PhD thesis, Univer-
sity of Pennsylvania, 2001.

