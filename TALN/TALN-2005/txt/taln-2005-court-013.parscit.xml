<?xml version="1.0" encoding="UTF-8"?>
<algorithms version="110505">
<algorithm name="ParsCit" version="110505">
<citationList>
<citation valid="true">
<authors>
<author>A K Joshi</author>
</authors>
<title>An introduction to Tree Adjoining Grammars.</title>
<date>1987</date>
<journal>Mathematics of Language. John Benjamins. Amsterdam.</journal>
<pages>87--114</pages>
<editor>in A. Manaster-Ramer (ed.),</editor>
<contexts>
<context position="3969" citStr="Joshi, 1987" startWordPosition="637" endWordPosition="638">e. TAG derivations are represented by derivation trees that record the history of how the elementary trees are put together. A derived tree is the result of carrying out the substitutions and adjunctions. Each edge in the derivation tree stands for an adjunction or a substitution. The edges are labelled with Gorn addresses of the nodes where the substitutions/adjunctions take place.1 E.g., in Fig. 1 the derivation tree indicates that the elementary tree for John is substituted for the node at address 1 and always is adjoined at node address 2. 1.2 Multicomponent TAG Multicomponent TAG (MCTAG, Joshi, 1987; Weir, 1988) is a TAG extension useful for linguistic applications. An MCTAG contains sets of elementary trees. Starting with an initial tree, in each derivation step, all trees from one of the tree sets are added simultaneously. Depending on the nodes to which these trees attach, different kinds of MCTAGs are distinguished: if all nodes are required to be part of the same elementary tree, the MCTAG is tree-local; if all nodes are required to be part of the same tree set, the grammar is set-local; otherwise the grammar is non-local 2. Consider for example the non-local MCTAG derivation in Fig</context>
<context position="5748" citStr="Joshi (1987)" startWordPosition="948" endWordPosition="949">ar. However, the simultaneity requirement imposes certain derivation orders even though a different order might lead to the same adjunctions and substitutions and to the same derived tree. E.g., in Fig. 2 one might as well 1The root has the address , and the jth child of the node with address p has address pj. 2Cases where MCTAGs have been argued to be useful are extractions out of complex NPs as in “which painting did you buy a copy of” where the two parts of the complex NP should be part of one elementary structure but cannot be part of the same elementary tree. For such examples Kroch and Joshi (1987) propose to use tree-local MCTAGs. A Descriptive Characterization of Multicomponent Tree Adjoining Grammars { } WH S’ what    S  WH S  S   does S∗  { } NP S  NP to be   certain S∗   S  John to like seem S ∗ Figure 2: Derivation for what does John seem to be certain to like in an MCTAG GM like like does certain who john does certain who john seem seem Figure 3: TAG derivation trees for the TAG underlying Fig. 2 start by adding does to like (at the higher S node), then adjoin to be certain to like (at the lower S node) and then adjoin seem to to be certain. This y</context>
<context position="11091" citStr="Joshi, 1987" startWordPosition="1975" endWordPosition="1976">and for all derivation steps γi ⇒ γi+1, 0 ≤ i &lt; n in the derivation such that there is a node position 〈pe, γe〉 and a tree γ ∈ I ∪ A with γi+1 = γi[〈pe, γe〉, γ]: γ ∈ N and 〈γe, γ, pe〉 ∈ E . These are all nodes and edges. In a derivation tree D = 〈N , E〉, the parent relation is the relation between mothers and daughters, PD := {〈n1, n2〉 |there is a p ∈ IN∗ such that 〈n1, n2, p〉 ∈ E}. The dominance relation is its reflexive transitive closure, DD := {〈n1, n2〉 |n1, n2 ∈ N and either n1 = n2 or there is a n3 such that 〈n1, n3〉 ∈ PD and 〈n3, n2〉 ∈ DD}. Finally, we define multicomponent TAG (MCTAG, Joshi, 1987; Weir, 1988): A multicomponent TAG (MCTAG) is a tuple G = 〈I, A, N, T,A〉 such that: GTAG := 〈I, A, N, T 〉 is a TAG, andA ⊆ P (I∪A) is a set of subsets of I∪A, the set of elementary tree sets.7 γ ⇒ γ′ is a multicomponent derivation step in G iff there is an instance {γ1, . . . , γn} of an elementary tree set in A and there are pairwise different node addresses p1, . . . , pn such that γ′ = γ[p1, γ1] . . . [pn, γn] where γ[p1, γ1] . . . [pn, γn] is the result of adding the γi (1 ≤ i ≤ n) at node positions pi in γ. As in TAG, a derivation starts from an initial tree and in the final derived tree</context>
</contexts>
<marker>Joshi, 1987</marker>
<rawString>Joshi, A. K.: 1987. An introduction to Tree Adjoining Grammars. in A. Manaster-Ramer (ed.), Mathematics of Language. John Benjamins. Amsterdam. pp. 87–114.</rawString>
</citation>
<citation valid="true">
<authors>
<author>A K Joshi</author>
<author>L S Levy</author>
<author>M Takahashi</author>
</authors>
<title>Tree Adjunct Grammars.</title>
<date>1975</date>
<journal>Journal of Computer and System Science</journal>
<volume>10</volume>
<pages>136--163</pages>
<contexts>
<context position="2209" citStr="Joshi et al., 1975" startWordPosition="325" endWordPosition="328"> way the members of the elementary tree sets are added. Looking only at the result of a derivation (i.e., the derived tree and the derivation tree), this simultaneity is no longer visible and therefore cannot be checked. I.e., this way of characterizing MCTAG does not allow to abstract away from the concrete order of derivation. Therefore, in this paper, we propose an alternative definition of MCTAG that characterizes the trees in the tree language of an MCTAG via the properties of the derivation trees the MCTAG licences. 1 Introduction 1.1 Tree Adjoining Grammars Tree Adjoining Grammar (TAG, Joshi et al., 1975) is a tree-rewriting formalism. A TAG consists of a finite set of trees (elementary trees) with nonterminals and terminals as node labels (terminals only label leaf nodes). Starting from the elementary trees, larger trees are derived by Kallmeyer S derived tree: S NP VP NP VP derivation tree: NP laugh VP V John ADV VP John 1 2ADV VP∗ laughs always V john always always laughs Figure 1: TAG derivation for John always laughs substitution (replacing a leaf with a new tree) and adjunction (replacing an internal node with a new tree). In case of an adjunction, the new tree is a so-called auxiliary t</context>
</contexts>
<marker>Joshi, Levy, Takahashi, 1975</marker>
<rawString>Joshi, A. K., Levy, L. S. and Takahashi, M. 1975. Tree Adjunct Grammars. Journal of Computer and System Science 10, 136–163.</rawString>
</citation>
<citation valid="true">
<authors>
<author>L Kallmeyer</author>
</authors>
<title>Tree Description Grammars and Underspecified Representations. PhD thesis. Universität Tübingen.</title>
<date>1999</date>
<tech>Technical Report IRCS-99-08</tech>
<location>Philadelphia.</location>
<contexts>
<context position="8989" citStr="Kallmeyer (1999)" startWordPosition="1515" endWordPosition="1516">ity constraint. In section 2, standard definitions of TAG and MCTAG are given. Then, in section 3, an alternative descriptive characterization of MCTAG is proposed. 2 Standard definitions of TAG and MCTAG We assume that the definitions of initial and auxiliary trees and the definitions of substitution and adjunction are already known.3 a TAG (see, e.g., Vijay-Shanker, 1987) is a tuple G = 3For formal definitions of initial and auxiliary trees with certain alphabets of nonterminal and terminal symbols and also for formal definitions of the operations substitution and adjunction see for example Kallmeyer (1999). Kallmeyer 〈I, A, N, T 〉 with N abd T being finite sets of nonterminals and terminals, and I and A being finites sets of initial and auxiliary trees with nonterminals N and terminals T . In a TAG G = 〈I, A, N, T 〉, a derivation step is defined as follows: Let γ and γ ′ be finite trees. γ ⇒ γ′ in G iff there is a node position p and a tree γ0 ∈ I ∪ A4 such that γ′ = γ[p, γ0] 5 ∗. ⇒ is the reflexive transitive closure of ⇒. The tree language of G is then LT (G) := {γ |there is an ∗ α ∈ I such that α ⇒ γ and all leaves in γ have terminal labels}. Each node address p in a derived tree points at a</context>
</contexts>
<marker>Kallmeyer, 1999</marker>
<rawString>Kallmeyer, L.: 1999. Tree Description Grammars and Underspecified Representations. PhD thesis. Universität Tübingen. Technical Report IRCS-99-08 at the Institute for Research in Cognitive Science, Philadelphia.</rawString>
</citation>
<citation valid="true">
<authors>
<author>L Kallmeyer</author>
</authors>
<title>Tree-local multicomponent tree adjoining grammars with shared nodes. Computational Linguistics.</title>
<date>2005</date>
<note>To appear.</note>
<contexts>
<context position="15294" citStr="Kallmeyer (2005)" startWordPosition="2835" endWordPosition="2836">at • (MC1) The root of D is an instance of an initial tree α ∈ I and all other nodes are instances of trees from tree sets in A such that for all instances Γ of elementary tree sets from A and for all γ1, γ2 ∈ Γ: if γ1 ∈ N , then γ2 ∈ N . • (MC2) For all instances Γ of elementary tree sets from A and for all γ1, γ2 ∈ Γ, γ1 6= γ2: 〈γ1, γ2〉 6∈ DD. • (MC3) For all pairwise different instances Γ1, Γ2, . . . , Γn, n ≥ 2 of elementary tree sets from A (n) −1): ther (i) (i)e are no γ1 , γ2 ∈ Γi, 1 ≤ i ≤ n such that 〈 (1) γ1 , γ2 〉 ∈ DD and 〈 (i) (i γ1 , γ2 〉 ∈ DD for 2 ≤ i ≤ n. The proof is given in Kallmeyer (2005). The lemma gives us a way to characterize non-local MCTAG via the properties of the TAG derivation trees the grammar licenses and thereby to get rid of the original simultaneity requirement: The corresponding properties are now captured in the three constraints (MC1)–(MC3). Since these constraints need to hold only for the TAG derivation trees that correspond to derived trees in the tree language, sub-derivation trees need not satisfy them. In other words, γ1 and γ2 from the same tree set can be added at different moments of the derivation as long as the final TAG derivation tree satisfies (M</context>
</contexts>
<marker>Kallmeyer, 2005</marker>
<rawString>Kallmeyer, L. 2005. Tree-local multicomponent tree adjoining grammars with shared nodes. Computational Linguistics. To appear.</rawString>
</citation>
<citation valid="true">
<authors>
<author>A S Kroch</author>
<author>A K Joshi</author>
</authors>
<title>Analyzing extraposition in a tree adjoining grammar.</title>
<date>1987</date>
<pages>107--149</pages>
<publisher>Academic Press, Inc..</publisher>
<note>in</note>
<contexts>
<context position="5748" citStr="Kroch and Joshi (1987)" startWordPosition="946" endWordPosition="949">s very clear. However, the simultaneity requirement imposes certain derivation orders even though a different order might lead to the same adjunctions and substitutions and to the same derived tree. E.g., in Fig. 2 one might as well 1The root has the address , and the jth child of the node with address p has address pj. 2Cases where MCTAGs have been argued to be useful are extractions out of complex NPs as in “which painting did you buy a copy of” where the two parts of the complex NP should be part of one elementary structure but cannot be part of the same elementary tree. For such examples Kroch and Joshi (1987) propose to use tree-local MCTAGs. A Descriptive Characterization of Multicomponent Tree Adjoining Grammars { } WH S’ what    S  WH S  S   does S∗  { } NP S  NP to be   certain S∗   S  John to like seem S ∗ Figure 2: Derivation for what does John seem to be certain to like in an MCTAG GM like like does certain who john does certain who john seem seem Figure 3: TAG derivation trees for the TAG underlying Fig. 2 start by adding does to like (at the higher S node), then adjoin to be certain to like (at the lower S node) and then adjoin seem to to be certain. This y</context>
</contexts>
<marker>Kroch, Joshi, 1987</marker>
<rawString>Kroch, A. S. and Joshi, A. K.: 1987. Analyzing extraposition in a tree adjoining grammar. in G. J. Huck and A. E. Ojeda (eds), Syntax and Semantics: Discontinuous Constituency. Academic Press, Inc.. pp. 107–149.</rawString>
</citation>
<citation valid="true">
<authors>
<author>K Vijay-Shanker</author>
</authors>
<title>A Study of Tree Adjoining Grammars. PhD thesis.</title>
<date>1987</date>
<institution>University of Pennsylvania.</institution>
<contexts>
<context position="8749" citStr="Vijay-Shanker, 1987" startWordPosition="1478" endWordPosition="1479">one characterizes in a descriptive way the properties of the derivation trees licensed by the grammar. The advantage of this non-operational perspective is that one needs not to check all possible derivation orders with respect to the simultaneity constraint. In section 2, standard definitions of TAG and MCTAG are given. Then, in section 3, an alternative descriptive characterization of MCTAG is proposed. 2 Standard definitions of TAG and MCTAG We assume that the definitions of initial and auxiliary trees and the definitions of substitution and adjunction are already known.3 a TAG (see, e.g., Vijay-Shanker, 1987) is a tuple G = 3For formal definitions of initial and auxiliary trees with certain alphabets of nonterminal and terminal symbols and also for formal definitions of the operations substitution and adjunction see for example Kallmeyer (1999). Kallmeyer 〈I, A, N, T 〉 with N abd T being finite sets of nonterminals and terminals, and I and A being finites sets of initial and auxiliary trees with nonterminals N and terminals T . In a TAG G = 〈I, A, N, T 〉, a derivation step is defined as follows: Let γ and γ ′ be finite trees. γ ⇒ γ′ in G iff there is a node position p and a tree γ0 ∈ I ∪ A4 such t</context>
</contexts>
<marker>Vijay-Shanker, 1987</marker>
<rawString>Vijay-Shanker, K.: 1987. A Study of Tree Adjoining Grammars. PhD thesis. University of Pennsylvania.</rawString>
</citation>
<citation valid="true">
<authors>
<author>D J Weir</author>
</authors>
<title>Characterizing mildly context-sensitive grammar formalisms. PhD thesis.</title>
<date>1988</date>
<institution>University of Pennsylvania.</institution>
<contexts>
<context position="3982" citStr="Weir, 1988" startWordPosition="639" endWordPosition="640">tions are represented by derivation trees that record the history of how the elementary trees are put together. A derived tree is the result of carrying out the substitutions and adjunctions. Each edge in the derivation tree stands for an adjunction or a substitution. The edges are labelled with Gorn addresses of the nodes where the substitutions/adjunctions take place.1 E.g., in Fig. 1 the derivation tree indicates that the elementary tree for John is substituted for the node at address 1 and always is adjoined at node address 2. 1.2 Multicomponent TAG Multicomponent TAG (MCTAG, Joshi, 1987; Weir, 1988) is a TAG extension useful for linguistic applications. An MCTAG contains sets of elementary trees. Starting with an initial tree, in each derivation step, all trees from one of the tree sets are added simultaneously. Depending on the nodes to which these trees attach, different kinds of MCTAGs are distinguished: if all nodes are required to be part of the same elementary tree, the MCTAG is tree-local; if all nodes are required to be part of the same tree set, the grammar is set-local; otherwise the grammar is non-local 2. Consider for example the non-local MCTAG derivation in Fig. 2: the tree</context>
<context position="11104" citStr="Weir, 1988" startWordPosition="1977" endWordPosition="1978">erivation steps γi ⇒ γi+1, 0 ≤ i &lt; n in the derivation such that there is a node position 〈pe, γe〉 and a tree γ ∈ I ∪ A with γi+1 = γi[〈pe, γe〉, γ]: γ ∈ N and 〈γe, γ, pe〉 ∈ E . These are all nodes and edges. In a derivation tree D = 〈N , E〉, the parent relation is the relation between mothers and daughters, PD := {〈n1, n2〉 |there is a p ∈ IN∗ such that 〈n1, n2, p〉 ∈ E}. The dominance relation is its reflexive transitive closure, DD := {〈n1, n2〉 |n1, n2 ∈ N and either n1 = n2 or there is a n3 such that 〈n1, n3〉 ∈ PD and 〈n3, n2〉 ∈ DD}. Finally, we define multicomponent TAG (MCTAG, Joshi, 1987; Weir, 1988): A multicomponent TAG (MCTAG) is a tuple G = 〈I, A, N, T,A〉 such that: GTAG := 〈I, A, N, T 〉 is a TAG, andA ⊆ P (I∪A) is a set of subsets of I∪A, the set of elementary tree sets.7 γ ⇒ γ′ is a multicomponent derivation step in G iff there is an instance {γ1, . . . , γn} of an elementary tree set in A and there are pairwise different node addresses p1, . . . , pn such that γ′ = γ[p1, γ1] . . . [pn, γn] where γ[p1, γ1] . . . [pn, γn] is the result of adding the γi (1 ≤ i ≤ n) at node positions pi in γ. As in TAG, a derivation starts from an initial tree and in the final derived tree, all leaves </context>
<context position="13244" citStr="Weir (1988)" startWordPosition="2418" endWordPosition="2419">ubstitution node with label X , then γ[p, γ ′] is the tree one obtains by substitution of γ ′ into γ at node position p. If γ ′ is (derived from) an auxiliary tree with root label X ∈ Nand if the node at position p in γ is an internal node with label X , then γ[p, γ ′] is the tree one obtains by adjunction of γ ′ to γ at node position p. Otherwise γ[p, γ′] is undefined. 6Linear precedence is not needed in a derivation tree since it does not influence the result of the derivation. 7P (X) is the set of subsets of some set X . 8This TAG derivation tree is not the MCTAG derivation tree defined in Weir (1988). The nodes of Weir’s MCTAG derivation trees are labelled by sequences of elementary trees (i.e., by elementary tree sets) and each edge stands for simultaneous adjunctions/substitutions of all elements of such a set. A Descriptive Characterization of Multicomponent Tree Adjoining Grammars 3 A descriptive characterization of MCTAG The TAG derivation trees for MCTAG derivations have certain properties resulting from the requirement that the elements of elementary tree sets must be added simultaneously: Firstly, if an elementary tree set is used, then all trees from this set must occur in the de</context>
</contexts>
<marker>Weir, 1988</marker>
<rawString>Weir, D. J.: 1988. Characterizing mildly context-sensitive grammar formalisms. PhD thesis. University of Pennsylvania.</rawString>
</citation>
</citationList>
</algorithm>
</algorithms>