T ALN 2005, Dourdan, 6-10 juin 2005

Correction automatique en temps réel
Contraintes, méthodes et voies de recherche

Roger Rainero

Société Diagonal
1, Traverse des Brucs — Valbonne — Sophia Antipolis
roger.r@proleXis.com

Mots-clés :

Correction automatique, temps réel, analyse syntaxique, grammaire de contraintes.

Résumé

Cet article expose un cas concret d’utilisation d’une grammaire de contraintes. Le produit qui les
applique a été commercialise en 2003 pour corriger automatiquement et en temps réel les fautes
d’accord présentes dans les sous-titres des retransmissions en direct des débats du Sénat du
Canada. Avant la mise en place du systeme, le taux moyen de fautes était de l’ordre de 7 pour
100 mots. Depuis la mise en service, le taux d’erreurs a chute a 1,7 %.

Nous expliquons dans ce qui suit les principaux atouts des grammaires de contraintes dans le

cas particulier des traitements temps réel, et plus généralement pour toutes les applications qui
nécessitent une analyse au fur et a mesure du discours (c.-a-d. sans attendre la ﬁn des phrases).

Keywords:

Automatic correction, real-time, syntactic analysis, grammar of constraints.

Abstract

This article sets out a concrete use case of a grammar of constraints. The product which applies
them was commercialised in 2003 to automatically correct in real time the errors of agreement
present in the sub-titles of live televised debates from the Senate of Canada.

Before the introduction of this system, the average rate of mistakes was in the order of 7 per 100
words. With the introduction of this system, the rate of errors has fallen to 1.7%.

In the following section, we explain the main advantages of a grammar of constraints in the
specific case of real-time processing, and more generally for all applications which require an
analysis during the speech (that is, without waiting until the end of sentences).

487

488

Roger Rainero

1. Exposé du probléme

Le Sénat du Canada diffuse certains de ses débats en direct sur une chaine de television
spécialisée. Chaque sénateur pouvant s’exprimer dans sa langue matemelle (francais ou anglais),
les interventions se succedent indifféremment dans ces deux langues. Les téléspectateurs ont la
possibilité d’afﬁcher des sous-titres, soit en francais, soit en anglais, mais lorsqu’une langue est
choisie, la totalité des débats est transcrite dans cette langue (fonction légale pour les
malentendants).

Les sous-titrages francais sont obtenus par retranscription sténotypée soit directe (locuteur
francais) soit indirecte (locuteur anglais traduit simultanément en francais, la sténotypiste
enregistrant alors la traduction). Les sténotypistes francophones et anglophones utilisent la
meme méthode de saisie mise au point en Amérique du Nord, tres perforrnante pour les langues
globalement phonétiques (ou la majorité des lettres se prononcent). Cette méthode donne ainsi
d’excellents résultats en anglais. Mais pour le francais qui comporte de nombreuses syllabes
fmales muettes, les ajustements ont été longs et fastidieux, et la mise en ondes a été maintes fois
repoussée, a la recherche d’un taux acceptable de transcription exacte. Les résultats ont
régulierement progressé jusqu’en 2002, ou ce taux a plafonné aux alentours de 93 %. (sur 100
mots, seuls 93 étaient corrects).

Bien que ce taux paraisse tres élevé, il génere un nombre d’incidents de lecture tres au-dela de ce
qui est acceptable. 11 suffit, pour s’en convaincre, de constater qu’il correspond a 8 fautes par
minute de lecture. Le Sénat du Canada a alors fait un appel d’offres international dans le but de
trouver une solution automatique susceptible d’améliorer cette situation. La solution proposée
devait perrnettre de corriger automatiquement le plus grand nombre de fautes résiduelles
possibles, sans ajouter de fautes la ou il n’y en a pas. Par ailleurs, l’automate devait s’intercaler
dans le processus d’acquisition du texte sténotypé (logiciel Eclipse déja installé) sans le ralentir
de facon notable.

La société Diagonal a soumissionné en proposant une adaptation spécifique de ses moteurs

d’analyse déja utilises dans les logiciels de correction ProLexis et Myriade. Cette solution
retenue par le Sénat a été livrée en octobre 2003.

2. Exigences dynamiques de la correction automatique des sous-
titrages en temps réel

Le systeme demandé par le Sénat imposait de faire les corrections au fur eta mesure de la saisie,
c’est-a-dire sans que l’on puisse attendre la fin des phrases. Cette obligation Vient
essentiellement du direct : les sous-titres suivent a peu pres les paroles des orateurs. En théorie
donc, les corrections doivent étre faites quasi immédiatement apres les fautes.

En pratique, nous disposions des souplesses suivantes :

0 les diffusions sont en léger différé d’une a deux secondes,
0 les sous-titres sont découpés en lignes qui ne partent a l’antenne que lorsqu’elles sont pleines.

Exemple aVec la phrase : « Les ﬁlles jot/lent aux billes, les gargons jot/lent an ballon. »

Voici ce que saisit la sténotypiste par tranche de 0,5 seconde (avec les fautes) :

0,5 s Les

1,0 s Les ﬁlle

1,5 s Les ﬁlle joue

2,0 s Les ﬁlle joue au

2,5 s Les ﬁlle joue an bille,

Correction automatique en temps re’el : contraintes, me’thodes et voies de recherche

3,0 s Les ﬁlle joue an bille, les

3,5 s Les ﬁlle joue an bille, les gargon

4,0 s Les ﬁlle joue an bille, les gargon joue

4,5 s Les ﬁlle joue an bille, les gargon joue an

5,0 s Les ﬁlle joue au bille, les gargon joue an ballon.

Et Voici ce que doit Voir le téléspectateur (entre parentheses, les corrections a faire) :

0 s (rien)
3 s LES FILLE(S) J OUE(NT ) AU(X) BILLE(S),
6 s LES GARCON(S) J OUE(NT) AU BALLON.

L’automate doit corriger les fautes de la lre ligne au plus tard au temps 5,0 (temps reel 3,0 + 2
secondes de différé), c’est-a-dire lorsque 1e 4e mot de la ligne suivante Vient d’arriVer. Pour la
premiere faute (fille), il dispose d’un retard de 7 mots, mais pour la derniere faute (bille), il ne
bénéficie plus que d’un retard de 4 mots. L’automate ignorant totalement a quel moment les
lignes sont déclarées « pleines », il est oblige de s’astreindre a faire toutes ses corrections avec
un maximum de quatre mots de retard !

C’était bien la la plus grande difficulté a laquelle nous allions étre confrontés.

3. Les atouts des systémes d’analyse basés sur les contraintes

Ce qui a rendu la chose possible avec ProLexis tient dans le fait essentiel que notre moteur
exploite un principe de propagation de contraintes.

Comme dans les principaux systemes basés sur la satisfaction de contraintes (cf. (Blache00)),
notre approche ne Vise pas a construire un arbre syntaxique de la phrase, mais plutot a optimiser,
dans un réseau de contraintes, le chemin menant du premier au dernier mot de la phrase :

 

0 mot1(a) 0 mot2 (a) ot4 (a) 0 etc.
233391,. ot2 (b)  ‘
o (c) 0 m (c) 0 mot4 (c)
0 mot1(d)
A mot3 (e)

Sur ce schema, les contraintes ne sont pas figurées. Elles ne se manifestent qu’au travers du
choix du chemin affiché qui est censé satisfaire le maximum d’entre elles.

Chaque nouveau mot apporte son lot de Variantes possibles, mais aussi son lot de contraintes
potentielles pour toutes les Variantes établies depuis le debut de la phrase :

-) Appliquer une contrainte revient a calculer son coefficient de satisfaction (son « poids ») dans
toutes les Variantes établies.

-) Propager une contrainte revient a reconsidérer l’application des contraintes déja appliquées,
comme consequence de l’am'Vée du nouveau jeu de contraintes.

Notre systeme ne construit donc pas un arbre, mais il pondere un réseau. A la fin de la phrase,
un algorithme simple peut restituer l’arborescence de la structure syntaxique, si le besoin s’en
fait sentir, mais cela n’est pas nécessaire pour diagnostiquer les erreurs et les corriger.

La pondération est souple, dans la mesure ou une contrainte mal satisfaite n’est qu’une
indication d’un écart par rapport a la norme formalisée par cette contrainte. En ce sens, elle
produit des analyses robustes qui s’accommodent de déviances parfois fortes par rapport aux
usages ou meme de l’absence de certains mots.

489

490

Roger Rainero

Tout cela est bien connu et caractérise les grammaires basées sur les contraintes, mais n’est pas
determinant dans le cas qui nous intéresse.

Le plus gros avantage de notre grammaire, dans le cadre de la correction automatique en temps
reel, provient de sa capacité a délivrer une analyse pondérée des Variantes apres chaque mot. Bien
sﬁr, l’analyse est réputée optimale lorsque tous les mots de la phrase sont connus, mais cette
analyse est néanmoins disponible en phase intermédiaire apres chaque mot.

Enfm, le mécanisme de propagation apres chaque mot présente un autre avantage de taille dans le
cas de notre application << temps réel » : il permet, par un choix judicieux des coefﬁcients de
pondération, de marginaliser assez Vite certaines Variantes isolées et de limiter a un niveau
raisonnable le nombre de Variantes concurrentes que le logiciel évalue en parallele a chaque
iteration.

Ce mécanisme peut meme s’autoréguler en détruisant systématiquement les Variantes les moins
probables a chaque passe, de telle sorte que leur nombre total reste en dessous d’un seuil
critique pour le temps d’exécution.

Evidemment, toutes ces actions aveugles sont préjudiciables a la qualité de l’analyse in ﬁne.
Toute la question était de quantiﬁer leur inﬂuence réelle sur la ﬁabilité des corrections attendues.

4. Tests de fiabilité des résultats intermédiaires in « mot + 4 »

J usqu’a present, nous n’aVions jamais testé la ﬁabilité des résultats intermédiaires avant la fin de
la phrase. 11 nous fallait donc Verifier que dans le contexte du Sénat, nous disposions
effectivement de sufﬁsamment d’indices pour decider des corrections au maximum a mot + 4.

En théorie, en effet, tout nouveau mot dans une phrase peut changer totalement son analyse.
C’est un exercice bien connu auquel se livrent Volontiers les professionnels de l’analyse
syntaxique. Et c’est aussi avec de tels exemples que l’on peut démontrer que ce que nous avons
fait est impossible. En Voici quelques-uns :

Debut : Le chien regarde le chat et la souris. ..

Suite 1 : Le chien regarde le chat et la souris mais. ..

Suite 2 : Le chien regarde le chat et la souris prise. ..

Suite 2a : Le chien regarde le chat et la souris prise. .. (au piége .7)
Suite 2b : Le chien regarde le chat et la souris prise. .. (du tabac .7)

Mais quelle est la portée statistique réelle d’un tel phénomene et quelle est son inﬂuence sur la
ﬁabilité d’un systeme de correction automatique apres quatre mots ?

Pour l’estimer, nous avons fabriqué un prototype du produit fini simulant le comportement de
l’outil d’acquisition Eclipse. Ce logiciel lisait un extrait des débats du Sénat obtenu par
sténotypie et l’enVoyait signe a signe a l’automate qui gardait trace dans un ﬁchier de sortie de
toutes les corrections faites et du moment ou elles pouvaient étre faites.

Le tableau suivant montre un extrait de ce ﬁchier de sortie, concemant un debut de phrase telle
qu’elle est délivrée par Eclipse, fautes comprises (colonne de gauche). A droite, les fautes
corrigées sont intercalées apres le mot qui les rend possibles :

Correction automatique en temps re’el .' contraintes, me’thodes et voies de recherche

Apres la saisie de. .. Les corrections suivantes sont faites. ..

solution 9 solutions
pratique 9 pratiques

Ilfaut e’galement des solution pratique qui. ..

soit sense. .. soit —) soient

pom‘. .. sense 9 sensées

ceux qui travaille sur. .. travaille —) travaillent

On constate que les deux premieres erreurs << solution » et « pratique » sont corrigées des la
saisie de « qui », donc respectivement a mot + 2 et mot + 1.

Regardons de plus pres les analyses qui sont faites a ce stade : le mot « pratique » est ambigu :
ce peut étre un nom, un adjectif ou un Verbe. Toutes ces formes génerent potentiellement autant
de Variantes. Les Variantes Verbales paraissent improbables, mais, comme toujours en pareil cas,
une petite réﬂexion perrnet d’en découvrir certaines formes légitimes :

« Ilfaut e’galement des solutions, pratique ce sport et tu verras I »
« Ilfaut e’galement des solz/ztions(,) explique Ce’sar. .. »

Bien sur, la Virgule semble cruciale, mais la pondération de son absence n’est pas suffisante ici.
En revanche, l’am'Vée du mot suivant « qui » est déterminante, elle rend la ﬂexion Verbale pour le
mot « pratique » quasiment impossible. En théorie, la ﬂexion Verbale ne peut étre totalement
exclue, car 1’hypothese d’oub1id’un mot peut toujours la justiﬁer. Mais les réglages actuels de
nos seuils de probabilités pour des textes de provenance sténotypée font qu’elle est rejetée ici.

La suite est comprehensible : determine nominal, le groupe precedent est fautif sur 1’accord GN.
Deux formes correctes sont possibles : << une solution pratique » et « des solutions pratiques ».
C’est la qu’interviennent des automates specialises dans la correction automatique spéciﬁque du
Sénat du Canada : ces automates choisissent de facon probabiliste la correction au pluriel.

Appliqué au texte de référence de 2 000 mots fourni par le Sénat, contenant 149 fautes et
correspondant a un débat reel de 20 minutes, le prototype a donné les résultats suivants :

Nombre de fautes corrigées : ...aVec un retard de :
89 1 mot
17 2 mots
3 3 mots
1 4 mots

La faible incidence des situations ambigues sur les corrections automatiques envisagées pour les
débats du Sénat du Canada paraissait donc confirmée, au moins sur le texte étudié. Et la
propagation de contraintes montrait la une capacité tout a fait étonnante a résoudre le probleme
pose. Restaient a démontrer son efﬁcacité et sa stabilité a grande échelle.

491

492

Roger Rainero

5. Méthode d’évaluation 51 grande échelle.

L’inconVenient des systemes probabilistes est que leur comportement ne peut etre totalement
deduit de tests a petite echelle. Typiquement, dans le cas du Senat, la nature meme des debats
inﬂue grandement sur le Vocabulaire, les intervenants et donc sur les types de phrases
prononcees. Nul doute qu’un simple echantillon de 2 000 mots ne pouVait representer
correctement la totalite des situations auxquelles devrait faire face 1’automate apres sa mise en
service.

Apres avoir ete choisis par le Senat du Canada pour executer le marche, nous avons donc lance
en parallele les deux realisations suivantes : d’une part, le logiciel lui-meme (bien entendu), et
d’autre part, l’etalonnage d’un corpus de 50 000 mots destine a Valider les tests d’usine du
logiciel, avant sa livraison chez le client.

Ce corpus a ete extrait des transcriptions stenotypees de debats recents representant un peu plus
de 10 heures d’antenne reparties sur une periode de deux mois. On ne s’est limite a cette taille
que pour des contraintes de temps. Deux personnes ont travaille pendant un mois pour
selectionner les textes, elirniner les passages en double, detecter les fautes et les baliser dans le
texte. Quelque 3 500 fautes y ont ete reperees.

L’application de l’automate sur ce corpus a corrige plus de 2 500 fautes sur 3 500, etablissant
un taux de reconnaissance a grande echelle stable a 98,31 %. Sur ce meme corpus, l’automate
n’a introduit que 23 fautes, soit un taux moyen de surcorrection de 1/2100.

6. Perspectives et voies de recherche

I1 faut se mefier de 1’idee fausse qui consiste a penser que le temps d’execution n’est pas un
probleme majeur pour les algorithmes d’analyse automatique. On entend souVent dire : « de
toute maniere, les machines iront de plus en plus Vite et un jour Viendra ou les algorithmes lents
s’executeront Vite ! ».

Tout cela est Vrai, sauf pour les applications << temps reel ». La correction automatique des sous-
titrages est un exemple, mais il y en a bien d’autres. La reconnaissance Vocale multilocuteur et la
traduction simultanee sont deux domaines qui pointent deja a l’horizon et qui n’attendent que
1’emergence de nouvelles technologies linguistiques pour se deployer a grande echelle.

Le decoupage du mecanisme d’analyse en strates successives ou le controle integre du nombre

de Variantes concurrentes que permettent aujourd’hui les grammaires guidees par la satisfaction
de contraintes semble etre un atout de poids dans les applications temps reels.

References

Blache P. (2000) Le role des contraintes dans les theories linguistiques et leur interet pour
l’ana1yse automatique, Actes de TALN 2000.

Blache P. (2000) Constraints, Linguistic Theories and Natural Language Processing, Lecture
Notes in Artiﬁcial Intelligence, Springer-Verlag.

Harper M. P., Helzerman R. A. (1995). Extensions to constraint dependency parsing for spoken
language processing. Computer Speech and Language, Vol. 9 (3), pp 187-234.

Maruyama, H. (1990). Constraint dependency grammar and its weak generative capacity.
Computer Software.

