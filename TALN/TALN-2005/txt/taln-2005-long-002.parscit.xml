<?xml version="1.0" encoding="UTF-8"?>
<algorithms version="110505">
<algorithm name="ParsCit" version="110505">
<citationList>
<citation valid="true">
<title>7les DTD pour grammaires TAG et IG sont fournies dans le système XMG disponible librement à l’adresse http://sourcesup.cru.fr/xmg.</title>
<date>2004</date>
<marker>2004</marker>
<rawString>(voir (Gardent et Kow, 2004)). 7les DTD pour grammaires TAG et IG sont fournies dans le système XMG disponible librement à l’adresse http://sourcesup.cru.fr/xmg.</rawString>
</citation>
<citation valid="true">
<authors>
<author>D Duchier</author>
<author>J Le Roux et Y Parmentier Abeillé A</author>
</authors>
<title>Une grammaire électronique du français ,</title>
<date>2002</date>
<publisher>CNRS Editions,</publisher>
<location>Paris.</location>
<marker>Duchier, A, 2002</marker>
<rawString>D. Duchier, J. Le Roux et Y. Parmentier Abeillé A. (2002), Une grammaire électronique du français , CNRS Editions, Paris.</rawString>
</citation>
<citation valid="true">
<authors>
<author>H Ait-Kaci</author>
</authors>
<title>Warren’s Abstract Machine : A Tutorial Reconstruction, Logic Programming :</title>
<date>1991</date>
<publisher>Proc.</publisher>
<contexts>
<context position="16032" citStr="Ait-Kaci, 1991" startWordPosition="2450" endWordPosition="2451">s. Cette caractéristique est fortement liée à l’architecture modulaire du compilateur. Des modules dédiés La compilation d’une méta-grammaire se fait en plusieurs phases, dont certaines diffèrent suivant le formalisme. Chacune de ces phases est prise en charge par un module spécifique. Actuellement XMG comporte 3 modules principaux : a) La partie avant (i.e. le compilateur proprement dit) traduit la méta-grammaire en instructions exprimées dans un langage de plus bas niveau. b) Ces instructions sont ensuite exécutées par une machine virtuelle (MV) de type Warren’s Abstract Machine (WAM, voir (Ait-Kaci, 1991)). Cette MV réalise l’unification des structures de données de la méta-grammaire (i.e. structures de traits associées aux noeuds, traits polarisés pour IG, etc), puis l’accumulation des dimensions pour une combinaison de classes donnée. En sortie de la MV, nous disposons de données accumulées dans chaque dimension, dans le cas des TAG, des descriptions d’arbres dont il faut calculer les solutions. c) En plus de la partie avant et de la MV, qui sont communes aux formalismes des TAG et des IG, XMG intègre un module de résolution de descriptions d’arbres. Ce module est programmé sous forme d’un r</context>
</contexts>
<marker>Ait-Kaci, 1991</marker>
<rawString>Ait-Kaci H. (1991) , Warren’s Abstract Machine : A Tutorial Reconstruction, Logic Programming : Proc.</rawString>
</citation>
<citation valid="true">
<authors>
<author>K Furukawa Conference</author>
</authors>
<title>A principle-based hierarchical representation of LTAGs ,</title>
<date>1996</date>
<booktitle>Proceedings of the 15th International Conference on Computational Linguistics (COLING’96), Kopenhagen.</booktitle>
<publisher>MIT Press,</publisher>
<institution>of the Eighth International</institution>
<location>Cambridge, MA. Candito M.H.</location>
<marker>Conference, 1996</marker>
<rawString>of the Eighth International Conference, K. Furukawa , MIT Press, Cambridge, MA. Candito M.H. (1996), A principle-based hierarchical representation of LTAGs , Proceedings of the 15th International Conference on Computational Linguistics (COLING’96), Kopenhagen.</rawString>
</citation>
<citation valid="true">
<authors>
<author>L Clément</author>
<author>A Kinyon</author>
</authors>
<title>Generating LFGs with a MetaGrammar ,</title>
<date>2003</date>
<booktitle>Proceedings of the 8th International Lexical Functional Grammar Conference,</booktitle>
<location>Saratoga Springs, NY.</location>
<marker>Clément, Kinyon, 2003</marker>
<rawString>Clément L., Kinyon A. (2003), Generating LFGs with a MetaGrammar , Proceedings of the 8th International Lexical Functional Grammar Conference, Saratoga Springs, NY.</rawString>
</citation>
<citation valid="true">
<authors>
<author>B Crabbé</author>
</authors>
<title>Grammatical development with XMG,</title>
<date>2005</date>
<booktitle>Fifth International Conference on Logical Aspects of Computational Linguistics (LACL05),</booktitle>
<location>Bordeaux.</location>
<marker>Crabbé, 2005</marker>
<rawString>Crabbé B. (2005a), Grammatical development with XMG, Fifth International Conference on Logical Aspects of Computational Linguistics (LACL05), Bordeaux.</rawString>
</citation>
<citation valid="true">
<authors>
<author>B Crabbé</author>
</authors>
<title>Représentation informatique de grammaires fortement lexicalisées - Application à la grammaire d’arbres adjoints, Thèse de Doctorat (á paraître),</title>
<date>2005</date>
<journal>Université Nancy</journal>
<volume>2</volume>
<marker>Crabbé, 2005</marker>
<rawString>Crabbé B. (2005b), Représentation informatique de grammaires fortement lexicalisées - Application à la grammaire d’arbres adjoints, Thèse de Doctorat (á paraître), Université Nancy 2.</rawString>
</citation>
<citation valid="true">
<authors>
<author>B Crabbé</author>
<author>B Gaiffe</author>
<author>A Roussanaly</author>
</authors>
<title>Une plate-forme de conception et d’exploitation d’une grammaire d’arbres adjoints lexicalisés, Actes de la conférence TALN’2003 Batz-sur-mer.</title>
<date>2003</date>
<marker>Crabbé, Gaiffe, Roussanaly, 2003</marker>
<rawString>Crabbé B., Gaiffe B., Roussanaly A. (2003), Une plate-forme de conception et d’exploitation d’une grammaire d’arbres adjoints lexicalisés, Actes de la conférence TALN’2003 Batz-sur-mer.</rawString>
</citation>
<citation valid="true">
<authors>
<author>B Crabbé</author>
<author>D Duchier</author>
</authors>
<date>2004</date>
<booktitle>Metagrammar Redux , International Workshop on Constraint Solving and Language Processing - CSLP 2004,</booktitle>
<location>Copenhagen.</location>
<marker>Crabbé, Duchier, 2004</marker>
<rawString>Crabbé B., Duchier D. (2004), Metagrammar Redux , International Workshop on Constraint Solving and Language Processing - CSLP 2004, Copenhagen.</rawString>
</citation>
<citation valid="true">
<authors>
<author>D Duchier</author>
<author>J Niehren</author>
</authors>
<title>Dominance Constraints with Set Operators,</title>
<date>2000</date>
<booktitle>Proceedings of the First International Conference on Computational Logic (CL2000).</booktitle>
<marker>Duchier, Niehren, 2000</marker>
<rawString>Duchier D., Niehren J. (2000), Dominance Constraints with Set Operators, Proceedings of the First International Conference on Computational Logic (CL2000).</rawString>
</citation>
<citation valid="true">
<authors>
<author>B Gaiffe</author>
<author>B Crabbé</author>
<author>A Roussanaly</author>
</authors>
<title>A New Metagrammar Compiler ,</title>
<date>2002</date>
<booktitle>Proceedings of the 6th International Workshop on Tree Adjoining Grammars and Related Frameworks (TAG+6),</booktitle>
<location>Venice.</location>
<marker>Gaiffe, Crabbé, Roussanaly, 2002</marker>
<rawString>Gaiffe B., Crabbé B., Roussanaly A. (2002), A New Metagrammar Compiler , Proceedings of the 6th International Workshop on Tree Adjoining Grammars and Related Frameworks (TAG+6), Venice.</rawString>
</citation>
<citation valid="true">
<authors>
<author>C Gardent</author>
<author>L Kallmeyer</author>
</authors>
<title>Semantic construction in FTAG ,</title>
<date>2003</date>
<booktitle>Proceedings of the 10th meeting of the European Chapter of the Association for Computational Linguistics,</booktitle>
<location>Budapest.</location>
<marker>Gardent, Kallmeyer, 2003</marker>
<rawString>Gardent C., Kallmeyer L. (2003), Semantic construction in FTAG , Proceedings of the 10th meeting of the European Chapter of the Association for Computational Linguistics, Budapest.</rawString>
</citation>
<citation valid="true">
<authors>
<author>C Gardent</author>
<author>E Kow</author>
</authors>
<title>Génération et sélection de paraphrases grammaticales , journée ATALA sur la génération de Langue Naturelle,</title>
<date>2004</date>
<location>Paris.</location>
<marker>Gardent, Kow, 2004</marker>
<rawString>Gardent C., Kow E. (2004) , Génération et sélection de paraphrases grammaticales , journée ATALA sur la génération de Langue Naturelle, Paris.</rawString>
</citation>
<citation valid="true">
<authors>
<author>A Joshi</author>
<author>Y Schabes</author>
</authors>
<title>Tree-Adjoining Grammars , Handbook of Formal Languages</title>
<date>1997</date>
<publisher>Springer,</publisher>
<location>Berlin, New York.</location>
<marker>Joshi, Schabes, 1997</marker>
<rawString>Joshi A., Schabes Y. (1997), Tree-Adjoining Grammars , Handbook of Formal Languages , G. Rozenberg and A. Salomaa , Springer, Berlin, New York.</rawString>
</citation>
<citation valid="true">
<authors>
<author>P Van Roy</author>
</authors>
<title>Extended DCG Notation : A Tool for Applicative Programming in Prolog,</title>
<date>1990</date>
<tech>Technical Report UCB/CSD 90/583,</tech>
<institution>Computer Science Division, UC Berkeley.</institution>
<marker>Van Roy, 1990</marker>
<rawString>Van Roy P. (1990), Extended DCG Notation : A Tool for Applicative Programming in Prolog, Technical Report UCB/CSD 90/583, Computer Science Division, UC Berkeley.</rawString>
</citation>
</citationList>
</algorithm>
</algorithms>