TALN 2005, Dourdan, 6-10 juin 2005

Grammaire d’Unification Sens-Texte : modularite et polarisation

Sylvain Kahane (1), Francois Lareau (2)

(1) Modyco, U. Paris 10/ Lattice, U. Paris 7
sk@ccr.jussieu.fr
(2) OLST, U. de Montreal / Lattice, U. Paris 7
francois.lareau@umontreal.ca

Resume — Abstract

L’objectif de cet article est de presenter l’etat actuel du modele de la Grammaire
d’Unification Sens-Texte, notamment depuis que les bases formelles du modele ont ete
eclaircies grace au developpement des Grammaires d’Unification Polarisees. L’accent est mis
sur l’architecture du modele et le role de la polarisation dans l’articulation des differents
modules — l’interface semantique—syntaxe, l’interface syntaXe—morphotopologie et les
grammaires decrivant les differents niveaux de representation. Nous etudions comment les
procedures d’analyse et de generation sont controlables par differentes strategies de
neutralisation des differentes polarites.

This article presents the Meaning—Text Unification Grammar’s current state, now that its
formal foundations have been clarified with the development of Polarized Unification
Grammars. Emphasis is put on the model’s architecture and the role of polarization in linking
the Various modules — semantic—syntaX interface, syntax—morphotopology interface and the
well—formedness grammars of each representation level. We discuss how Various polarity
neutralization strategies can control different analysis and generation procedures.

Mots Cles — Keywords

Theorie Sens-Texte, interface syntaXe—semantique, synchronisation, grammaire d’unification
polarisee, grammaire de dependance, grammaire topologique, generation de textes.

Meaning—Text Theory, syntax—semantics interface, synchronization, polarized unification
grammar, dependency grammar, topology grammar, text generation.

1 Introduction

L’objectif de cet article est de presenter l’etat actuel du modele de la Grammaire

d’Unification Sens-Texte [GUST], notamment depuis que ses bases formelles ont ete
eclaircies grace au developpement des Grammaires d’Unification Polarisees [GUP]. Le

Sylvain Kahane et F rangois Lareau

formalisme des GUP permet de simuler élégamment la plupart des formalismes bases sur la
combinaison de structures, notamment les grammaires de réécriture, TAG, LFG ou HPSG
(Kahane 2004). Toutefois, GUP a été initialement développé pour donner une assise formelle
solide a GUST, mais la formalisation de GUST en GUP n’a encore jamais été présentée.

L’architecture de GUST est basée sur la théorie Sens—TeXte (Mel’cuk 1997 ; Kahane 2001).
Plusieurs niveaux de représentation de la phrase sont considérés: sémantique, syntaxique,
morphotopologique et phonologique. Ces niveaux sont bien séparés et chacun possede sa
grammaire propre. La structure sémantique est un graphe, la structure syntaxique un arbre de
dépendance, la structure morphotopologique un arbre ordonné, et la structure phonologique
une chaine linéaire. Sur ces structures peuvent s’ajouter d’autres structures comme une
hiérarchie logique ou une structuration informationnelle au niveau sémantique ou encore une
structure prosodique au niveau phonologique, mais nous n’en parlerons pas ici. De plus, ces
niveaux sont ordonnés, du plus profond au plus proche de la surface, ce qui nous donne trois
modules d’interface pour passer du sens au << texte >> : sémantique—syntaXe, syntaXe—
morphotopologie et morphotopologie—phonologie.

L’implémentation de GUST nécessite donc un formalisme capable de manipuler différents
types de structures (graphe, arbre, arbre ordonné, chaine) et de pouvoir les apparier. Comme
on le Verra, le formalisme des GUP est un forrnalisme mathématique spécialement concu pour
manipuler aussi simplement que possible de telles structures. Par ailleurs, GUP controle la
saturation des structures qu’il combine par une polarisation de leurs objets : on peut comparer
la construction d’une phrase en GUP a la formation d’une molécule en chimie par la
neutralisation de la Valence des atomes.

Notre implémentation de GUST fait un grand usage de la polarisation en controlant la
construction des objets (et donc la saturation des structures) par une polarité propre a chaque
module, que ce soit une grammaire de bonne formation des structures d’un niveau donne ou
une grammaire d’interface entre deux niveaux. De plus, chaque module utilise la polarité des
modules adjacents pour son articulation avec eux. L’ordre dans lequel nous neutraliserons ces
différentes polarités Va décider d’une procedure particuliere en analyse ou en génération. Les
procédures en largeur résultent de la neutralisation successive de toutes les polarités propres a
un module (neutralisation de toute la structure sémantique, puis syntaxique, etc), tandis que
les procédures en profondeur résultent d’une neutralisation en cascade de toutes les polarités
introduites par un objet, c’est—a—dire que des qu’un objet est construit a un niveau donne, on
cherche a neutraliser les polarités des autres niveaux associées a cet objet plutot que de
construire d’autres objets du meme niveau. Mal gré une architecture stratifiée (séparation des
niveaux et des interfaces), notre modele peut donc tout a fait gérer une interaction complexe
entre les différents modules et simuler une analyse ou une génération incrémentale (tentative
de neutralisation de la structure du premier mot de la phrase du niveau phonologique jusqu’au
niveau sémantique, puis du deuxieme mot, etc).

La définition de GUP sera brievement rappelée dans la section 2. Dans la section 3, nous
proposerons des grammaires de bonne formation pour les différents types de structures que
nous considérons dans GUST. Dans la section 4, nous introduirons la notion de grammaire de
correspondance et nous montrerons comment GUP permet d’écrire des interfaces.

Grammaire d’Uniﬁcation Sens—Texte : modularite’ et polarisation

2 Grammaires d’unification polarisées [GUP]

Les grammaires d’unification polarisées sont des grammaires permettant de générer des
ensembles de structures finies. Une structure repose sur des objets. Par exemple, pour un
graphe (orienté), les objets sont des nceuds et des arcs. Chaque arc est he a deux nceuds par les
fonctions source et cible. Ce sont ces fonctions qui fournissent la structure proprement dite.

Une structure polarise'e est une structure dont les objets sont polarisés, c’est—a—dire associés
par une fonction a une Valeur appartenant a un ensemble fini P de polarite's. L’ensemble P est
muni d’une operation commutative et associative notée << . », appelée produit. Un sous-
ensemble N de P contient les polarités dites neutres. Une structure polarisée est dite neutre si
tous les objets de cette structure sont neutres. Nous utiliserons ici un systeme de polarités P =
{ ,0,0} (que nous appellerons ainsi : O = noire = saturée, O = blanche = contexte obligatoire
et = grise = neutre absolu), avec N = { ,0}, et un produit défini par le tableau suivant (ou J.
représente l’impossibilité de se combiner) :

O0
O0
OOOO
COO;

Tableau 1 — Le produit des polarités

Les structures peuvent étre combinées par uniﬁcation. L’unification de deux structures A et B
donne une nouvelle structure AC-BB obtenue en « collant >> ensemble ces structures par
l’identification d’une partie des objets de A avec une partie de ceux de B. Lorsque A et B sont
unifiées, la polarité d’un objet de AC-BB obtenu par identification d’un objet de A et d’un objet
de B est le produit de leurs polarités. Toutes les fonctions associées aux objets unifies sont
nécessairement identifiées (comme le sont les traits quand on unifie deux structures de traits).

Une grammaire d’uniﬁcation polarise'e (GUP) est définie par une famille finie T de types
d’objets (avec des fonctions associées aux différents types d’objets), un systeme (P,.) de
polarités, un sous—ensemble N de P de polarités neutres, et un ensemble fini de structures
élémentaires polarisées, dont les objets sont décrits par T et dont une peut étre marquee
comme la structure initiale. Les structures ge'ne're'es par la grammaire sont les structures
neutres obtenues par combinaison de la structure initiale et/ou d’un nombre fini de structures
élémentaires. Rappelons que le formalisme est monotone (avec l’ordre < O < 0 sur les
polarités) et que les structures peuvent étre combinées dans n’importe quel ordre.

Nous Verrons dans la section suivante deux exemples de GUP qui génerent respectivement les
graphes sémantiques et les arbres syntaxiques. Tous nos exemples seront illustrés par (1) :

(1) Pierre mange deux pommes.

Sylvain Kahane et F rangois Lareau

3 Grammaires de bonne formation

3.1 Grammaire sémantique

Nos representations sémantiques sont essentiellement basées sur un graphe de relations
prédicat—argument entre sémantemes (les signifies des unites lexicales et grammaticales de la
phrase). On peut superposer sur ce graphe d’autres informations pour encoder la structure
informationnelle ou les relations de portée (Mel’cuk 2001, Kahane 2005). Les nceuds d’une
representation sémantique représentent les sémantemes et les arcs représentent les relations
prédicat—argument. Notre grammaire Qsém est donc une grammaire de graphe dont les objets
portent chacun une polarité, notée psém dans la suitel, qui indique quel est le noeud construit
par la regle (polarisé en noir) et quels sont les noeuds constituant la Valence sémantique du
prédicat (polarisés en blanc) (Figure 1).

‘manger’ . . ‘deux’ ‘manger’
6 7
‘ . , ‘ , deux
1 2 Pierre pomme 1  1 2
1
‘Pierre’ ‘pomme’

Figure 1 — Un extrait de Qsém générant le graphe sémantique de (1)

3.2 Grammaire syntaxique

Nos representations syntaxiques sont des arbres de dépendance dont les noeuds sont étiquetés
par des representations lemmatisées de mots. Plus exactement le noeud syntaxique est étiqueté
par le nom d’un lexeme et des fonctions dites grammaticales lient ce noeud a d’autres objets
représentant les grammemesz. Les arcs de l’arbre sont étiquetés par des fonctions syntaxiques,
(qui Varient d’une langue a l’autre). Voir Figure 2 a droite la representation syntaxique de (1).

Nous présentons notre grammaire syntaxique Qsym avec une seule polarité psym, qui comme
précédemment indique quels sont les objets construits par la regle et permet de Verifier que les
fonctions associées a chaque objet sont bien instanciées : la source et la cible pour les arcs,
l’étiquette, la partie du discours (pdd) pour les nceuds et les fonctions grammaticales
éventuelles (nombre pour les noms, mode, temps, nombre et personne pour les Verbes, etc.)3.
Une deuxieme polarité, p,ym_g°uv, masquée ici, sert a Verifier que la structure est bien un arbre,
c’est—a—dire que chaque noeud est gouverné une et une seule fois, a l’exception du sommet.

Par convention, nous faisons référence aux polaiités par le nom de la fonction qui les associe aux objets qui
les portent. Ainsi, 31 tous les objets des régles de Gm, est associée une fonction psém qui retourne comme
valeur une des polaiités de l’ensemble P décrit plus haut.

Nous indiquons ces fonctions en italiques dans nos figures, suivies du gramméme en question. Les
grammémes sont eux-mémes liés aux lexémes par des fonctions inverses que nous masquons. Ce double lien
rend les deux objets indissociables : l’unification de l’un force l’unification de l’autre.

Nous présentons un systéme grammatical simplifié en masquant par exemple la détermination pour le nom
ou la finitude et la voix pour le verbe.

Grammaire d’Umﬁcati0n Sens—Texte : modularite’ et polarisation

La Figure 2 présente un extrait de Qsym permettant de générer l’arbre syntaxique de (1). La
toute premiere regle est la structure initiale, qui doit étre utilisée une et une seule fois et qui
correspond au sommet de l’arbre (et qui devra recevoir une polarité psym_g(,u,, noire indiquant
qu’il ne peut étre gouverné). Les quatre regles suivantes sont des regles lexicales; elles
indiquent la partie du discours des lexemes et les grammemes qui leur sont nécessaires. On
notera que ces regles ne controlent pas la Valence syntaxique, qui sera controlée par l’interface
sémantique—syntaXe. Les trois regles qui suivent sont des regles sagittales ; elles décrivent
différentes relations syntaxiques possibles (et controle la structure d’arbre par une polarisation
psym_g(,u,, noire du noeud dependant, non indiquée ici). Les autres regles sont des regles
grammaticales. Ces regles peuvent dépendre du contextez ainsi l’indicatif nécessite une
relation sujet et Vice—Versa, la presence d’un numéral impose le pluriel ou celle d’un sujet non
pronominal la 3° personne du Verbe. Notons également que l’introduction d’un grammeme
peut dépendre d’un autre grammeme: l’indicatif par exemple exigera un temps, mais pas
l’infinitif4.

structure initiale

     

 pdd : V

 mode :. ind

temps :. prés
: .3

 

DEUX
ﬁpddi V  ............................................................. ..
 mode . ind  pdd ; V
 tempso i made ind
pers O Etemps prés

O  nbre O  . ................. ..

Figure 2 — Un extrait de Qsym générant la representation syntaxique de (1)
Nous présenterons la grammaire morphotopologique en meme temps que l’interface syntaXe—
morphotopologie, dans la section 4.3. Nous laisserons de cote la phonologie.
4 Interfaces

Nous introduisons d’abord la notion de grammaire de correspondance avant d’introduire les
deux interfaces considérées ici : sémantique—syntaXe et syntaxe—morphotopologie.

4 Nous considérons l’opposition e11tre l’infinitif et l’infinitif dit << passé » d’ordre aspectuel.

Sylvain Kahane et F rangois Lareau

4.1 Grammaires de correspondance

Une grammaire de correspondance Q est une grammaire qui met en correspondance des
structures appartenant a deux ensembles, que nous notons .54 et 23. Les regles de G mettent en
correspondance des structures élémentaires composant les éléments de .54 et de 23. On peut
considérer trois fonctionnements pour Q : équatif, transductif et génératif, selon qu’on fournit
en entrée deux, une ou zero structures (Kahane 2000). Une grammaire équative Vérifie que
deux structures fournies se correspondent, une grammaire transductive traduit une structure
fournie en une autre, tandis qu’une grammaire generative génere un couple de structures en
correspondance.

Considérons le fonctionnement équatif de  qui est le plus élémentaire : Q partitionne les
deux structures en un meme nombre de fragments qui se correspondent deux a deux par les
regles de la grammaire. En termes de polarités, cela signifie que les deux structures en entrée

doivent étre déclarées comme des ressources que 6 devra toutes << consommer >> (assurant
ainsi que les deux structures ont été totalement mises en correspondance). Les objets des deux
structures recevront donc une polarité pg blanche que les regles de G devront neutraliser. Les
regles de G contiendront quanta elles des objets (des niveaux de représentation de .54 et de 23)
de polarité pg noire mis en correspondance. Ainsi, en neutralisant les deux structures fournies,
Q les met en correspondance.

Voyons maintenant comment la meme grammaire Q fonctionne de maniere transductive.
C’est ce mode de fonctionnement qui modélise les processus linguistiques de synthese et
d’analyse. On fournit a Q une structure A de .54 dont tous les objets portent une polarité pg
blanche. On déclenche alors un jeu de regles afin de neutraliser A, ce qui nous construit une
structure B synchronisée avec A. Une grammaire de bonne formation des structures de 23 doit
maintenant Vérifier que B appartient bien a 23. La structure B, tout en étant neutre pour Q
(tous ses objets portent une polarité pg noire), doit donc déclencher la grammaire de 3. Elle
doit pour cela étre entierement blanche en polarité pg. En somme, chaque module, qu’il soit

une grammaire de bonne formation ou une grammaire d’interface, possede une polarité propre
controlant la construction des objets par cette grammaire, mais pour assurer l’appel des

modules adjacents, les objets des regles de .54 et de 23 recoivent, en plus de leurs polarités
respectives p A et pg, une polarité pg blanche, tandis qu’il faut ajouter aux regles de G une
polarité blanche pg pour les éléments du niveau de représentation de .54 et pg pour les
éléments du niveau de 3. Un objet construit par .54 aura donc une double polarisation pg—pg

(0,0), tandis que l’élément correspondant construit par Q aura une double polarisation p g—p g
(0,0). Ceci nous donne un systeme a quatre polarités {(0,0),(0,0),(0,0),(0,0)} equivalent
au systeme {O,—,+,O} de Bonfante et al. 2004 et Kahane 2004. Ces couples de polarités sont
les polarités d’articulati0n.

4.2 Interface sémantique-syntaxe

L’interface sémantique—syntaXe Isémym est une grammaire de correspondance entre l’ensemble

des graphes sémantiques décrit par Qsém et l’ensemble des arbres syntaxiques décrit par Qsym.

Grammaire d’Umﬁcati0n Sens—Texte : modularite’ et polarisation

Nous allons illustrer la presentation de Isémym par son fonctionnement transductif en synthese.
On fournit a la grammaire un graphe sémantique comme celui de la Figure 1 a droite, a la
difference que chacun des objets recoit maintenant une double polarisation p,ém—p,ém_,ym(0,0).
Les objets des regles de Isémym portent tous une polarité p,ém_,ym (blanche ou noire, selon qu’ils
sont ou non construits par la regle en question), mais ceux du niveau sémantique (resp.
syntaxique) auront en plus une polarité psém (resp. psym) blanche. La Figure 3 présente un
extrait de la grammaire d’interface qui traite le graphe sémantique de (1). Seule la polarité
p,ém_,ym est représentée.

‘Pierre’ PIERRE
O

 

‘pomme’ POMME ............. ..
' ............. -3 

.............. H.
Figure 3 — Un extrait de la grammaire d’interface Isémym

Dans la Figure 4, nous donnons trois structures : le graphe sémantique de (1) avec la double
polarisation p,ém—p,ém_,ym, le résultat apres neutralisation par Isémym de toutes les polarités qui
pouvaient l’étre (c’est—a—dire psémymet psém, mais pas psym), puis le résultat apres application de
Qsym sur l’arbre syntaxique construit par Isémym. Les polarités qui servent a l’articulation avec
le module adjacent sont indiquées en décalé. A noter que les grammemes d’accord (comme le
nbre et pers pour le Verbe) n’ont pas de contrepartie sémantique directe et ne doivent donc pas
porter de polarité psmsym.

, ....................... ..1§4:§NGER

      
  

‘manger’ sdeuxv
1 2 1

‘Pierre ‘pomme’

 p d: V
 modezoindic

MANGER  temps zczgres

. .................................... ..   b -.

 

 

Figure 4 — Le graphe sémantique de (1) avant et apres l’application de Isémym et Qsym

De meme que Qsém, la grammaire syntaxique Qsym doit étre enrichie pour assurer l’articulation
avec a la fois l’interface sémantique—syntaXe et l’interface syntaXe—morphotopologie. Comme
on peut le Voir dans de bas de la Figure 4, l’application de Qsym sur la sortie de Isémym permet
de neutraliser toutes les polarités psymdes objet syntaxiques construits par Ismsym. Cependant,
il n’est pas possible d’introduire le lexeme MANGER sans lui attribuer un mode (cf. Figure 2)

 

Sylvain Kahane et F rangois Lareau

et en lui attribuant le mode indicatif, par exemple, on force l’utilisation d’un grammeme de
temps et de grammemes d’accord en personne et en nombre. La grammaire Qsym, en
neutralisant les polarités psymde la sortie de Isémym, introduit donc des grammemes qui ne
figuraient pas dans cette sortie et qui pour certains (pas les grammemes d’accord) auront une
polarité psémym blanche (Figure 4 en bas). Cette polarité blanche sur les grammemes de mode
et de temps ainsi introduits devra donc étre neutralisée par des regles de Isémym. Or, rien dans
la structure sémantique de départ ne peut correspondre a ces grammemes. Qu’a cela ne
tienne ! Le jeu des polarités de GUST permet de modifier en cours de route la représentation
donnée en entrée afin de satisfaire des contraintes provenant d’autres niveaux de
représentation. Supposons que notre modele comprenne les deux regles données en Figure 5.
La premiere est une regle de Qsém qui donne une représentation d’un des sens du temps
présent. La seconde est une regle de Isémym qui fait correspondre a ce sens le grammeme de
temps présent. Ces deux regles peuvent s’appliquer dans le sens inverse de la synthese qui est
en cours pour Venir modifier la structure de départ en lui ajoutant le sens du présent (nous
laissons de cote la question du mode pour des raisons de clarté). On obtient alors la structure
sémantique a droite.

_ 4 ' 1
« Concomltantv . Concomitant, concomitant

1 2 1 2  ................................. .. ‘ ,
X %  mode: ()indic manger ‘deux’
_ _   temps Qprés
................................... .0

‘ ' 7
-   ma1ntenant 1
‘ma1ntenant’ ‘-...‘malntenanti...-"

  

   
        

_ I 4 ‘ 3 4 1
Figure 5 — Le present Plerre Pomme

Bien entendu, il existe d’autres regles qui peuvent saturer les besoins en mode et en temps, et
on obtiendra autant de structures sémantiques modifiées qu’il y a de facons de satisfaire les
contraintes syntaxiques. Dans le cadre d’un systeme de génération de texte, il faut alors que le
programme choisisse, parmi les graphes sémantiques proposés, celui qui convient le mieux
selon les connaissances du monde auxquelles il a acces. Dans le cas qui nous préoccupe, le
systeme aura ainsi a répondre a la question << Quand Pierre mange—t—il deux pommes : est—ce
dans le passé, dans le présent ou dans le futur ? >>. Ce mécanisme modélise bien le fait que les
sens grammaticaux ne sont pas nécessairement exprimés parce qu’ils répondent a un besoin
communicatif de la part du locuteur, mais plutot parce qu’ils sont imposes par la langue (Voir
a ce sujet Polguere 1998). Ce type de mécanisme, en plus d’étre plausible d’un point de Vue
cognitif, pourrait s’aVérer particulierement utile dans le cadre de la traduction automatique, ou
la représentation sémantique obtenue par analyse dans la langue source n’est pas forcément
exprimable dans la langue cible. ll peut également opérer en situation d’analyse. C’est alors la
chaine sonore qui est donnée en entrée et qui peut étre modifiée si elle n’est pas tout a fait
bien formée, ce qui permettrait de contourner certains problemes liés au bruit ou aux erreurs
de performance. Ces hypotheses n’ont toutefois pas encore été Validées par expérimentation.

4.3 Interface syntaxe-morphotopologie

Nous allons simplifier la présentation de l’interface syntaxe—morphotopologie au maximum en
ne traitant pas réellement la morphologie (nous associons directement un lexeme et les

grammemes qui lui correspondent a une forme fléchie) et en adoptant une structure
topologique conventionnelle du type de celle des grammaires syntagmatiques (cf. Gerdes &

Grammaire d’Umﬁcati0n Sens—Texte : modularite’ et polarisation

Kahane 2004 pour une étude de la topologie du francais et Gerdes & Kahane 2001 pour une
modélisation formelle). La grammaire de bonne formation topologique est donc équivalente a
une grammaire de réécriture hors—conteXte (cf. Kahane 2004 pour la simulation en GUP des
grammaires de réécriture) : elle construit un arbre de constituants topologiques et son
principal objectif est d’indiquer dans quel ordre se trouvent les constituants freres (cf. regle
R1 équivalente a S —> GN GV)5. L’interface syntaXe—morphotopologie contient trois types de
regles : des regles pour le sous—constituant téte (cf. regle R2 disant que GV est la téte de S et
que donc GV et S sont synchronisés avec le meme noeud syntaxique), des regles pour le
placement d’un dépendant (cf. regle R3 disant que le sujet correspond au GN sous S) et des
regles de << morphologie >> (cf. regle R4 disant que mange <=> MANGER1-nd, Prés’ 3, 5g). Cette
interface est assez proche d’une grammaire LFG (Bresnan 1999), assurant comme elle la
synchronisation d’une structure de constituants avec une structure de dépendance, mais la
polarisation permet d’eXpliciter ce que chaque regle construit réellement et de découper
davantage l’information (par exemple, nos trois premieres regles correspondent a une unique
regle LFG : S —> GN[J,=’|‘Subj] GV[J,=’|‘]). Dans la Figure 6, nous n’indiquons que la polarité
propre a chaque module (pm, dans R1 et psymmpo dans les autres).

   

GV MANGER. ............. .0

 
    
 

   

 . . I . . . . . . . . . 
pdd : V  ..... ..
mode .indic  ....... 

R4 temps .Prés   mange
pers .3 
nbre .sg

   

Figure 6 — Morphotopologie

5 Conclusion

Notre article porte essentiellement sur l’architecture d’un modele linguistique. Nous avons
propose un modele modulaire (3 grammaires de bonne formation et 2 grammaires d’interface
dans la Version simplifiée présentée ici) permettant de gérer différents niveaux d’organisation
et différents types de structures (graphe, arbre, arbre ordonné) et pourtant nous utilisons un
unique formalisme. Cela nous permet de combiner les regles dans n’importe quel ordre et
permet aux différents modules d’interagir constamment. De plus, la saturation des structures
ainsi que l’interaction des modules sont soigneusement controlées grace a la polarisation
(généralement multiple) de tous les objets. Chaque polarité ayant un role bien déterminé, nous
pouvons diriger l’application du modele. On peut ainsi choisir entre une procédure en largeur
et une procedure en profondeur : en privilégiant la neutralisation de tous les objets portant une

5 Les noeuds gris dans la régle R1 servent a indiquer le début et la fin des constituants. I1 recoivent une polaiité

pm, grise, c’est-a-dire qu’i1s sont absolument 11eutres et peuvent se combiner librement a chaque fois qu’une
unification d’arc l’oblige. Ils n’auront pas de polaiité psyn,_,0p0,puisqu’ils n’ont pas de correspondant au niveau
syntaxique. A noter que, comme pour le niveau syntaxique, une deuxiéme polanté, non considérée 1c1, est
nécessaire pour assurer la structure d’arbre et vérifier que chaque << arc » est gouverné.

Sylvain Kahane et Francois Lareau

polarité propre a un module, les modules s’appliqueront les uns a la suite des autres, tandis
qu’en privilégiant la neutralisation de toutes les polarités associées a un objet, chaque élément
de la structure d’entrée sera traité du sens au texte (ou Vice-Versa). Il est important de noter
que la procédure en profondeur n’est possible que parce qu’un meme formalisme a été utilise
pour l’ensemble des modules. Nous avons également Vu que, grace a l’interaction étroite des
différents modules, une GUST peut accepter en entrée une représentation sémantique sous-
spécifiée ou tous les sens ﬂexionnels sont absents, et générer quand meme des phrases bien
formées en ajoutant a la représentation initiale les sens ﬂexionnels qu’impose la langue.
Enfin, comme l’ont montré Bonfante et al. (2004), la polarisation permet un filtrage efficace
des regles réduisant les calculs sans issue.

Le développement d’un modele du francais est en cours. Le noyau central de la topologie du
francais est décrit par Gerdes & Kahane (2004), la syntaxe des temps du francais est décrite
par Lareau (2004), d’autres points de l’interface sémantique-syntaxe (les distorsions entre
syntaxe et sémantique et les questions de portée des quantificateurs) sont étudiés par Kahane
(2003, 2005). L’implémentation de GUST dans le formalisme GUP est également en cours.
Mais davantage que la couverture, l’accent est mis sur la propreté du traitement théorique et
l’adéquation de la formalisation.

Références

BRESNAN J. (1999), Lexical-Functional Syntax, Blackwell.

BONFANTE G., GUH.LAUME B. & PERRIER G. (2004), Polarization and abstraction of grammatical
formalisms as methods for lexical disambiguation, Actes C0Ling, Geneve, 303-309.

GERDES K. & KAHANE S. (2001), Word order in German: A formal dependency grammar using a
topological hierarchy, Actes ACL, Toulouse, 220-227.

GERDES K. & KAHANE S. (2004), L’amas verbal au cceur d’une modélisation topologique du francais,
Actes Journe’es de la syntaxe — Ordre des mots dans la phrase jrancaise, positions et topologie,
Bordeaux, 8 p.

KAHANE S. (2000), Des grammaires formelles pour définir une correspondance, Actes TALN,
Lausanne, 197-206.

KAHANE S. (2001), Grammaires de dépendance formelles et théorie Sens-Texte, Tutoriel, Actes TALN,
vol. 2, 17-76.

KAHANE S. (2004), Grammaires d’unification polarisées, Actes TALN, Fes, 233-242.

KAHANE S. (2005), Structure des representations logiques, polarisation et sous-specification, Actes
TALN, Dourdan, 10 p.

LAREAU F. (2004), Vers un modele formel de la conjugaison jrangaise dans le cadre des grammaires
d ’uniﬁ'cation Sens-Texte polarise’es, Document pour l’examen general de synthese, Montréal,
Université de Montréal.

MEL’CUK I. (1997), Vers une linguistique sens-texte .' legon inaugurale, Paris, College de France.
MEL’CUK I. (2001), Communicative Organisation of Natural Language, Benjamins.

NASR A. (1995), A formalism and a parser for lexicalised dependency grammars, 4th Int. Workshop
on Parsing Technologies, State University of New York Press.

POLGUERE A. (1998), Four un modele stratifié de la lexicalisation en génération de texte, TAL, 39:2,
57-76.

SHIEBER S. M. & SCHABES Y. (1990), Synchronous tree-adjoining grammars, Proceedings of the
13th Int. Conference on Computational Linguistics, vol. 3, 253-258, Helsinki, Finland.

