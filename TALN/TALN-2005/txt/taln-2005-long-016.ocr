TALN 2005, Dourdan, 6-1 0 juin 2005

Structure des representations logiques,
polarisation et sous-specification

Sylvain Kahane

Modyco, Universite Paris 10
Lattice, Universite Paris 7
sk@ccr.jussieu.fr

Resume — Abstract

Cet article s’interesse a la structure des representations logiques des enonces en langue
naturelle. Par representation logique, nous entendons une representation semantique incluant
un traitement de la portee des quantificateurs. Nous montrerons qu’une telle representation
combine fondamentalement deux structures sous-jacentes, une structure << predicative >> et une
structure hierarchique logique, et que la distinction des deux permet, par exemple, un
traitement elegant de la sous-specification. Nous proposerons une grammaire polarisee pour
manipuler directement la structure des representations logiques (sans passer par un langage
lineaire avec Variables), ainsi qu’une grammaire pour l’interface semantique-syntaxe.

This paper aims at the structure of logic representations in natural languages. By logic
representation we mean a semantic representation including a quantifier scope processing. We
show that such a representation basically combines two underlying substructures, a
“predicative” structure and a logic hierarchic structure, and that the identification of the two
allows for an elegant processing of underspecification. We will propose a polarized grammar
that directly handles the structure of logic representations (without using a linear language
with Variables), as well as a grammar for the semantics-syntax interface.

Mots Cles —KeyWords

Logique du premier ordre, calcul des predicats, representation semantique, relation predicat-
argument, quantificateur, grammaire d’unif1cation polarisee, grammaire de dependance, dag,
interface syntaxe-semantique.

First order logic, predicate calculus, semantic representation, predicate-argument relation,
quantifier, polarized unification grammar, dependency grammar, dag, syntax-semantics
interface.

1 Introduction

Les obj ectifs de cet article sont multiples. D’un point de vue mathematique, il s’agit de mieux
comprendre la structure des formules logiques du premier ordre (= formules du calcul des

Sylvain Kahane

predicats), notamment lorsque celles-ci sont utilisees comme representations semantiques
d’enonces en langue naturelle. Il s’agit en particulier de mieux comprendre la nature des
quantiﬁcateurs et de leur portee. D’un point de vue linguistique, il s’agit de combiner deux
modes de representations utilises en semantique des langues naturelles : des representations
logiques, utilisees en semantique non lexicale et issues des travaux de Frege et d’autres
logiciens, et des representations issues de la semantique lexicale, qui traitent tous les signiﬁes
lexicaux comme des predicats, y compris les quantificateurs et la negation (cf. Dymetman &
Coperman 1996 pour une problematique analogue).

La section 2 introduira differentes << ecritures >> pour une representation logique et mettra en
evidence les deux structures sous-jacentes, tandis que la section 3 proposera une grammaire
permettant de manipuler directement de telles structures, de realiser une interface semantique-
syntaxe et de contr6ler la sous-specification.

2 Représentationlogique

2.1 Variations sur la representation logique

Cette section s’articulera autour des differents modes de representation du sens d’un enonce
comportant plusieurs quantiﬁcateurs. Nous travaillerons avec l’enonce suivant :

(1) Tout homme aime unefemme.
On lui associe generalement la representation logique suivante :
(2) Vx [homme'(x) —> Ely [femme'(y) A aimer'(x,y)]]

En s’autorisant la confusion entre un predicat et son extension, on peut utiliser la
representation suivante, plus proche de la langue naturelle :

(3) VxEhomme' [E|yEfemme' aimer'(x,y)]

Dans une telle representation, un quantiﬁcateur est lie a trois objets: une variable, une
restriction (sur cette Variable) et la portée. Pour le quantiﬁcateur V en (3), il s’agit
respectivement de la Variable x, de la restriction homme'(x) et de la sous-formule E|yEfemme'
aimer'(x,y). De nombreuses approches en semantique (VVoods 1975, Copestake et al. 1999)
rendent cette structure explicite en associant a (1) la representation suivante :

(4) tout'(x, homme'(x), un'(y, femme'(y), aimer'(x,y)))

On pourra ainsi representer les autres quantiﬁcateurs (certains, quelques, la plupart de, etc.)
de la meme facon que tout et un, c’est-a-dire par un predicat a trois arguments. La formule en
(4) possede une structure arborescente que nous donnons en (5) :

(5) tout‘

/|\_

x homme'

I /“ix

x y femme' aimer'

y X y
La representation des quantiﬁcateurs comme des predicats a trois arguments est consequente a
l’utilisation d’une variable liee, qui n’a pas de contribution semantique, mais uniquement un
role structural en liant differentes positions de la formule. La Variable n’est utile qu’en raison

Structure des représentations logiques

de l’écriture linéairel de la formule en (4). On peut en effet supprimer la Variable en (5) en
associant a (4) non pas un arbre, mais un dag2, c’est-a-dire une structure réentrante ou les
différentes occurrences de la Variable correspondent a un seul noeud. Mais ce noeud fait alors
double emploi avec le noeud de homme' et on peut considérer que la variable x n’est en fait
qu’une réification de cet élément sémantique. Ceci est assez cohérent avec le fait que le
sémanteme ‘homme’, le signiﬁé du nom homme, représente en fait une entité (un objet du
monde), qui méme s’il est indéterminé, n’est pas en soi un prédicat unaire (le prédicat unaire
homme' que nous avions introduit correspond a l’expression étre un homme plut6t qu’au nom
homme proprement dit). Nous obtenons ainsi une nouvelle représentation pour (1)3 :

(6) ‘tout’
$2
Lun7
2 1

  
 
 

‘aimer’
/ K
‘homme’ ‘femme’

Bien que directement liée aux représentations logiques les plus classiques, cette représentation
n’a jamais été proposée a notre connaissance. Polguere (1992) propose une représentation tres
similaire, en ajoutant a une structure prédicative (voir caractérisation plus bas) un argument
de portée pour les quantiﬁcateurs ; mais contrairement a ici, la portée est explicitement
représentée comme une portion de la structure prédicative, alors que nous l’encodons, comme
nous le Verrons plus loin, par une relation hiérarchique.

Dans cette nouvelle représentation, les quantiﬁcateurs (‘tout’ et ‘un’) sont explicitement des
opérateurs a deux arguments (cf. Barwise & Cooper 1981). En fait, méme dans la
representation (4), en raison du caractere lié de la Variable, le quantiﬁcateur est aussi un
opérateur a deux arguments, dont on peut donner le lambda-terme 7»P7tQ.[tout'(x,P(x),Q(x))],
ou méme 7»P7»Q.[tout'(7\x[P(x),Q(x)])], en explicitant le caractere lié de la variable x.

Nous adopterons dorénavant la représentation proposée en (6), que nous appellerons la
représentation sémantique de l’énoncé (1). Nous allons maintenant étudier plus en détail la
structure de cette représentation. Elle combine en fait deux sous-structures: une structure
prédicative et une structure hiérarchique liée a la portée.

Notons auparavant que notre représentation sémantique n’est pas moins riche que la
représentation logique traditionnelle (en (2), (3) ou (4)), puisqu’on peut revenir a la
représentation logique en réiﬁant (a la facon de Davidson 1967 pour les évenements) les
sémantemes sur lesquels pointent les quantiﬁcateurs, c’est-a-dire en leur associant une
Variable, en leur ajoutant cette Variable comme argument et en donnant cette variable comme
argument aux prédicats pointant sur eux (voir section 3.4 pour un exemple).

1 On utilise aussi la variable pour désigner les référents de discours. Néanmoins, cet usage devrait étre

nettement séparé de l’autre, car dans ce deuxieme cas la variable renvoie a un objet du monde et ne devrait
pas ﬁgurer comme argument d’un sémanteme, si l’on distingue sens et dénotation.

On appelle dag un graphe orienté acyclique (de l’anglais directed acyclic graph).

La structure en (5) est un arbre ordonné, c’est-a-dire que les ﬁls de chaque noeud sont ordonnés, indiquant
ainsi pour chaque prédicat quel est son premier (deuxieme ...) argument. En (6), nous adoptons une autre
convention: les différents arcs du graphe sont étiquetés pour indiquer les différentes places argumentales.
Par ailleurs, comme nous le Verrons, ce graphe est partiellement hiérarchisé : les arcs droits correspondent a
la structure arborescente sous-jacente (la structure hiérarchique logique, section 2.2).

Sylvain Kahane

2.2 Représentation logique et structure prédicative

La structure que nous appelons prédicative (qu’on aurait pu aussi appeler structure
argumentale) est un graphe de relations prédicat-argument, ou les prédicats représentent des
sémantemes, c’est-a-dire les signiﬁes des éléments lexicaux de l’énoncé. Une telle structure
est utilisée comme représentation sémantique par la théorie Sens-Texte (Mel’cuk 1988,
Polguere 1992, Kahane 2001). Une relation prédicative correspond a une relation actancielle
ou modificative et doit étre << Validée >> par une relation de dépendance syntaxique4. En tant
que prédicat sémantique, les quantiﬁcateurs n’ont qu’un argument : le nom qu’ils
déterminent. La portée est d’une nature différente : cela n’aurait pas de sens de considérer
qu’il existe en (1) une relation prédicative entre tout et un, car il n’y a aucune relation
syntaxique entre eux. La structure prédicative de (1) est donc :

(7) ‘tout’ ‘aimer’ ‘un’
1 2

N / \ /‘

‘homme’ ‘femme’
Par déﬁnition, la structure prédicative est tres proche de la structure syntaxique, lorsque celle-
ci est représentée par un arbre de dépendance syntaxique. Nous donnons en (8) l’arbre

syntaxique de (1) ainsi que le graphe hiérarchisé obtenu en superposant au graphe en (7) la
hiérarchie de l’arbre syntaxique.

(8) AIMER ‘ aimer’
S9//\§“ K}/\\§t
HOM1\/[E FEMNIE ‘ homme’ ‘ femme’
dét| |dét IT ﬁ
TOUT UN ‘tout’ ‘un’

On Voit que la structure syntaxique est en quelque sorte une hiérarchisation de la structure
prédicative. Or la représentation sémantique possede également une hiérarchie sous-jacente,
mais celle-ci est différente et rend compte des relations de portées. Nous donnons en (9) la
structure hiérarchique logique de (1), ainsi que l’arbre de décomposition de la formule
logique en (3) :

"[OL1'[’ Vx
‘9’ 12 I
L un7 3
2 
‘aimer’ aimer'

/ K / \
‘homme’ ‘femme’ x y

Comme on le Voit en (9), c’est la structure hiérarchique que privilégie la représentation
logique traditionnelle, au détriment de la structure prédicative. On peut noter des distorsions

4 I1 existe en fait un certain nombre de distorsions possibles er1tre la structure prédicative et la structure

syntaxique (Mel’cuk 1988, Kahane 2001). C’est le cas par exemple des phénomenes de montée, comme dans
Pierre semble dormir, ou la relation prédicative er1tre ‘dorrnir’ et ‘Pierre’ est Validée par la relation
syntaxique sujet er1tre semble et Pierre.

Nous laissons de cote une question fort intéressante, mais qui dépasse le cadre de cet article. 11 s’agit des
liens er1tre la structure inforrnationnelle et la structure logique. La théorie Sens-Texte n’a par exemple jamais
introduit de structure hiérarchique explicite, considérant que celle-ci n’est qu’une consequence de la structure
communicative et notamment de la partition theme-rheme (Polguere 1992, Me1’cuk 2003).

Structure des représentations logiques

notables entre la hierarchie logique et la hierarchie syntaxique, sources de reelles difﬁcultes
pour l’interface semantique-syntaxe, lorsque la structure semantique repose sur la hierarchie
logique comme en (2)-(4). La structure logique est d’ailleurs plus directement liee a l’ordre
lineaire qu’a la structure syntaxique, a notre avis. Ainsi, en (l0)a et b, dans l’interpretation
preferee6, ‘tout’ est dans la portee de ‘un’, a l’inVerse de (1), alors que l’ordre des
quantiﬁcateurs dans la phrase est egalement l’inVerse de celui de (1) :

(10) a. Unefemme est aimée de tout homme.
b. I] y a unefemme que tout homme aime.

La representation semantique que nous avons adoptee peut étre etendue, par exemple pour
traiter des modifieurs. Dans un homme heureux, ‘heureux’ sera traite comme un predicat
unaire ayant comme argument ‘homme’ et se trouvant dans la portee de ‘homme’ (la relation
predicat-argument et la portee auront des sens opposes). Ce predicat peut lui-meme étre
modiﬁe, par exemple, par ‘tres’. La portion de la representation se trouvant dans la portee
d’un semanteme representant une entite restreint l’extension de ce semanteme et contribue a
la restriction du quantiﬁcateur portant sur cette entite7.

Nous allons maintenant proposer une grammaire permettant de generer nos representations
semantiques, avant de l’étendre pour en faire une interface semantique-syntaxe.

3 Une grammaire pour les représentations logiques

Nous allons proposer une grammaire << lexicalisee >> pour les representations logiques, c’est-a-
dire une grammaire qui construit la representation en combinant des morceaux de structure
associes aux differents semantemes. Nous nous tournons vers un formalisme capable de
manipuler des graphes, les grammaires d’uniﬁcation polarisees (Kahane 2004). Nous
rappelerons brievement ce formalisme avant de presenter notre grammaire semantique.

3.1 Grammaires d'uniﬁcation polarisées

Les grammaires d'uniﬁcation polarisees sont des grammaires permettant de generer des
ensembles de structures ﬁnies. Une structure repose sur des objets. Par exemple, pour un
graphe (oriente), les obj ets sont les noeuds et les arcs. Chaque arc est lie a deux noeuds par les

6 Come on le sait, il est possible qu’un quantiﬁcateur en deuxieme position ait une portee large. Par exemple

(10)a peut eventuellement recevoir la meme interpretation que (1), mais une telle interpretation est plus

difﬂcile d’acces et doit etre conditionnee par le contexte ou les connaissances du monde.

7 Nous pouvons traiter d’autres types de restrictions, comme une relative ou une participiale. Ainsi, pour la

phrase Tout homme aimant unefemme est heureux, les relations de portees seront :

6

‘tout’ —2—> ‘heureux’ —1—> ‘homme’ :> un’ —2—> ‘aimer’ —2—> ‘femme’.
La relation de portee entre ‘homme’ et la participiale est << validee » par la relation predicative ‘aimer’ —1—>
‘homme’, qui est dans le sens inverse (comme pour un adjectif).

Les syntagmes nominaux complexes, comme dans Tout locuteur de deux langues est heureux, posent un
probleme interessant. Ici les relations de portees sont :

‘tout’ —2—> ‘deux’ —2—> ‘heureux’ —1—> ‘locuteur’ —1—> ‘langue’.
Il est egalement interessant de comparer des exemples come (i) Les soldats fatigués se sont arretés et
(ii) Les soldats, fatigués, se sont arretés. La structure predicative est la meme (‘s’arreter’ —1—> ‘soldat’
<—1— ‘fatigue’), mais, en (i) seulement, ‘fatigue’ restreint la portee du quanﬁficateur et doit etre dans la
dependance logique de ‘soldat’.

Sylvain Kahane

fonctions source et cible. Ce sont ces fonctions qui fournissent la structure proprement dite.
Une structure polarisée est une structure dont les obj ets sont polarisés, c’est-a-dire étiquetés
par une Valeur appartenant a un ensemble fini P de polarités. L'ensemble P est muni d'une
opération commutative et associative notée << . », appelée produit. Un sous-ensemble N de P
contient les polarités dites neutres. Une structure polarisée est dite neutre si tous ses objets
sont neutres.

Nous allons utiliser un systeme de polarités P =
{ ,0,0}, avec N = { ,0}, et un produit déﬁni par
le tableau suivant (ou J. représente l’impossibilité
de se combiner). Nous appellerons nos polarités O O O
= noir = saturation, O = blanc = contexte . .
(obligatoire) et = gris = neutre absolu.

0000
I-000

Les structures peuvent étre combinées par uniﬁcation. L'unification de deux structures A et B
donne une nouvelle structure AC-BB obtenue en << collant >> ensemble ces structures par
l'identiﬁcation d'une partie des objets de la premiere structure avec ceux de la deuxieme.
Lorsque deux structures polarisées A et B sont unifiées, la polarité d'un obj et de AC-BB obtenu
par identification de deux obj ets de A et B est le produit de leurs polarités.

Une grammaire d'umﬁcati0n polarisée (GUP) est définie par une famille finie T de types
d'objets (avec des fonctions attachées aux différents types d'objets), un systeme (P,.) de
polarités, un sous-ensemble N de P de polarités neutres, et un ensemble fini de structures
élémentaires polarisées, dont les objets sont décrits par T et dont une est éventuellement
marquee comme la structure initiale (et appelée top dans la suite). Les structures générées par
la grammaire sont les structures neutres obtenues par combinaison de l’éVentuelle structure
initiale et d'un nombre fini de structures élémentaires.

Rappelons que le formalisme est monotone (avec l’ordre < O < 0 sur les polarités) et que
les structures peuvent étre combinées absolument dans n’importe quel ordre.

3.2 Une grammaire sémantique

Nous allons présenter notre grammaire en plusieurs étapes pour en faciliter la compréhension
et pour en montrer le caractere élémentaire.

La structure prédicative est un graphe. Elle peut donc étre générée par une grammaire aussi
simple que gpféd, ou chaque prédicat ancre un morceau du graphe avec ses arguments : le
noeud du prédicat est saturé et les positions des arguments doivent étre remplies et sont

polarisées en blanc.
‘almer’ ‘tout’ ‘un

gpréd 1 2 C . I1

d I o d: o 1
‘homme’ ‘femme’

d I 0 Q d : 0

Nous avons ajouté une polarité supplémentaire d : O et d : 0 sur certains noeuds. La polarité
d : O indique que ces sémantemes sont indéterminés. Un sémanteme d’une entité déterminée,
comme ‘Paul’, recevra une polarité d : 0. La polarisation multiple fonctionne ainsi : si un
obj et A de polarités (x, y) et un obj et B de polarités (2, t) sont identiﬁes, l’objet résultant recoit
le couple de polarités (x.z, y. t).

La structure logique est un arbre. La structure d’arbre est tres facile a encoder avec une GUP
(Kahane 2004) : il suffit d’assurer que chaque élément autre que la racine ait un unique

Structure des représentations logiques

gouverneur (la connexité étant elle assurée par définition). Nous obtenons la grammaire Qlog,
ou chaque sémanteme ancre la racine d’un sous-arbre. Nous typons, selon l’usage, les noeuds
en deux classes : e pour les entités et t pour les propositions (truth value).

top : Q (t) (t) ‘aimer’ O(e) ‘homme’ (t) ‘tout’ (t) ‘un’

glog 1 2 2 2

(e) (e) 0(6) ‘fame’ (t) (o

En superposants gpféd et Qlog, nous obtenons la grammaire sémantique Qsém = gpréd x Qlog. Du
fait de la superposition, chaque noeud hérite d’un couple de polarité. Un noeud qui n’apparait
pas dans une des deux grammaires est considéré comme neutre absolu la ou il n’apparait pas.
Nous notons (0,0) = 0 et (0,0) = 0. On remarquera que 0 et 0 se comportent comme des
polarités opposés de type besoin-ressource.

t :; =- = d (t)‘t t’ (t)‘ ’
gsém 0P (t) 1 :5) almer O (eﬁhomme, 1 2 0” 1 2 11“
d: 0 id; ‘ e V Z ‘
(C) (9) 0 (e) ‘femme’ (9). tie). (t)

Nous devons encore enrichir un peu gsém pour assurer que la restriction d’un quantificateur
est dans sa portée. Une GUP permet facilement de contr6ler le chemin entre deux noeuds :
nous ajoutons pour cela un lien de dominance dans la structure du quantiﬁcateur entre la
portée et la restriction. Une grammaire dédiée permet de << réécrire >> ce lien de dominance en
une chaine de dépendance. On peut facilement contr6ler la nature de cette chaine, puisqu’une
GUP peut simuler n’importe quelle grammaire de réécriture (Kahane 2004). Nous donnons ci-
dessous la grammaire Qsém révisée, avec les structures completes pour les quantiﬁcateurs et, a
droite, les deux regles nécessaires a la propagation de la dominance, ou les liens de
dominance sont représentés par des ﬂeches pointillées.

 

om ‘un’ 00) ‘tout’ : (t) (t)
Qsém (révisée) 1 E 1 E‘ X i
.....--’(t)  (t)   (t)
9-" l>' vI>‘
(e) dz. (9) dI0 (e)

3.3 Interface sémantique-syntaxe

Nous appelons interface sémantique-syntaxe une grammaire capable de faire se correspondre
une représentation sémantique et une représentation syntaxique. La difficulté de la tache Vient
du fait qu’il y a entre les deux représentations des distorsions importantes au niveau de la
hiérarchie entre les élémentsg. Le probleme a été étudié dans le cadre de nombreux

8 Comme l’a fait remarquer un relecteur, la superposition des grammaires est un cas particulier de

synchronisation (voir section 3.3). Celle-ci est possible quand les deux grammaires manipulent les mémes
objets.

Le fait que notre représentation syntaxique soit un arbre de dépendance plutét qu’un arbre syntagmatique ne
change pas fondamentalement le probleme. Nous préférons pour notre part traiter la question de l’ordre
linéaire séparément et considérer une structure syntaxique sans ordre linéaire.

9

Sylvain Kahane

formalismes a commencer par la grammaire de Montague (1973). Celle-ci privilégie
l’organisation logique, alors que des travaux plus récents tendent a favoriser l’organisation
syntaxique, comme Copestake et al. 1999 avec HPSG ou Kallmeyer & Joshi 1999 avec TAG.

Pour notre part, nous résolvons le probleme de maniere triviale, en synchronisant notre
grammaire sémantique avec une grammaire de dépendance syntaxique, sans privilégier aucun
des deux niveaux de représentation. Seule la structure prédicative est prise en compte dans
cette interface sémantique-syntaxe (I5ém-5ynt). En combinaison avec Qsém et Qsym, elle permet
de construire parallelement les représentations sémantiques et syntaxiqueslo. En GUP, la
synchronisation de deux grammaires s’effectue simplement en alignant les deux grammaires
et en synchronisant certains noeuds (cf. Shieber & Schabes 1990, Perrier 2004, Kahane &
Lareau 2005). La synchronisation est assurée par des liens dit de synchronisation qui
obligeront, lorsqu’on identifie deux noeuds dans une des structures, a identifier les noeuds qui
sont synchronisés avec eux dans l’autre structure. L’obligation d’uniﬁer les liens de
synchronisation (et donc de synchroniser les éléments qu’ils relient) est encore une fois
assurée par la polarisation (représentée dans des losanges).

     

Isém-synt gsém+-Isém-synt + gsynt
(N)  ‘tout’
(e) O ................ -0 ............. ..O I 1 2 ......  (N)
i J7det Jt)  ____ ..
1   --- " det

<0 ‘tout’ .................. -, .............. -O (D) TOUT _:' .......... ~-  ....... _. (D) TOUT
d : 0
(6)

Notre grammaire est équivalente au niveau de l’expressiVité aux autres interfaces sémantique-
syntaxe évoquées et s’apparente tout particulierement a la grammaire proposée par Perrier
2004, qui est a notre connaissance le premier a avoir utilisé une grammaire polarisée pour
traiter les représentations logiques et la sous-specification. Notre grammaire peut étre utilisée
pour l’analyse comme pour la synthese et sera compatible avec diverses procédures. Une
procédure pour une GUP consiste a donner un ordre dans le traitement des structures (par
exemple suivre l’ordre imposé par la hiérarchie logique ou syntaxique) et choisir un ordre
dans la neutralisation des polarités. L’un de ces ordres mérite quelques commentaires.

3.4 Sous-spéciﬁcation et neutralisation partielle

Lorsqu’on utilise notre grammaire pour l’analyse, on remarque que la structure syntaxique ne
permet pas de décider quelle doit étre la portée respective des quantificateurs. Pour ne pas
introduire une ambigu'1'té qu’on n’a pas les moyens de résoudre, on peut préférer construire
une représentation sémantique ou la hiérarchie logique reste sous-spécifiée. Cette question a
été beaucoup étudiée dans la littérature récente (Reyle 1993, Bos 1995, Copestake et al. 1999,
Kallmeyer & Joshi 1999, Perrier 2004). Dans notre cadre, la solution est élémentaire : il suffit
de ne pas chercher a neutraliser les polarités qui contr6lent la hiérarchie logique (c’est-a-dire

10 Notre grammaire syntaxique gsynt a été décrite dans de nombreux articles (notamment Kahane 2001 et
Kahane & Lareau 2005). Le fait que les noms doivent avoir un unique déterrninant est ici assure’ par la
polarité d de la grammaire sémantique. I1 faut néanmoins noter que des éléments sémantiquement déterrninés
comme ‘Paris’ ou ‘la France’ peuvent étre on non syntaxiquement déterrninés (la France vs en France) et
qu’un traitement syntaxique de la détermination doit venir compléter le traitement purement sémantique.

Structure des representations logiques

de ne pas considerer gpféd lors de l’analyse). On obtient, pour (1) ou (10), la representation
sémantique sous-spéczﬁée (11) (en Version simpliﬁee a droite, en mettant en Vis-a-Vis les
noeuds qui fusionneront pour obtenir (6)), ou comme on le Voit les seules polarites non neutres
sont les polarites blanches associees a la hierarchie logique :

 

(11) ‘tout’ (t) ‘('0 (t) ‘un’
1 2 2 1
Lun7
(t) *3 /ct) 2 1
IL.
 mer’

1 2

d : 0 .d I O

‘homme’ (e) (e) ‘femme’ ‘homme’ ‘femme’

Autrement dit, l’interface syntaxe-semantique est uniquement realisee entre la structure
syntaxique et la structure predicative. C’est ce que preconise depuis les annees 60 la theorie
Sens-Texte, originellement concue pour la traduction automatique, ou la levee des ambigu'1'tes
logiques est generalement inutile.

Notons que la representation semantique en (11) peut étre traduite en une ecriture lineaire en
reiﬁant les differents noeuds : p pour la racine,p1 etpz pour les quantiﬁcateurs ‘tout’ et ‘un’, e
pour le predicat ‘aimer’, x et y pour les entites ‘homme’ et ‘femme’ et hl et hz pour les portees
des quantiﬁcateurs (h pour hole, d’apres la Hole Semantics de Bos 1995) :

(12) topzp, p1:‘tout’ (x,h1),p2:‘un’(y,h2), e:‘aimer’(x,y), x:‘homme’, y:‘femme’
ou encore avec une double reiﬁcation des entites (en introduisant les variables on et a2) :
(13) top:p, p1:tout'(x,a1,h1), p2:un'(y,a2,h2), e:aimer'(x,y), a1:homme'(x), a2:femme'(y)

Les relations de dominance, ainsi que la necessite de neutraliser les trous hl et hz, seront
donnees par des conditions telles que :

(14) p 2191 > hl 2 e,p 2192 > hz 2 e, {p.h1,/12} = {apupz}

Meme si les deux representations, (11) et (13)+(14) (qui est la representation de Copestake et
al. 1999) sont (quasiment) equivalentes, on peut Voir un avantage a utiliser des structures
polarisees et a ne pas utiliser d’ecriture lineaire forcant l’introduction de multiples Variables.

4 Conclusion

Notre contribution concerne la representation semantique des enonces et tout particulierement
la structure logique, c’est-a-dire la representation des phenomenes de portee. Nous n’aVons
pas reellement aborde de questions de logique, c’est-a-dire la facon dont nos representations
pouvaient servir directement a un calcul logique. De ce point de Vue, nous nous sommes
couverts par la possibilite de revenir aux formules usuelles de la logique du premier ordre,
mais une description directe de l’inference dans notre formalisme serait certainement
interessante. Notre obj ectif etait d’aVoir une representation qui soit a la fois suffisante pour
l’interpretation logique, mais qui permette aussi un traitement adequat d’autres phenomenes
semantiques qui ne se manifestent pas en termes de portee.

Le veritable point de notre contribution est d’aVoir rappele que la structure semantique des
enonces n’est pas lineaire et qu’il y a tout interét dans ces conditions a utiliser un langage qui

Sylvain Kahane

permette de manipuler directement des arbres, des graphes et des produits des deux. Nous
avons ainsi montré qu’une représentation sémantique est la superposition d’une structure
prédicative et d’une structure hiérarchique encodant les relations de portée. Lorsqu’on ne
privilégie plus la relation de portée, comme le fait la logique classique, il devient facile de
définir une représentation sous-spécifiée en << neutralisant >> une des deux structures
seulement.

Remerciements

J e remercie chaleureusement pour leurs commentaires Pascal Amsili, Laurence Danlos, Laura
Kallmeyer, Francois Lareau, Guy Perrier, Alain Polguere, Igor Mel’cuk, Benoit Sagot et les
trois relecteurs de TALN.

Références

BARWISE J. & COOPER R. (1981), Generalized quantiﬁers and natural language, Linguistics and
Philosophy, 4, 159-219.

BOS J. (1995), Predicate Logic Unplugged, Tenth Amsterdam Colloquium.

COPESTAKE A., FLICKINGER D. & SAG I. A. (1999), Minimal Recursion Semantics : An Introduction,
draft, 26 p.

DAVHDSON D. (1967), The Logical Form of Action Sentences, in N. Rescher (ed.), The Logic of
Decision and Action, University of Pittsburgh Press, 81-95. Reprinted in D. Davidson, Essays on
Actions and Events, Oxford: Clarendon Press, 1990,105-122.

DYMETMAN M., COPPERIVIAN M. (1996), Extended dependency structures and their formal
interpretation, Proceedings CoLing, Copenhague.

KAHANE S. (2001), Grammaires de de'pendance formelles et théorie Sens-Texte, Tutoriel, Actes TALN,
vol. 2, 17-76.

KAHANE S. (2004), Grammaires d'uniﬁcation polarise'es, Actes TALN, Fes, 233-242.

KAHANE S. & LAREAU F. (2005), Grammaire d’Uniﬁcation Sens-Texte : polarisation et modularite',
Actes TALN, Dourdan, 10 p.

KALLMEYER L. & JOSHI A. (1999), Factoring predicate argument and scope semantics: Underspecied
semantics with LTAG, Proceedings of the 12th Amsterdam Colloquium.

MEL’CUK I. (1988), Dependency Syntax: Theory and Practice, SUNY Press.

MEL’CUK I. (2003), Communicative Organisation of Natural Language, Benj amins.

MONTAGUE R. (1973), The proper treatment of quantification in ordinary English, in J. Hintikka (e'd.),
Approaches to Natural Language, 221-242, Reidel.

PERRIER G. (2004), La sémantique dans les grammaires d'interaction, Actes TALN, Fes, Maroc, 351-
360.

POLGUERE A. (1992), Remarques sur les re'seaux se'mantiques Sens-Texte, in A. Clas (éd.), Le mot, les
mots, les bons mots, Presses de l’Universite' de Montreal.

REYLE U. (1993), Dealing with ambiguities by underspeciﬁcation, Journal of semantics, 10, 123-179.
SHIEBER S. M. & SCHABES Y. (1990), Synchronous tree-adjoining grammars, Proceedings CoLing,
vol. 3, 253-258, Helsinki, Finland.

WOODS W.A. (1975), What’s in a link: Foundations for semantic networks, in D. Bobrow & A.
Collins, Representation and Understanding—Studies in Cognitive Science, 55-82, Academic Press,
Orlando.

