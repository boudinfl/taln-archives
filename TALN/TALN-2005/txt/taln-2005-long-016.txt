TALN 2005, Dourdan, 6-I0juin 2005

Structure des représentations logiques,
polarisation et sous-spéciﬁcation

Sylvain Kahane

Modyco, Université Paris 10
Lattice, Université Paris 7
sk@ccr.jussieu.fr

Résumé — Abstract

Cet article s’intéresse a la structure des representations logiques des énoncés en langue
naturelle. Par representation logique, nous entendons une representation sémantique incluant
un traitement de la portée des quantiﬁcateurs. Nous montrerons qu’une telle representation
combine fondamentalement deux structures sous-jacentes, une structure « prédicative » et une
structure hiérarchique logique, et que la distinction des deux permet, par exemple, un
traitement elegant de la sous-speciﬁcation. Nous proposerons une grammaire polarisée pour
manipuler directement la structure des representations logiques (sans passer par un langage
linéaire avec variables), ainsi qu’une grammaire pour l’interface sémantique-syntaxe.

This paper aims at the structure of logic representations in natural languages. By logic
representation we mean a semantic representation including a quantiﬁer scope processing. We
show that such a representation basically combines two underlying substructures, a
“predicative” structure and a logic hierarchic structure, and that the identiﬁcation of the two
allows for an elegant processing of underspeciﬁcation. We will propose a polarized grammar
that directly handles the structure of logic representations (without using a linear language
with variables), as well as a grammar for the semantics-syntax interface.

Mots Clés —Keywords

Logique du premier ordre, calcul des prédicats, representation sémantique, relation predicat-
argument, quantiﬁcateur, grammaire d’uniﬁcation polarisée, grammaire de dépendance, dag,
interface syntaxe-sémantique.

First order logic, predicate calculus, semantic representation, predicate-argument relation,
quantiﬁer, polarized uniﬁcation grammar, dependency grammar, dag, syntax-semantics
interface.

1 Introduction

Les objectifs de cet article sont multiples. D’un point de vue mathématique, il s’agit de mieux
comprendre la structure des formules logiques du premier ordre (= formules du calcul des

153

154

Sylvain Kahane

prédicats), notamment lorsque celles-ci sont utilisées comme representations sémantiques
d’énoncés en langue naturelle. Il s’agit en particulier de mieux comprendre la nature des
quantiﬁcateurs et de leur portée. D’un point de vue linguistique, il s’agit de combiner deux
modes de representations utilises en sémantique des langues naturelles : des representations
logiques, utilisées en sémantique non lexicale et issues des travaux de Frege et d’autres
logiciens, et des representations issues de la sémantique lexicale, qui traitent tous les signiﬁes
lexicaux comme des prédicats, y compris les quantiﬁcateurs et la negation (cf. Dymetman &
Coperman 1996 pour une problématique analogue).

La section 2 introduira différentes « écritures » pour une representation logique et mettra en
evidence les deux structures sous-jacentes, tandis que la section 3 proposera une grammaire
permettant de manipuler directement de telles structures, de réaliser une interface sémantique-
syntaxe et de controler la sous-speciﬁcation.

2 Représentation logique

2.1 Variations sur la représentation logique

Cette section s’articulera autour des différents modes de representation du sens d’un énoncé
comportant plusieurs quantiﬁcateurs. Nous travaillerons avec l’énoncé suivant :

(1)

On lui associe généralement la representation logique suivante :
(2)

En s’autorisant la confusion entre un prédicat et son extension, on peut utiliser la
representation suivante, plus proche de la langue naturelle :

(3)

Dans une telle representation, un quantiﬁcateur est lie at trois objets: une variable, une
restriction (sur cette variable) et la portée. Pour le quantiﬁcateur V en (3), il s’agit
respectivement de la Variable x, de la restriction homme'(x) et de la sous-formule E|yEfemme'
aimer'(x,y). De nombreuses approches en sémantique (Woods 1975, Copestake et al. 1999)
rendent cette structure explicite en associant a (1) la representation suivante :

(4)
On pourra ainsi représenter les autres quantiﬁcateurs (certains, quelques, la plupart de, etc.)

de la meme facon que tout et un, c’est-a-dire par un prédicat a trois arguments. La formule en
(4) possede une structure arborescente que nous donnons en (5) :

Tout homme aime unefemme.

Vx [homme'(x) —> Ely [femme'(y) A aimer'(x,y)]]

VxEhomme' [E|yEfemme' aimer'(x,y)]

tout'(x, homme'(x), un'(y, femme'(y), aimer'(x,y)))

(5) tout‘
/ l R
x homme’ un'
| / | R
x y femme' aimer'

y X y
La representation des quantiﬁcateurs comme des prédicats a trois arguments est conséquente a

l’utilisation d’une Variable liée, qui n’a pas de contribution sémantique, mais uniquement un
role structural en liant différentes positions de la formule. La Variable n’est utile qu’en raison

Structure des représentations logiques

de l’ecriture lineairel de la formule en (4). On peut en effet supprimer la variable en (5) en
associant a (4) non pas un arbre, mais un dagz, c’est-a-dire une structure reentrante ou les
differentes occurrences de la Variable correspondent a un seul noeud. Mais ce noeud fait alors
double emploi avec le noeud de homme’ et on peut considerer que la Variable x n’est en fait
qu’une reiﬁcation de cet element semantique. Ceci est assez coherent avec le fait que le
semanteme ‘homme’, le signiﬁe du nom homme, represente en fait une entite (un objet du
monde), qui meme s’il est indetermine, n’est pas en soi un predicat unaire (le predicat unaire
homme’ que nous avions introduit correspond a l’expression étre un homme plutet qu’au nom
homme proprement dit). Nous obtenons ainsi une nouvelle representation pour (1)3 :

(6) ‘tout’

 

Bien que directement liee aux representations logiques les plus classiques, cette representation
n’a jamais ete proposee a notre connaissance. Polguere (1992) propose une representation tres
similaire, en ajoutant a une structure predicative (voir caracterisation plus bas) un argument
de portee pour les quantiﬁcateurs ; mais contrairement a ici, la portee est explicitement
representee comme une portion de la structure predicative, alors que nous l’encodons, comme
nous le verrons plus loin, par une relation hierarchique.

Dans cette nouvelle representation, les quantiﬁcateurs (‘tout’ et ‘un’) sont explicitement des
operateurs a deux arguments (cf. Barwise & Cooper 1981). En fait, meme dans la
representation (4), en raison du caractere lie de la Variable, le quantiﬁcateur est aussi un
operateur a deux arguments, dont on peut donner le lambda-terme 7»P7»Q.[tout'(x,P(x),Q(x))],
ou meme 7»P7»Q.[tout'(7\.x[P(x),Q(x)])], en explicitant le caractere lie de la Variable x.

Nous adopterons dorenavant la representation proposee en (6), que nous appellerons la
représentation sémantique de l’enonce (1). Nous allons maintenant etudier plus en detail la
structure de cette representation. Elle combine en fait deux sous-structures: une structure
predicative et une structure hierarchique liee a la portee.

Notons auparavant que notre representation semantique n’est pas moins riche que la
representation logique traditionnelle (en (2), (3) ou (4)), puisqu’on peut revenir a la
representation logique en reiﬁant (a la facon de Davidson 1967 pour les evenements) les
semantemes sur lesquels pointent les quantiﬁcateurs, c’est-a-dire en leur associant une
Variable, en leur ajoutant cette Variable comme argument et en donnant cette variable comme
argument aux predicats pointant sur eux (voir section 3.4 pour un exemple).

1 On utilise aussi la Variable pour designer les referents de discours. Neanmoins, cet usage devrait etre

nettement separe de l’autre, car dans ce deuxieme cas la Variable renvoie a un objet du monde et ne devrait
pas ﬁgurer comme argument d’un semanteme, si l’on distingue sens et denotation.

On appelle dag un graphe oriente acyclique (de l’anglais directed acyclic graph).

La structure en (5) est un arbre ordonne, c’est-a-dire que les ﬁls de chaque noeud sont ordonnes, indiquant
ainsi pour chaque predicat quel est son premier (deuxieme ...) argument. En (6), nous adoptons une autre
convention : les differents arcs du graphe sont etiquetes pour indiquer les differentes places argumentales.
Par ailleurs, comme nous le verrons, ce graphe est partiellement hierarchise : les arcs droits correspondent a
la structure arborescente sous-jacente (la structure hierarchique logique, section 2.2).

155

156

Sylvain Kahane

2.2 Representation logique et structure predicative

La structure que nous appelons predicative (qu’on aurait pu aussi appeler structure
argumentale) est un graphe de relations predicat-argument, o1‘1 les predicats representent des
semantemes, c’est-a-dire les signiﬁes des elements lexicaux de l’enonce. Une telle structure
est utilisee comme representation semantique par la theorie Sens-Texte (Mel’cuk 1988,
Polguere 1992, Kahane 2001). Une relation predicative correspond a une relation actancielle
ou modiﬁcative et doit etre « validee » par une relation de dependance syntaxique4. En tant
que predicat semantique, les quantiﬁcateurs n’ont qu’un argument : le nom qu’ils
determinent. La portee est d’une nature differente : cela n’aurait pas de sens de considerer
qu’il existe en (1) une relation predicative entre tout et un, car il n’y a aucune relation
syntaxique entre eux. La structure predicative de (1) est donc :

(7)

‘tout’ ‘aimer’ ‘un’
N / VA /1
‘homme’ ‘femme’

Par deﬁnition, la structure predicative est tres proche de la structure syntaxique, lorsque celle-
ci est representee par un arbre de dependance syntaxique. Nous donnons en (8) l’arbre
syntaxique de (1) ainsi que le graphe hierarchise obtenu en superposant au graphe en (7) la
hierarchie de l’arbre syntaxique.

(8) AIMER ‘aimer’
my wed / K
HOMME FEMME ‘homme’ ‘femme’
det| |det 1T ?
TOUT UN ‘tout’ ‘un’

On Voit que la structure syntaxique est en quelque sorte une hierarchisation de la structure
predicative. Or la representation semantique possede egalement une hierarchie sous-jacente,
mais celle-ci est differente et rend compte des relations de portee5. Nous donnons en (9) la
structure hierarchique logique de (1), ainsi que l’arbre de decomposition de la formule
logique en (3) :

 ‘lliélt’ V|x
6111219 
1‘aimer’2 aimer'

/ \ / \
‘homme’ ‘femme’ x y

Come on le Voit en (9), c’est la structure hierarchique que privilegie la representation
logique traditionnelle, au detriment de la structure predicative. On peut noter des distorsions

4 I1 existe en fait un certain nombre de distorsions possibles e11tre la structure predicative et la structure

syntaxique (Mel’cuk 1988, Kahane 2001). C’est le cas par exemple des phenomenes de montee, comme dans
Pierre semble dormir, 011 la relation predicative entre ‘dormir’ et ‘Pierre’ est validee par la relation
syntaxique sujet e11tre semble et Pierre.

Nous laissons de cote une question fort interessante, mais qui depasse le cadre de cet article. 11 s’agit des
liens entre la structure informationnelle et la structure logique. La theorie Sens-Texte n’a par exemple jamais
introduit de structure hierarchique explicite, considerant que celle-ci n’est qu’une consequence de la structure
communicative et notamment de la partition theme-rheme (Polguere 1992, Mel’cuk 2003).

Structure des representations logiques

notables er1tre la hiérarchie logique et la hiérarchie syntaxique, sources de réelles difﬁcultés
pour l’interface sémantique-syntaxe, lorsque la structure sémantique repose sur la hiérarchie
logique comme en (2)-(4). La structure logique est d’ailleurs plus directement liée a l’ordre
linéaire qu’a la structure syntaxique, a notre avis. Ainsi, en (10)a et b, dans l’interprétation
préférée6, ‘tout’ est dans la portée de ‘un’, a l’inVerse de (1), alors que l’ordre des
quantiﬁcateurs dans la phrase est également l’inverse de celui de (1) :

(10) a. Unefemme est aimée de tout homme.
b. Il y a unefemme que tout homme aime.

La representation sémantique que nous avons adoptée peut étre étendue, par exemple pour
traiter des modiﬁeurs. Dans un homme heureux, ‘heureux’ sera traité comme un prédicat
unaire ayant comme argument ‘homme’ et se trouvant dans la portée de ‘homme’ (la relation
prédicat-argument et la portée auront des sens opposés). Ce prédicat peut lui-méme étre
modiﬁé, par exemple, par ‘tres’. La portion de la representation se trouvant dans la portée
d’un sémanteme représentant une entité restreint l’extension de ce sémanteme et contribue a
la restriction du quantiﬁcateur portant sur cette entité7.

Nous allons maintenant proposer une grammaire permettant de générer nos representations
sémantiques, avant de l’étendre pour en faire une interface sémantique-syntaxe.

3 Une grammaire pour les représentations logiques

Nous allons proposer une grammaire « lexicalisée » pour les representations logiques, c’est-a-
dire une grammaire qui construit la representation en combinant des morceaux de structure
associés aux différents sémantemes. Nous nous tournons vers un formalisme capable de
manipuler des graphes, les grammaires d’uniﬁcation polarisées (Kahane 2004). Nous
rappelerons brievement ce formalisme avant de presenter notre grammaire sémantique.

3.1 Grammaires d'uniﬁcation polarisées

Les grammaires d'uniﬁcation polarisées sont des grammaires permettant de générer des
ensembles de structures ﬁnies. Une structure repose sur des objets. Par exemple, pour un
graphe (orienté), les objets sont les noeuds et les arcs. Chaque arc est lie at deux noeuds par les

6 Come on le sait, il est possible qu’un quantiﬁcateur en deuxiéme position ait une portée large. Par exemple

(10)a peut éventuellement recevoir la méme interpretation que (1), mais une telle interpretation est plus
difﬁcile d’accés et doit étre conditionnée par le contexte ou les connaissances du monde.

Nous pouvons traiter d’autres types de restrictions, comme une relative ou une participiale. Ainsi, pour la
phrase Tout homme aimant unefemme est heureux, les relations de portées seront :

‘tout’ —2—> ‘heureux’ —1—> ‘homme’ —> ‘un’ —2—> ‘aimer’ —2—> ‘femme’.
La relation de portée entre ‘homme’ et la participiale est « validée >> par la relation prédicative ‘aimer’ —1—>
‘homme’, qui est dans le sens inverse (comme pour un adjectif).
Les syntagmes nominaux complexes, comme dans Tout locuteur de deux langues est heureux, posent un
probléme intéressant. Ici les relations de portées sont :

‘tout’ —2—> ‘deux’ —2—> ‘heureux’ —l —> ‘locuteur’ —l —> ‘langue’.
Il est également intéressant de comparer des exemples come (i) Les soldats fatigués se sont arrétés et
(ii) Les soldats, fatigués, se sont arrétés. La structure prédicative est la méme (‘s’arréter’ —1—> ‘soldat’
<—1— ‘fatigué’), mais, en (i) seulement, ‘fatigué’ restreint la portée du quantiﬁcateur et doit étre dans la
dépendance logique de ‘soldat’.

157

158

Sylvain Kahane

fonctions source et cible. Ce sont ces fonctions qui foumissent la structure proprement dite.
Une structure polarisée est une structure dont les objets sont polarisés, c’est-a-dire étiquetés
par une valeur appartenant a un ensemble ﬁni P de polarités. L'ensemble P est muni d'une
operation commutative et associative notée « . », appelée produit. Un sous-ensemble N de P
contient les polarités dites neutres. Une structure polarisée est dite neutre si tous ses objets
sont neutres.

Nous allons utiliser un systeme de polarités P =

O
{0,0,0}, avec N = {0,0}, et un produit déﬁni par . .
le tableau suivant (ou J. représente l’impossibilité 0 0 ° 0
de se combiner). Nous appellerons nos polarités O O O O O
= noir = saturation, O = blanc = contexte . . . J_

(obligatoire) et 0 = gris = neutre absolu.

Les structures peuvent étre combinées par unification. L'uniﬁcation de deux structures A et B
donne une nouvelle structure A®B obtenue en « collant » ensemble ces structures par
l'identiﬁcation d'une partie des objets de la premiere structure avec ceux de la deuxieme.
Lorsque deux structures polarisées A et B sont uniﬁées, la polarité d'un objet de A®B obtenu
par identiﬁcation de deux objets de A et B est le produit de leurs polarités.

Une grammaire d’uniﬁcation polarisée (GUP) est déﬁnie par une famille ﬁnie T de types
d'objets (avec des fonctions attachées aux différents types d'objets), un systeme (P,.) de
polarités, un sous-ensemble N de P de polarités neutres, et un ensemble ﬁni de structures
élémentaires polarisées, dont les objets sont décrits par T et dont une est éventuellement
marquee comme la structure initiale (et appelée top dans la suite). Les structures générées par
la grammaire sont les structures neutres obtenues par combinaison de l’éventuelle structure
initiale et d'un nombre ﬁni de structures élémentaires.

Rappelons que le formalisme est monotone (avec l’ordre O < O < 0 sur les polarités) et que
les structures peuvent étre combinées absolument dans n’importe quel ordre.

3.2 Une grammaire sémantique

Nous allons presenter notre grammaire en plusieurs étapes pour en faciliter la comprehension
et pour en montrer le caractere élémentaire.

La structure prédicative est un graphe. Elle peut donc étre générée par une grammaire aussi
simple que gpréd, ou chaque prédicat ancre un morceau du graphe avec ses arguments : le
noeud du prédicat est saturé et les positions des arguments doivent étre remplies et sont

polarisées en blanc.
‘tout’ ‘un’

3

d:O Od:O

‘aimer’
gpréd 1 2

d: O 1
‘femme’

.d:o

‘homme’

Nous avons ajouté une polarité supplémentaire d : O et d : 0 sur certains noeuds. La polarité
d : O indique que ces sémantemes sont indéterminés. Un sémanteme d’une entité déterminée,
comme ‘Paul’, recevra une polarité d: 0. La polarisation multiple fonctionne ainsi : si un
objet A de polarités (x, y) et un objet B de polarités (z, t) sont identiﬁes, l’objet resultant recoit
le couple de polarités (x.z, y. t).

La structure logique est un arbre. La structure d’arbre est tres facile a encoder avec une GUP
(Kahane 2004) : il sufﬁt d’assurer que chaque element autre que la racine ait un unique

Structure des représentations logiques

gouvemeur (la connexité étant elle assurée par deﬁnition). Nous obtenons la grammaire Qlog,
ou chaque sémanteme ancre la racine d’un sous-arbre. Nous typons, selon l’usage, les noeuds
en deux classes : e pour les entités et t pour les propositions (truth value).

top 3 . (t) O (l) ‘tout’

glog 1 2 2 2

(e) (3) O(e) ‘femme’ (t)

(t) ‘aimer’ (e) ‘homme’ (t) ‘un’

(t)

En superposant8 gpféd et Qlog, nous obtenons la grammaire sémantique Qsém = gpl-éd x Qlog. Du
fait de la superposition, chaque noeud hérite d’un couple de polarité. Un noeud qui n’apparait
pas dans une des deux grammaires est considéré comme neutre absolu la ou il n’apparait pas.
Nous notons (0,0) = O et (0,0) = Q On remarquera que 0 et 0 se comportent comme des
polarités opposes de type besoin-ressource.

Q top: I (t) 1 (2t) ‘aimer’ 0 Eleiﬁhomme’ rﬁ) ‘t0ut’('ﬁ(2l?) ‘un’
sém
; . 5 , I
(e) (6) 0 E1e)<3femme’ (dé). ﬁe). (0

Nous devons encore enrichir un peu Qsem pour assurer que la restriction d’un quantiﬁcateur
est dans sa portée. Une GUP permet facilement de controler le chemin er1tre deux noeuds :
nous ajoutons pour cela un lien de dominance dans la structure du quantiﬁcateur er1tre la
portée et la restriction. Une grammaire dédiée permet de « réécrire » ce lien de dominance en
une chaine de dépendance. On peut facilement controler la nature de cette chaine, puisqu’une
GUP peut simuler n’importe quelle grammaire de réécriture (Kahane 2004). Nous donnons ci-
dessous la grammaire Qsém révisée, avec les structures completes pour les quantiﬁcateurs et, a
droite, les deux regles nécessaires a la propagation de la dominance, ou les liens de
dominance sont représentés par des ﬂeches pointillées.

 

Ga) ‘un’ 0(t) ‘tout’ . (t) (t)
Qsém (révisée) 1 E 1 E‘  z
.\...--’(t)  (t)   (t)
D‘ l>' W
(e) d:O (6) dz! (e)

3.3 Interface sémantique-syntaxe

Nous appelons interface sémantique-syntaxe une grammaire capable de faire se correspondre
une representation sémantique et une representation syntaxique. La difﬁculté de la tache vient
du fait qu’il y a er1tre les deux representations des distorsions importantes au niveau de la
hiérarchie er1tre les éléments9. Le probleme a été étudié dans le cadre de nombreux

8 Comme l’a fait remarquer un relecteur, la superposition des grammaires est un cas particulier de

synchronisation (voir section 3.3). Celle-ci est possible quand les deux grammaires manipulent les mémes
objets.

Le fait que notre representation syntaxique soit un arbre de dépendance plutét qu’un arbre syntagmatique ne
change pas fondarnentalement le probléme. Nous préférons pour notre part traiter la question de l’ordre
linéaire séparément et considérer une structure syntaxique sans ordre linéaire.

9

159

160

Sylvain Kahane

formalismes a commencer par la grammaire de Montague (1973). Celle-ci privilégie
l’organisation logique, alors que des travaux plus récents tendent a favoriser l’organisation
syntaxique, comme Copestake et al. 1999 avec HPSG ou Kallmeyer & Joshi 1999 avec TAG.

Pour notre part, nous résolvons le probleme de maniere triviale, en synchronisant notre
grammaire sémantique avec une grammaire de dépendance syntaxique, sans privilégier aucun
des deux niveaux de representation. Seule la structure prédicative est prise en compte dans
cette interface sémantique-syntaxe (.Tsém_synt). En combinaison avec Qsém et gsynt, elle permet
de construire parallelement les representations sémantiques et syntaxiqueslo. En GUP, la
synchronisation de deux grammaires s’effectue sirnplement en alignant les deux grammaires
et en synchronisant certains noeuds (cf. Shieber & Schabes 1990, Perrier 2004, Kahane &
Lareau 2005). La synchronisation est assurée par des liens dit de synchronisation qui
obligeront, lorsqu’on identiﬁe deux noeuds dans une des structures, a identiﬁer les noeuds qui
sont synchronisés avec eux dans l’autre structure. L’obligation d’uniﬁer les liens de
synchronisation (et donc de synchroniser les elements qu’ils relient) est encore une fois
assurée par la polarisation (représentée dans des losanges).

     

Isém-synt gsém+Isém-synt +gsynt
(e) .0... (N) --‘-9...f..t°“t’
O ...........................  I 1 2  
J7det J13)  .... ..
1 ~ 0,..§  dét
(t) ‘tout’ .................. ... .............. .0 (D) TOUT , ............ --  ....... .. (D) TOUT
d 0

Notre grammaire est équivalente au niveau de l’expressivité aux autres interfaces sémantique-
syntaxe évoquées et s’apparente tout particulierement a la grammaire proposée par Perrier
2004, qui est a notre connaissance le premier a avoir utilisé une grammaire polarisée pour
traiter les representations logiques et la sous-speciﬁcation. Notre grammaire peut étre utilisée
pour l’analyse comme pour la synthese et sera compatible avec diverses procedures. Une
procedure pour une GUP consiste a donner un ordre dans le traitement des structures (par
exemple suivre l’ordre impose par la hiérarchie logique ou syntaxique) et choisir un ordre
dans la neutralisation des polarités. L’un de ces ordres mérite quelques commentaires.

3.4 Sous-spéciﬁcation et neutralisation partielle

Lorsqu’on utilise notre grammaire pour l’analyse, on remarque que la structure syntaxique ne
permet pas de decider quelle doit étre la portée respective des quantiﬁcateurs. Pour ne pas
introduire une ambiguité qu’on n’a pas les moyens de résoudre, on peut préférer construire
une representation sémantique ou la hiérarchie logique reste sous-spéciﬁée. Cette question a
été beaucoup étudiée dans la littérature récente (Reyle 1993, Bos 1995, Copestake et al. 1999,
Kallmeyer & Joshi 1999, Perrier 2004). Dans notre cadre, la solution est élémentaire : il sufﬁt
de ne pas chercher a neutraliser les polarités qui controlent la hiérarchie logique (c’est-a-dire

10 Notre grammaire syntaxique gsynt a été décrite dans de nombreux articles (notamment Kahane 2001 et
Kahane & Lareau 2005). Le fait que les noms doivent avoir un unique determinant est ici assuré par la
polarité (1 de la grammaire sémantique. I1 faut néanmoins noter que des éléments sémantiquement déterminés
comme ‘Paris’ ou ‘la France’ peuvent étre ou non syntaxiquement déterminés (la France VS en France) et
qu’un traitement syntaxique de la détermination doit venir compléter le traitement purement sémantique.

Structure des représentations logiques

de ne pas considérer gpl-éd lors de l’analyse). On obtient, pour (1) ou (10), la représentation
sémantique sous-spéczﬁée (11) (en version simpliﬁée a droite, en mettant en Vis-a-vis les
noeuds qui fusionneront pour obtenir (6)), ou come on le Voit les seules polarités non neutres
sont les polarités blanches associées a la hiérarchie logique :

(11) ‘tout’ (t) ‘(D (t) ‘un’ ‘
l 2 2 1 £ ‘un,
(04! /(t) ‘ 2 1
I

  

I‘.
( imer’
1 2
. d - o

d : O .
(e) ‘femme’

‘homme’ (e) ‘homme’ ‘femme’

Autrement dit, l’interface syntaxe-sémantique est uniquement réalisée entre la structure
syntaxique et la structure prédicative. C’est ce que préconise depuis les années 60 la théorie
Sens-Texte, originellement concue pour la traduction automatique, ou la levee des ambiguités
logiques est généralement inutile.

Notons que la representation sémantique en (11) peut étre traduite en une écriture linéaire en
réiﬁant les différents noeuds : p pour la racine, pl et pg pour les quantiﬁcateurs ‘tout’ et ‘un’, e
pour le prédicat ‘aimer’, x et y pour les entités ‘homme’ et ‘femme’ et h1 et hz pour les portées
des quantiﬁcateurs (h pour hole, d’apres la Hole Semantics de Bos 1995) :

(12) topzp, p1:‘tout’(x,h1),p2:‘un’(y,h2), e:‘aimer’(x,y), x:‘homme’, y:‘femme’
ou encore avec une double réiﬁcation des entités (en introduisant les variables a1 et a2) :
(13) topzp, p1:tout'(x,a1,h1), p2:un'(y,a2,h2), e:aimer'(x,y), a1:homme'(x), a2:femme'(y)

Les relations de dominance, ainsi que la nécessité de neutraliser les trous h1 et hz, seront
clonnées par des conditions telles que :

(14) p 2121 > I112 e,p 2122 > hz 2 e, {p,h1,h2} = {e,p1,p2}

Meme si les deux representations, (11) et (13)+(14) (qui est la representation de Copestake et
al. 1999) sont (quasiment) équivalentes, on peut voir un avantage a utiliser des structures
polarisées et a ne pas utiliser d’écriture linéaire forcant l’introduction de multiples variables.

4 Conclusion

Notre contribution concerne la representation sémantique des énoncés et tout particulierement
la structure logique, c’est-a-dire la representation des phénomenes de portée. Nous n’avons
pas réellement abordé de questions de logique, c’est-a-dire la facon dont nos representations
pouvaient servir directement a un calcul logique. De ce point de vue, nous nous sommes
couverts par la possibilité de revenir aux formules usuelles de la logique du premier ordre,
mais une description directe de l’inférence dans notre formalisme serait certainement
intéressante. Notre objectif était d’avoir une representation qui soit a la fois sufﬁsante pour
l’interprétation logique, mais qui permette aussi un traitement adéquat d’autres phénomenes
sémantiques qui ne se manifestent pas en termes de portée.

Le veritable point de notre contribution est d’avoir rappelé que la structure sémantique des
énoncés n’est pas linéaire et qu’il y a tout intérét dans ces conditions a utiliser un langage qui

161

162

Sylvain Kahane

permette de manipuler directement des arbres, des graphes et des produits des deux. Nous
avons ainsi montré qu’une representation sémantique est la superposition d’une structure
prédicative et d’une structure hiérarchique encodant les relations de portée. Lorsqu’on ne
privilégie plus la relation de portée, comme le fait la logique classique, il devient facile de
déﬁnir une representation sous-spécifiée en « neutralisant » une des deux structures
seulement.

Remerciements

Je remercie chaleureusement pour leurs commentaires Pascal Amsili, Laurence Danlos, Laura
Kallmeyer, Francois Lareau, Guy Perrier, Alain Polguere, Igor Mel’cuk, Benoit Sagot et les
trois relecteurs de TALN.

Références

BARWISE J. & COOPER R. (1981), Generalized quantiﬁers and natural language, Linguistics and
Philosophy, 4, 159-219.

BOS J. (1995), Predicate Logic Unplugged, Tenth Amsterdam Colloquium.

COPESTAKE A., FLICKINGER D. & SAG I. A. (1999), Minimal Recursion Semantics : An Introduction,
draft, 26 p.

DAVIDSON D. (1967), The Logical Form of Action Sentences, in N. Rescher (ed.), The Logic of
Decision and Action, University of Pittsburgh Press, 81-95. Reprinted in D. Davidson, Essays on
Actions and Events, Oxford: Clarendon Press, 1990,105-122.

DYMETMAN M., COPPERMAN M. (1996), Extended dependency structures and their formal
interpretation, Proceedings CoLing, Copenhague.

KAHANE S. (2001), Grammaires de dépendance formelles et théorie Sens-Texte, Tutoriel, Actes TALN,
vol. 2, 17-76.

KAHANE S. (2004), Grammaires d'uniﬁcation polarisées, Actes TALN, Fés, 233-242.

KAHANE S. & LAREAU F. (2005), Grammaire d’Uniﬁcation Sens-Texte : polarisation et modularité,
Actes TALN, Dourdan, 10 p.

KALLMEYER L. & JOSHI A. (1999), Factoring predicate argument and scope semantics: Underspecied
semantics with LTAG, Proceedings of the 12th Amsterdam Colloquium.

MEL’CUK I. (1988), Dependency Syntax: Theory and Practice, SUNY Press.

MEL’CUK I. (2003), Communicative Organisation of Natural Language, Benjamins.

MONTAGUE R. (1973), The proper treatment of quantiﬁcation in ordinary English, in J. Hintikka (éd.),
Approaches to Natural Language, 221-242, Reidel.

PERRIER G. (2004), La sémantique dans les grammaires d'interaction, Actes TALN, Fés, Maroc, 351-
360.

POLGUERE A. (1992), Remarques sur les réseaux sémantiques Sens-Texte, in A. Clas (éd.), Le mot, les
mots, les bons mots, Presses de l’Université de Montréal.

REYLE U. (1993), Dealing with ambiguities by underspeciﬁcation, Journal of semantics, 10, 123-179.
SHIEBER S. M. & SCHABES Y. (1990), Synchronous tree-adjoining grammars, Proceedings CoLing,
vol. 3, 253-258, Helsinki, Finland.

WOODS W.A. (1975), What’s in a link: Foundations for semantic networks, in D. Bobrow & A.
Collins, Representation and Understanding—Studies in Cognitive Science, 55-82, Academic Press,
Orlando.

