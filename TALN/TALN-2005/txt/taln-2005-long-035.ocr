TALN 2005, Dourdan, 6-10 juin 2005

Des arbres de dérivation aux foréts de dépendance : un
chemin via les foréts partagées

Djamé Seddah - Bertrand Gaiffe
Laboratoire LORIA, Equipe Langue et Dialogue
Campus Scientiﬁque, BP 239
F-54506 Vandoeuvre-les-Nancy Cedex
{dj ame.seddah,bertrand.gaiffe} @loria.fr

Mots-clefs I TAG, analyse syntaxique, sémantique, arbre de dépendance,forét partagée,
forét de dérivation

Keywords: TAG, syntax, semantic, dependency tree, shared forest, derivation forest

Résumé L’ objectif de cet article est de montrer comment batir une structure de répre-
sentation proche d’un graphe de dépendance a l’aide des deux structures de représentation
canoniques foumies par les Grammaires d’Arbres Adjoints Lexicalisées . Pour illustrer cette
approche, nous décrivons comment utiliser ces deux structures a partir d’une forét partagée.

Abstract This paper aims describing an approach to semantic representation in the Lexi-
calized Tree Adjoining Grammars (LTAG) paradigm : we show how to use all the informations
contained in the two representation structures provided by the LTAG formalism in order to
provide a dependency graph.

D. Seddah, B. Gaiffe

1 Introduction

Dans cet articlel, nous montrerons comment construire un graphe de dependance dont les prin-
cipales proprietes sont de materialiser des liens syntaxiques non representes dans l’arbre de
derivation et de decrire toutes les analyses dans une seule structure compacte.

1.1 Les grammaires d’arbres adjoints

Une grammaire LTAG est essentiellement un lexique o1‘1 chaque lemme est associe a un ensem-
ble d’arbres. Ces arbres, appeles arbres elementaires, sont manipulables par deux operations :
la substitution et l’adjonction. La substitution opere sur un ensemble restreint d’arbres appeles
arbres initiaux et correspond a une derivation hors-contexte. Cette operation est obligatoire,
contrairement, d’une fagon generale, a l’adjonction qui opere sur des arbres appeles auxiliaires
et qui correspond a l’insertion d’un arbre speciﬁque au sein d’un arbre elementaire (indifferem-
ment initial ou auxiliaire) .

Arbres initiaux Arbre auxiliaire
oc1|oc2 a3 [31
N P V

(Jean|Marie) N0\l/ V N1\l/

beaucoup

Figure 1: Arbres elementaires d’une LTAG

Tous les arbres elementaires sont des projections d’entrees lexicales et par deﬁnition decrivent
tous les arguments syntaxiques des ancres associees. De fait quand une LTAG suit les principes
de bonnes constructions (Abeille, 1991) tels que le principe de co-occurence predicat-argument
et le principe de Ininimalite semantique, les arguments syntaxiques correspondent a des ar-
guments semantiques. C’est pourquoi l’une des deux structures de representation des LTAG,
l’arbre de dérivation, qui formellement n’est que l’enregistrement des operations resultant
d’une analyse syntaxique, peut etre vu comme une structure predicat-argument.

La ﬁgure 2 nous montre que l’arbre de derivation 2 reﬂete la structure predicat-argument de la
phrase “Jean aime beaucoup Marie”.

I-/Etant donne que chaque noeud de l’arbre de derivation correspond a une projection d’un arbre
elementaire et que chacune de ses branches decrit l’operation de combinaison entre deux noeuds,
on associe a ces noeuds une adresse de Gom3 indiquant o1‘1 l’operation a eu lieu. Ainsi, l’arbre de
derivation decrit de fagon univoque l’arbre dérivé qui est l’arbre syntagmatique d’un enonce

(ﬁg. 2).

1Nous tenons ti remercier vivement les reviewers de TALN 2005 pour leurs commentaires et leurs aimables
corrections.

2Pour des raisons de simplicite, chaque arbre dont le nom commence par H, resp. 04, est un arbre auxiliaire,
resp. initial. 7 quand ce type est indifferent.

3Cette adresse correspond a une sequence d’entiers positifs deﬁnie par induction de la fagon suivante : la
sequence Vide notee 0 est l’adresse du noeud racine de l’arbre et p.k est l’adresse du k—ieme ﬁls du noeud d’adresse p.

Des arbres de derivation aux foréts de dependance

Arbre de derivation Arbre derive
<13 aime P
(1) (11 Jean (3) (13 Marie (2) ,a1 beaucoup “'10 /"\ “I11.
Jean V Adv Marie
I I
aime beaucoup

Figure 2: Arbre derive et arbre de derivation pour Jean aime beaucoup Marie

1.2 Un formalisme idéal pour une interface syntaxe sémantique idéale ?

Dans un monde ideal il serait possible de travailler a partir de cette structure aﬁn de construire
une representation logique dans l’optique d’une semantique compositionnelle 61 la Montague.
Pour etablir les fondements d’un tel modele il sufﬁrait d’associer un A-terme a chaque arbre ele-
mentaire et d’utiliser l’arbre de derivation comme support aux differentes B-reductions induites
par les combinaisons syntaxiques de l’analyse. Ainsi, si l’on se base sur la propriete obligatoire
de completion d’un noeud de substitution, on peut considerer ce type de noeuds comme support
a des variables argumentales. Comme l’adj onction a come proprietes d’étre non predictible et
optionnelle, on pourrait considerer l’arbre o1‘1 l’adjonction a lieu comme un argument 5) la fonc-
tion associee a l’arbre auxiliaire qui s’adjoint. De cette fagon, on pourrait interpreter l’arbre de
derivation ﬁgure 2 de la fagon suivante (ﬁgure 3) sachant que dans ce mini modele, on remplace
les variables classiques du A-calcul par des positions argumentales entre crochets4.

B1 (beaucoup): )\|([1]) ﬂ1([1]) (041)

[1] 041 (aimer):

M11], [2]) 0é1([1]a [2]) (062, as)

[1] 042 (Jean) [2] a3 (Marie)

Figure 3: Interface syntaxe semantique dans un monde ideal

Le probleme de ce type d’interfaces syntaxe-semantique est qu’elles fonctionnent uniquement
sur un sous-ensemble restreint du langage avec des structures predicatives simples. Les LTAG
en tant que formalisme de depart ne font pas de distinctions entre adjonctions predicatives et
modiﬁeures (les premieres inversant le sens des dependances semantiques (Candito & Kahane,
1998)) ; de plus il n’y a pas de mecanismes permettant de resoudre les problemes d’ambigui'tes
des quantiﬁeurs et, pire, certains liens syntaxiques entre des complements verbaux et leurs su-
jets n’apparaissent pas dans l’arbre de derivation.

Les solutions analysant les deﬁciences de l’arbre de derivation sont nombreuses (Candito &
Kahane, 1998; Schabes & Shieber, 1994; Rambow & J oshi, 1994). Ces solutions peuvent etre
divisees en deux groupes : celles o1‘1 l’arbre de derivation est considere comme inutilisable,
l’arbre derive est donc utilise comme support a une interface syntaxe-semantique (Gardent &
Kallmeyer, 2003; Franck & van Genabith, 2001) ; et celles o1‘1 l’on considere que les informa-
tions portees par l’arbre de derivation doivent étre enrichies, le formalisme LTAG etant modiﬁe

4Les A-termes lexicaux sont ici, bien sﬁr, simpliﬁes

D. Seddah, B. Gaiffe

sinon remplace par les TAG Ensemblistes5 aﬁn de pouvoir gerer les informations de portees des
modiﬁeurs (Kallmeyer & J oshi, 1999).

Les solutions basees sur l’arbre derive ont pour principal probleme d’etre basees sur l’uniﬁcation
de structures de traits et sur l’utilisation conjointe d’une semantique plate comme liant via uni-
ﬁcation des arguments aﬁn d’obtenir une structure predicative correcte ou une formule logique.
Le probleme est que chaque evenement qui a lieu durant ce processus advient sur un noeud ou
une derivation a pris place (adjonction ou substitution) ; ces solutions simulent donc de facon
implicite l’arbre de derivation au sein d’une structure que lui-meme decrit sans equivoque6.

Nous partons du principe que pour etablir une interface syntaxe semantique a partir des LTAG,
nous devons d’abord nous assurer que tous les liens argumentaux sont presents dans la structure
de representation.

Sur la base de l’analyse de la problematique des verbes a controle, nous proposons une facon
de construire un graphe de dependance a partir des informations contenues tant dans l’arbre
derive que dans l’arbre de derivation a l’aide d’une structure decrivant ces deux arbres : la forét
partagee.

2 La problématique posée par les verbes a contrﬁle

Nous rappellerons brievement dans cette section la difﬁculte d’analyse que posent les verbes a
controle dans le formalisme LTAG7.

On utilise souvent les verbes a controle comme temoin d’un hiatus entre syntaxe et semantique
en TAG pour la simple raison que s’il existe un lien de sous-categorisation entre un sujet et le
verbe qui le sous-categorise, ce lien devrait etre represente dans l’arbre de derivation (principe
de co-occurence predicat-argument).

Or l’arbre de derivation (ﬁg. 5) issu de l’analyse de la phrase (1) Jean espére dormir , suivant
la grammaire jouet ﬁgure 48, ne contient pas de lien entre le sujet non realise de “dormir” et le
sujet qu’il sous-categorise : “Jean”. Or ce lien est present via la structure de traits dans l’arbre
derive9 ﬁgure 5.

En realite la structure que nous voudrions obtenir est un graphe dans lequel ce lien est present
(ﬁgure 6).

Dans cette analyse, un verbe a controle ancre un arbre auxiliaire (i.e arbre £1 contréle) qui
s’adjoint sur la racine d’un arbre initial ayant au plus un noeud de substitution non-realise.
On peut donc considerer qu’un verbe a controle transfére l’un de ses arguments vers l’arbre
sur lequel il s’adjoint. L’objectif est donc de formaliser ce processus a travers une operation

5(Weir, 1988) pour les TAG ensemblistes.

5Un autre probleme de ce type de solutions basées surl’a1’ore derive et les structures de traits est l’emploi d’un
nombre non ﬁni de traits ce qui a pour consequence d’accroitre la capacite generative du formalisme(Kall1neyer,
2004).

7On pourra se reporter a (Abeille, 1999) pour une analyse complete mise en perspective avec les phenomenes
des verbes a montees et comparee a d’autres formalismes.

8On notera la position vide dominee par le noeud N de l’arbre 045, nous appelons ce noeud “nmud de substitu-
tion non réalisée” ou suj et non realise

9comme le trait d’ accord pour la phrase (2) Marie espére étre belle. A des ﬁns de lisibilite, nous marquons cet
accord par un indice de co—indiciation.

Des arbres de dérivation aux foréts de dépendance

arbre auxiliaire : arbre initial :
(B2) espérer (a5) dormir
P P

/i\ A
N V
NOL V P0* | |
| 5 [dormir]

[espérer]

Figure 4: Grammaire jouet verbe a controle

Arbre dérivé : Arbre de dérivation : Graphe de dépendance
P 055 : dormir
I
/N (0) B2 : espere
Ni V P I
| | /\ (1) 051 : Jean

Jean espere Ni V

I
6 dormir

Figure 5: Analyse LTAG : “Jean espere dormir”

dormir

espérer

/

Figure 6: Graphe pour “Jean espere dormir”

Jean

appelée : fusion argumentale.

2.1 Informations préalables

Les seules opérations visibles sur un arbre de dérivation sont la substitution et l’adjonction
parce qu’elles témoignent du passage d’un arbre a un autre. Si nous voulons faire apparaitre
ce lien manquant, nous devons donc simuler la dérivation qu’il induit forcément. De quelles
inforrnations disposons-nous ?

o Nous connaissons le nombre d’arguments dans un arbre (noeuds de substitution)

0 Nous connaissons quel argument doit étre transféré car il s’agit d’une information lexi-

D. Seddah, B. Gaiffe

cale, le canevas de contrﬁle, que nous marquons directement sur le noeud concemé. Le
canevas de controle associé au noeud N d’un arbre ancré par un verbe a controle trans-
férant son i-eme argument Vers 1e j-eme argument est noté N,-_,j .

Exemple : Jean interdit 61 Marie de dormir Jean espére dormir
canevas de controle N1 —> N0 N1 —> N0

0 Nous savons qu’un arbre dont un noeud domine une position Vide, un argument non
réalisé, Va recevoir un argument provenant de 1’adjonction d’un arbre a controle Via
1’opération de fusion. Ce transfert d’argument marquera la création effective du lien.

Dans ce cas, si nous savons a 1’aVance que ce lien Va étre créé, nous pouvons d’ores et déja
prévoir la position de ce lien dans le graphe de dérivation. C’est pourquoi nous créons une
nouvelle dérivation que nous appelons Dérivation incomplete (marquée par la Variable libre
dans la ﬁgure 7) et qui témoigne d’une substitution non réalisée sur le noeud N d’un arbre oz.

Graphe de dépendancea
aprés la création du
lien manquant

analyse syntaxique

   

substitution
substitution

=.'.x°°

‘°

Figure 7: Vision synthétique de 1’opération de fusion

Avant de déﬁnir forrnellement 1’opération de fusion sous la forme de regles d’inférence, la
section suivante Va expliciter 1e processus d’extraction des items de dérivations.

3 Forét partagées et items de dérivations

Cette section présente 1’extraction d’une forét de dérivation classique, c’est-a-dire sans prise
en compte du processus de fusion. La forét partagée sur laquelle nous basons notre processus
résulte de 1’intersection d’une grammaire TAG et d’un automate d’entrée, (Vijay-Shanker &
Weir, 1993) et (Billot & Lang, 1989). La déﬁnition donnée par (Vijay-Shanker & Weir, 1993)
est étendue par (Seddah, 2004) aﬁn de lier la reconnaissance du sous arbre dominé par le noeud
site d’une adjonction au noeud pied de 1’arbre auxiliaire qui s’adjoint. Ceci aﬁn de perrnettre un
parcours synchrone de la forét partagée. Nous la représentons sous la forme d’une grammaire
hors-contexte augmentée d’une pile bomée contenant les adjonctions en cours. Chaque partie de
regle correspond a un item de type Cocke-Kasami-Younger de la forme < N, POS, I, J, Pile >
o1‘1 N est un noeud d’un arbre, P03 indique si 1’on se situe apres une adjonction prévisible ou

Des arbres de dérivation aux foréts de dépendance

pas (marquée T si une adjonction sur le noeud est possible et J. si elle ne l’est plus, symbolisée
par un point gras en position haute ou basse d’un noeud sur les schémas), I et J sont les indices
de début et de ﬁn de la chaine reconnue par le noeud N et Pile est la pile contenant les appels
des sous arbres ayant démarré une adjonction et qui doivent étre reconnus par la regle de recon-
naissance du pied.

Le processus a lieu en deux temps : 1) La forét partagée est générée a partir de la grammaire
TAG initiale et d’une chaine d’entrée 2) la forét partagée est ensuite parcourue aﬁn d’en extraire
les dérivations.

L’ extraction est simple : si une regle témoignant d’une dérivation est validée, un item de déri-
vation est inféré.

3.1 Forme des items de dérivation

A chaque occurrence d’une regle de dérivation, nous produisons un item de dérivation en te-
moignant. Cet item que nous appelons Deriv est de la forme < N, 7, oz, type > avec N, le
noeud qui recoit la substitution ; 7, l’arbre de ce noeud, oz l’arbre qui Va s’y substituer, type est
le type de dérivation.

Trois dérivations sont possibles :

o une premiere évidente lors d’une substitution : on passe d’un noeud N d’un arbre 7 a un
noeud d’un arbre oz :
Item de substitution : < N, oz, 7, subst >

o lors d’une adjonction : on passe d’un noeud d’un arbre 7 au noeud racine d’un arbre B.
Nous ne considérons pas comme une dérivation le passage du noeud pied de l’arbre B
au sous arbre du noeud site de l’adjonction de l’arbre oz. Cette information est de fait
évidemment redondante : une adjonction étant une insertion, il doit y avoir retour et
analyse de l’arbre appelant.

‘ Item d’adjonction: < N, B, 7, adj > |

o lors de la reconnaissance d’un arbre initial oz ayant portée sur toute la chaine, on crée une
dérivation de type “téte”.
‘ Item axiomes: < N, 04, —, — > |

3.2 Régles d’inférence de l’algorithme d’extraction du graphe de dériva-
tion

Pour toute regle r E R se situant sur le chemin succes, nous appliquons les regles d’inférence
suivantes :

o Dérivation de l’axiome
Si la régle 7" = S —> < T, Na, 0, n, —, —, 0 > est Validée lors de1’exécution de la grammaire,
alors nous produisons1’item < N, oz, —, — >.

D. Seddah, B. Gaiffe

S N < T>Na>O>n>_>—>0 >
Reconnaissance d’un axiome

S

nC
S?) <T>Na>O>n>_>—>0> . (X
< N a _ _ > avec n=longueur de la chame

o Dérivation d’une substitution

Si la regle r = < J_,n7,i,j, —, —,Pile > —> < T,na,i,j, —, —,Pile > est validée
alors nous produisons 1’item < N, oz, 7, subst >.
< J_,n7,i,j,—,—,Pile > —> < T,na,i,j,—,—,Pile >

Reconnaissance d’une substitution

Q

11

'Y
on
<J_,n7,i,j,—,—,Pile> —> <T,na,i,j,—,—,Pile>  

< N,0z,*y,subst >

0
11'
.‘i

o Dérivation d’une adjonction
Si la regle r = < T,n7,i,j,p,q,Pile > —> < T,n5,i,j,p,q,Pile’ > est validée
alors nous produisons 1’item < N, B, 7, adj > .

< T,n7,i,j,p,q,Pile > —> < T,ng,i,j,p,q,Pile’ >

Reconnaissance d’une adjonction

 

< T,n7,i,j,p,q,Pile > —> < T,ng,i,j,p, q, Pile’ > X.

< N, ﬂyy, adj > p q
Les variables Pile et Pile’ représentent l ’état de la pile d ’appel des adjonctions lors de l’exe’cution
d ’ime forét produite. Leurs valeurs n’est pas prise en compte par cette regle d ’infe’rence, car
l ’appel d ’une adjonction est une opération hors contexte. Quelque soit le contenu de ces 2 vari-
ables, la dérivation sera celle témoignant de l’adjonction de l ’arbre ﬂ sur le naeud X de l ’arbre

‘Y.

3.3 item de dérivation pour la dérivation incomplete
Nous avons décrit (section 2.1) un noeud dominant une position vide comme témoignant d’une

substitution non réalisée et, par conséquent témoin d’une dérivation incomplete. La regle
d’inférence suivante déﬁnit cette nouvelle délivation :

0 Si la regle < J_, N7, i, j, —, —, Pile > —> vrai est validée alors on produit la dériva-

Des arbres de dérivation aux foréts de dépendance

tion suivante :

< J_,N7,i,j, —, —,Pile > —> vrai
Dérivation d’une substitution non-réalisée

1'1
ii] j

<J_,N7,i,j,—,—,Pile> X _ M X 9
< N, 05, Xvsubst > avec , non mstcmcze —.

L’ ensemble des items de dérivation est généré dans un chart spéciﬁque et correspond a l’ensemble
des analyses possibles. Partant d’un item axiome, nous décrivons tres exactement un arbre de
dérivation. Si la grammaire suit les recommandations de (Rambow & Joshi, 1994), cet arbre
peut étre vu comme un arbre de dépendance, ainsi l’ensemble des arbres décrits par cette forét
d’items est dans ce cas une forét de dépendance.

4 Formalisation du processus de fusion argumentale

L’analyse de l’adjonction d’un arbre a controle sur un arbre élémentaire met en jeu 3 deri-
vations : la dérivation D1 témoignant de la substitution d’un arbre 041 sur le noeud N ,dont
le canevas de controle est Ni_;j , d’un arbre a controle B2 ; la dérivation D3 témoignant de

l’adjonction de l’arbre a controle B2 sur la racine d’un arbre élémentaire 71° et la dérivation
incomplete D2 témoignant de la présence d’un noeud N 3- de substitution non réalisée sur l’arbre
7. L’ opération de fusion est donc la regle d’inférence permettant de simuler la création du lien
manquant via un nouvel item de dérivation D4 qui remplace l’item de dérivation incomplete
D3.

D3 :< X,ﬂ2,*y,adj > D1 :< N1-_,j,0z1,ﬂ2,subst > D2 :< NJ-,,*y,subst >

D4 :< NJ-,0z1,*y, subst >

5 Conclusion

Ce travail a été implémenté dans (Seddah, 2004). Sa caractéristique principale est de faire un
usage intensif des propriétés des foréts partagées aﬁn de parcourir simultanément les noeuds
de l’arbre dérivé et de l’arbre de dérivation. Les noeuds qui sont utilisés lors de l’opération de
fusion proviennent de l’arbre de dérivation pour les dérivations completes et de l’arbre dérivé
pour la dérivation incomplete. Si l’on considere que chaque item de dérivation correspond a
un argument sémantique, le graphe de dérivation correspond a un graphe sémantique similaire
au DSyntS de la théorie sens-texte (Mel’Cuk, 1997). Une extension du modele pour traiter des
phénomenes liés aux coordinations elliptiques est actuellement en cours d’élaboration. Pour
batir ce modele nous avons dﬁ modiﬁer légerement le formalisme TAG pour inclure une in-
formation lexicale nécessaire aux regles d’inférence. La méthodologie consistant a travailler

1°L’arbre élémentaire *y généralise le cas présenté ﬁgure 7 oh la fusion opérait sur l’arbre initial 045.

D. Seddah, B. Gaiffe

systématiquement au coeur de la forét partagée nous permet de travailler sur toutes les analyses
a la fois et donc de générer tous les graphes de dépendance au sein d’une forét compacte.

References

ABEILLE A. (1991). Une grammaire lexicalisée d’arbres adjoints pour le francais. PhD
thesis, Paris 7.

ABEILLE A. (1999). Verbes "a monté" et auxiliaires dans une grammaire d’arbres adjoints.
LINX,Linguistique Institut Nanterre Paris X.

BILLOT S. & LANG B. (1989). The structure of shared forests in ambigous parsing. In 33rd
Conference of the Association for Computional Linguistics (ACL’89).

CANDITO M.-H. & KAHANE S. (1998). Can the TAG derivation tree represent a semantic
graph ? In Proceedings TAG+4, Philadelphie, p. 21-24.

FRANCK A. & VAN GENABITH J. (2001). Gluetag : Linear logic based semantics for LTAG
-and what it teaches us about LFG and LTAG-. In Proceddings of the LFG01 Conference,
University of Hong Kong, Hong Kong.

GARDENT C. & KALLMEYER L. (2003). Semantic construction in feature-based tag. In
Procedings of EACL 2003 .

KALLMEYER L. (2004). LTAG Semantics with Semantic Uniﬁcation. In Proceedings of
TAG+ 7, To appears.

KALLMEYER L. & J OSHI A. (1999). Factoring predicate argument and scope semantics:
Underspeciﬁed semantics with LTAG. In Proceedings of the 12th Amsterdam Colloquium,
December.

MEL’CUK I. (1997). Vers une linguistique Sens-Texte. Lecon inaugurale. College de France,
Paris.

RAMBOW O. & J OSHI A. K. (1994). A Formal Look at Dependency Grammar and Phrase
Structure Grammars, with Special consideration of Word Order Phenomena. Leo Wanner,
Pinter London, 94.

SCHABES Y. & SHIEBER S. (1994). An alternative conception of tree-adjoining derivation.
Computational Linguistics, 20(1), 91-124.

SEDDAH D. (2004). Synchronisation des connaissances syntaxiques et sémantiques pour
l ’analyse d ’e’nonce’s en langage naturel a l ’aide des grammaires d ’arbres adjoints lexicalisées.
PhD thesis, Université Henry Poincaré, Nancy.

VIJAY-SHANKER K. & WEIR D. (1993). The use of shared forests in tree adjoining grammar
parsing. In EACL ’93, p. 384—393.

WEIR D. (1988). Characterizing Midly Context-Sensitive Grammar Formalisms. PhD thesis,
University of Pennsylvania.

