TALN 2005, Dourdan, 6-10 juin 2005

Des arbres de derivation aux forets de dépendance : un
chemin via les forets partagées

Djamé Seddah — Bertrand Gaiffe
Laboratoire LORIA, Equipe Langue et Dialogue
Campus Scientiﬁque, BP 239
F-54506 Vand0euvre—les—Nancy Cedex
{dj ame.seddah,bertrand. gaiffe} @ loria.fr

M0tS-Cl€fS I TAG, analyse syntaxique, sémantique, arbre de dépendance,forét partagée,
forét de dérivation

K€yWOFdSZ TAG, syntax, semantic, dependency tree, shared forest, derivation forest

Résumé L’objectif de cet article est de montrer comment batir une structure de repre-
sentation proche d’un graphe de dépendance 21 l’aide des deux structures de representation
canoniques fournies par les Grammaires d’Arbres Adjoints Lexicalisées . Pour illustrer cette
approche, nous décrivons comment utiliser ces deux structures 21 partir d’une forét partagée.

Abstract This paper aims describing an approach to semantic representation in the Lexi-
calized Tree Adjoining Grammars (LTAG) paradigm : we show how to use all the infonnations
contained in the two representation structures provided by the LTAG formalism in order to
provide a dependency graph.

343

344

D. Seddah, B. Gaiffe

1 Introduction

Dans cet articlel, nous montrerons comment construire un graphe de dependance dont les prin-
cipales proprietes sont de materialiser des liens syntaxiques non representes dans l’arbre de
derivation et de decrire toutes les analyses dans une seule structure compacte.

1.1 Les grammaires d’arbres adjoints

Une grammaire LTAG est essentiellement un lexique oil chaque lemme est associe a un ensem-
ble d’arbres. Ces arbres, appeles arbres elementaires, sont manipulables par deux operations :
la substitution et l’adjonction. La substitution opere sur un ensemble restreint d’arbres appeles
arbres initiaux et correspond a une derivation hors-contexte. Cette operation est obligatoire,
contrairement, d’une fagon generale, a l’adjonction qui opere sur des arbres appeles auxiliaires
et qui correspond a l’insertion d’un arbre speciﬁque au sein d’un arbre elementaire (indifferem-
ment initial ou auxiliaire) .

Arbres initiaux Arbre auxiliaire
oc1|oc2 0L3 [31
N P V
. A V... Adv
(Jean I Marie) N0\l/ V N1 \l/
aime beaucoup

Figure 1: Arbres elementaires d’une LTAG

Tous les arbres elementaires sont des projections d’entrees lexicales et par deﬁnition decrivent
tous les arguments syntaxiques des ancres associees. De fait quand une LTAG suit les principes
de bonnes constructions (Abeille, 1991) tels que le principe de co-occurence predicat-argument
et le principe de minimalite semantique, les arguments syntaxiques correspondent a des ar-
guments semantiques. C’est pourquoi l’une des deux structures de representation des LTAG,
l’arbre de derivation, qui formellement n’est que l’enregistrement des operations resultant
d’une analyse syntaxique, peut etre vu comme une structure predicat-argument.

La ﬁgure 2 nous montre que l’arbre de derivation 2 reﬂete la structure predicat-argument de la
phrase “Jean aime beaucoup Marie”.

Etant donne que chaque noeud de l’arbre de derivation correspond a une projection d’un arbre
elementaire et que chacune de ses branches decrit l’operation de combinaison entre deux noeuds,
on associe a ces noeuds une adresse de Gorn3 indiquant oil l’operation a eu lieu. Ainsi, l’ arbre de
derivation decrit de fagon univoque l’arbre dérivé qui est l’arbre syntagmatique d’un enonce

(ﬁg. 2).

‘Nous tenons £1 remercier vivemem‘ les reviewers de TALN 2005 pour leurs commentaires et leurs aimables
corrections.

2Pour des raisons de simplicite, chaque arbre dont le nom commence par B, resp. a, est un arbre auxiliaire,
resp. initial. 7 quand ce type est indifferent.

3Cette adresse correspond a une sequence d’entiers positifs deﬁnie par induction de la facon suivante 2 la
sequence vide notee 0 est l’adresse du noeud racine de l’arbre et p.k est l’adresse du k—ieme ﬁls du noeud d’adresse p.

Des arbres de derivation aux foréts de dependance

Arbre de dérivation Arbre dérivé
a3 aime P
(1) 1351 Jean (3) 1353 Marie (2) £31 beaucoup N0 V N1
I /\ I .
Jean V Adv Marie
I I
aime beaucoup

Figure 2: Arbre derive et arbre de derivation pour Jean aime beaucoup Marie

1.2 Un formalisme idéal pour une interface syntaxe sémantique idéale ?

Dans un monde ideal il serait possible de travailler a partir de cette structure aﬁn de construire
une representation logique dans l’optique d’une semantique compositionnelle 51 la Montague.
Pour etablir les fondements d’un tel modele il sufﬁrait d’associer un A-terme a chaque arbre ele-
mentaire et d’utiliser l’arbre de derivation Come support aux differentes 3-reductions induites
par les combinaisons syntaxiques de l’analyse. Ainsi, si l’on se base sur la propriete obligatoire
de completion d’un noeud de substitution, on peut considerer ce type de noeuds comme support
a des variables argumentales. Comme l’adjonction a come proprietes d’étre non predictible et
optionnelle, on pourrait considerer l’arbre ou l’adjonction a lieu comme un argument a la fonc-
tion associee a l’arbre auxiliaire qui s’adjoint. De cette fagon, on pourrait interpreter l’arbre de
derivation ﬁgure 2 de la fagon suivante (ﬁgure 3) sachant que dans ce mini modele, on remplace
les variables classiques du A-calcul par des positions argumentales entre crochets4.

ﬁl (beaucoup): )\([1]) ﬁ1([1]) (ad)

[1] ozl (aimer):
A([1]»[2]) 0z1([1]»[2]) (027 as)

[1] 062 (Jean) [2] ozg (Marie)

Figure 3: Interface syntaxe semantique dans un monde ideal

Le probleme de ce type d’interfaces syntaxe-semantique est qu’elles fonctionnent uniquement
sur un sous-ensemble restreint du langage avec des structures predicatives simples. Les LTAG
en tant que formalisme de depart ne font pas de distinctions entre adjonctions predicatives et
modiﬁeures (les premieres inversant le sens des dependances semantiques (Candito & Kahane,
1998)) ; de plus il n’y a pas de mecanismes permettant de resoudre les problemes d’ambigu’1’tes
des quantiﬁeurs et, pire, certains liens syntaxiques entre des complements verbaux et leurs su-
jets n’apparaissent pas dans l’arbre de derivation.

Les solutions analysant les deﬁciences de l’arbre de derivation sont nombreuses (Candito &
Kahane, 1998; Schabes & Shieber, 1994; Rambow & J oshi, 1994). Ces solutions peuvent étre
divisees en deux groupes : celles ou l’arbre de derivation est considere comme inutilisable,
l’arbre derive est donc utilise Come support a une interface syntaxe-semantique (Gardent &
Kallmeyer, 2003; Franck & van Genabith, 2001) ; et celles ou l’on considere que les informa-
tions portees par l’arbre de derivation doivent étre enrichies, le formalisme LTAG etant modiﬁe

4Les A-terrnes lexicaux sont ici, bien sﬁr, simpliﬁes

345

346

D. Seddah, B. Gaiffe

sinon remplace par les TAG Ensemblistes5 aﬁn de pouvoir gerer les informations de portees des
modiﬁeurs (Kallmeyer & J oshi, 1999).

Les solutions basees sur 1’ arbre derive ont pour principal probleme d’etre basees sur l’uniﬁcation
de structures de traits et sur l’utilisation conjointe d’une semantique plate comme liant via uni-
ﬁcation des arguments aﬁn d’obtenir une structure predicative correcte ou une formule logique.
Le probleme est que chaque evenement qui a lieu durant ce processus advient sur un noeud ou
une derivation a pris place (adjonction ou substitution) ; ces solutions simulent donc de facon
implicite l’arbre de derivation au sein d’une structure que lui-meme decrit sans equivoque6.

Nous partons du principe que pour etablir une interface syntaxe semantique a partir des LTAG,
nous devons d’abord nous assurer que tous les liens argumentaux sont presents dans la structure
de representation.

Sur la base de l’analyse de la problematique des verbes a controle, nous proposons une facon
de construire un graphe de dependance a partir des informations contenues tant dans l’arbre
derive que dans l’arbre de derivation a l’aide d’une structure decrivant ces deux arbres : la foret
partagee.

2 La problématique posée par les Verbes 51 controle

Nous rappellerons brievement dans cette section la difﬁculte d’analyse que posent les verbes a
controle dans le formalisme LTAG7.

On utilise souvent les verbes a controle comme temoin d’un hiatus entre syntaxe et semantique
en TAG pour la simple raison que s’il existe un lien de sous-categorisation entre un sujet et le
verbe qui le sous-categorise, ce lien devrait etre represente dans l’arbre de derivation (principe
de co-occurence predicat-argument).

Or l’arbre de derivation (ﬁg. 5) issu de l’analyse de la phrase (I ) Jean espere dormir , suivant
la grammaire jouet ﬁgure 43, ne contient pas de lien entre le sujet non realise de “dormir” et le
sujet qu’il sous-categorise : “Jean”. Or ce lien est present via la structure de traits dans l’arbre
derive9 ﬁgure 5.

En realite la structure que nous voudrions obtenir est un graphe dans lequel ce lien est present
(ﬁgure 6).

Dans cette analyse, un verbe a controle ancre un arbre auxiliaire (i.e arbre £1 c0ntr0‘le) qui
s’adjoint sur la racine d’un arbre initial ayant au plus un noeud de substitution non-realise.
On peut donc considerer qu’un verbe a controle transfere l’un de ses arguments vers l’arbre
sur lequel il s’adjoint. L’objectif est donc de formaliser ce processus a travers une operation

5(Weir, 1988) pour les TAG ensemblistes.

6Un autre probleme de ce type de solutions basees sur l’arbre derive et les structures de traits est l’emploi d’un
nombre non ﬁni de traits ce qui a pour consequence d’accroitre la capacite generative du formalisme(Kallmeyer,
2004).

7On pourra se reporter a (Abeille, 1999) pour une analyse complete mise en perspective avec les phenomenes
des Verbes a montees et comparee a d’autres formalismes.

8On notera la position vide dominee par le noeud N de l’arbre 045, nous appelons ce noeud “noeud de substitu-
tion non réalisée” ou sujet non realise

9comme le trait d’ accord pour la phrase (2) Marie espere étre belle. A des ﬁns de lisibilite, nous marquons cet
accord par un indice de co-indiciation.

Des arbres de derivation aux foréts de dependance

arbre auxiliaire : arbre initial :
(ﬁg) esperer (0z5) dormir
P P

/I\ A
N V
N01 V P0* | |
| 5 [dormir]

[esperer]

Figure 4: Grammaire jouet Verbe a controle

Arbre derive : Arbre de derivation : Graphe de dependance
P 0x5 : dormir
I
/y\  /82 I espére
N,; V P I
| | /\ (1) 0x1 : Jean
Jean espere Ni V
I I
6 dormir

Figure 5: Analyse LTAG : “Jean espere dormir”

dormir

espérer

/

Figure 6: Graphe pour “Jean espere dormir”

Jean

appelee : fusion argumentale.

2.1 Informations préalables

Les seules operations Visibles sur un arbre de derivation sont la substitution et l’adjonction
parce qu’elles temoignent du passage d’un arbre a un autre. Si nous Voulons faire apparaitre
ce lien manquant, nous devons donc simuler la derivation qu’il induit forcement. De quelles
informations disposons-nous ?

0 Nous connaissons le nombre d’arguments dans un arbre (noeuds de substitution)

0 Nous connaissons quel argument doit étre transfere car il s’agit d’une information lexi-

347

348

D. Seddah, B. Gaiffe

cale, le canevas de contrﬁle, que nous marquons directement sur le noeud conceme. Le
canevas de controle associe au noeud N d’un arbre ancre par un verbe a controle trans-
ferant son 2'-eme argument vers le j-eme argument est note Ni_;j .

Jean interdit 51 Marie de dormir Jean espére dormir
N1 —> No

Exemple :
canevas de controle N1 —> No

0 Nous savons qu’un arbre dont un noeud domine une position vide, un argument non

realise, Va recevoir un argument provenant de l’adjonction d’un arbre a controle via
l’operation de fusion. Ce transfert d’argument marquera la creation effective du lien.

Dans ce cas, si nous savons a l’avance que ce lien Va etre cree, nous pouvons d’ores et deja
prevoir la position de ce lien dans le graphe de derivation. C’est pourquoi nous creons une
nouvelle derivation que nous appelons Dérivation incomplete (marquee par la variable libre
dans la ﬁgure 7) et qui temoigne d’une substitution non realisee sur le noeud N d’un arbre oz.

Graphe de dépendancea
aprés la création du
lien manquant

analyse syntaxique

   

S: .
0' ‘J:
as: .2.
3: S:
‘D. 3;‘.
3' 3'
' 4::
3: 3. _
. .00 I I
09‘
“

Figure 7: Vision synthetique de l’operation de fusion

Avant de deﬁnir formellement l’operation de fusion sous la forme de regles d’inference, la
section suivante va expliciter le processus d’eXtraction des items de derivations.

3 Forét partagées et items de dérivations

Cette section presente l’eXtraction d’une forét de derivation classique, c’est-a-dire sans prise
en compte du processus de fusion. La forét partagee sur laquelle nous basons notre processus
resulte de l’intersection d’une grammaire TAG et d’un automate d’entree, (Vijay-Shanker &
Weir, 1993) et (Billot & Lang, 1989). La deﬁnition donnee par (Vijay-Shanker & Weir, 1993)
est etendue par (Seddah, 2004) aﬁn de lier la reconnaissance du sous arbre domine par le noeud
site d’une adjonction au noeud pied de l’arbre auxiliaire qui s’adjoint. Ceci aﬁn de permettre un
parcours synchrone de la forét partagee. Nous la representons sous la forme d’une grammaire
hors-contexte augmentee d’une pile bornee contenant les adjonctions en cours. Chaque partie de
regle correspond a un item de type Cocke-Kasami-Younger de la forme < N , POS, I , J, Pile >
ou N est un noeud d’un arbre, P03 indique si l’on se situe apres une adjonction previsible ou

Des arbres de derivation aux foréts de dependance

pas (marquee T si une adjonction sur le noeud est possible et J. si elle ne l’est plus, symbolisee
par un point gras en position haute ou basse d’un noeud sur les schemas), I et J sont les indices
de debut et de ﬁn de la chaine reconnue par le noeud N et Pile est la pile contenant les appels
des sous arbres ayant demarre une adjonction et qui doivent étre reconnus par la regle de recon-
naissance du pied.

Le processus a lieu en deux temps : 1) La forét partagee est generee a partir de la grammaire
TAG initiale et d’une chaine d’entree 2) la forét partagee est ensuite parcourue aﬁn d’en extraire
les derivations.

L’ extraction est simple : si une regle temoignant d’une derivation est validee, un item de deri-
vation est infere.

3.1 Forme des items de dérivation

A chaque occurrence d’une regle de derivation, nous produisons un item de derivation en te-
moignant. Cet item que nous appelons Deriv est de la forme < N, 7, oz, type > avec N, le
noeud qui recoit la substitution ; 7, l’arbre de ce noeud, oz l’arbre qui Va s’y substituer, type est
le type de derivation.

Trois derivations sont possibles :

0 une premiere evidente lors d’une substitution : on passe d’un noeud N d’un arbre 7 a un
noeud d’un arbre oz :
Item de substitution : < N, oz, 7, subst >

0 lors d’une adjonction : on passe d’un noeud d’un arbre 7 au noeud racine d’un arbre 3.
Nous ne considerons pas comme une derivation le passage du noeud pied de l’arbre B
au sous arbre du noeud site de l’adjonction de l’arbre oz. Cette information est de fait
evidemment redondante : une adjonction etant une insertion, il doit y avoir retour et
analyse de l’arbre appelant.

‘ Item d’adjonction: < N, ﬁ,7,czdj > |

0 lors de la reconnaissance d’un arbre initial oz ayant portee sur toute la chaine, on cree une
derivation de type “téte”.
‘ Item axiomesz < N, oz, —, — > |

3.2 Régles d’inférence de l’algorithme d’extraction du graphe de dériva-
tion

Pour toute regle 7" E R se situant sur le chemin succes, nous appliquons les regles d’inférence
suivantes :

o Dérivation de l’axi0me
Silaregler= S —> < T,Na,0,n,—,—,lb >
alors nous produisons l’item < N, oz, —, — >.

est validée lors de 1’exécution de la grammaire,

349

D. Seddah, B. Gaiffe

S P < T7Na707n7_7_7® >
Reconnaissance d’un axiome

5
HO
Sjl <T7Na707n7_7_7®> . (X
< N a _ _ > avec Ii=lo/igueur de la chame

o Dérivation d’une substitution

Si la regle r = < J_,n,,i,j, —, —,Pile > —> < T,na,i,j, —, —,Pile > est Validee
alors nous produisons 1’item < N, oz, 7, subst >.
< J_,n7,i,j, —, —,Pile > —> < T,na,i,j, —, —,Pile >

Reconnaissance d’une substitution

Q

I]

0
n'

'Y
on
<J_,n7,i,j,—,—,Pile> —> <T,na,i,j,—,—,Pile>  

< N,oi,'y,subst > i

o Dérivation d’une adjonction
Si la regle r = < T,n,,i,j,p,q,Pile > —> < T,ng,i,j,p,q,Pile’ > est Validee

alors nous produisons 1’item < N, ﬂ, 7, adj > .
‘I; :
|.Xt:.1II dj
X>k

< Tanvaiajapaqa-Pile > P) < Tanﬁaiajapaqapilel >
[5
< Tanvaiajapaqa-Pile > :> < Tanﬁaiajapaqapilel >

Reconnaissance d’une adjonction
< N: ﬁa 77  > ”

Les variables Pile et Pile’ repre’seIiteIit l ’état de la pile d ’appel des adjonctioas lors de l’exe’cutioIi
d’une foret produite. Leurs valeurs n’est pas prise en compte par cette regle d’iIife’reIice, car
l’appel d’une adjonction est une operation hors contexte. Quelque soit le contenu de ces 2 vari-
ables, la derivation sera celle témoignaat de l’adjoIictioIi de l’arbre ﬂ sur le mead X de l’arbre

'7.

3.3 item de derivation pour la derivation incomplete

Nous avons decrit (section 2.1) un noeud dominant une position Vide comme temoignant d’une
substitution non realisee et, par consequent temoin d’une derivation incomplete. La regle
d’inference suivante deﬁnit cette nouvelle derivation :

0 Si la regle < J_, N,, i, j, —, —, Pile > —> Vrai est Validee alors on produit la deriva-

350

Des arbres de derivation aux foréts de dependance

tion suivante :

< J_,N7,2',j, —, —,P2'le > —> vrai
Derivation d’une substitution non-realisee

n
W j

<J_,N7,i,j,—,—,P2'le> X _ W X 9
< N, O‘, Xvsubst > avec , non mstcmcze —.

L’ ensemble des items de derivation est genere dans un chart speciﬁque et correspond a l’ensemble
des analyses possibles. Partant d’un item axiome, nous decrivons tres exactement un arbre de
derivation. Si la grammaire suit les recommandations de (Rambow & Joshi, 1994), cet arbre
peut étre vu comme un arbre de dependance, ainsi l’ensemble des arbres decrits par cette forét
d’items est dans ce cas une forét de dependance.

4 Formalisation du processus de fusion argumentale

L’ analyse de l’adjonction d’un arbre a controle sur un arbre elementaire met en jeu 3 deri-
vations : la derivation D1 temoignant de la substitution d’un arbre ozl sur le noeud N ,dont
le canevas de controle est Ni_,j , d’un arbre a controle ﬁg ; la derivation D3 temoignant de

l’adjonction de l’arbre a controle ﬁg sur la racine d’un arbre elementaire 710 et la derivation
incomplete D2 temoignant de la presence d’un noeud N j de substitution non realisee sur l’arbre
7. L’ operation de fusion est donc la regle d’inference permettant de simuler la creation du lien
manquant via un nouvel item de derivation D4 qui remplace l’item de derivation incomplete
D3.

D3 :< X,ﬁ2,'y,adj > D1 :< N7;_,j,oz1,ﬁg,subst > D2 :< Nj,,'y,subst >

D4 :< Nj,oz1,'y, subst >

5 Conclusion

Ce travail a ete implemente dans (Seddah, 2004). Sa caracteristique principale est de faire un
usage intensif des proprietes des foréts partagees aﬁn de parcourir simultanement les noeuds
de l’arbre derive et de l’arbre de derivation. Les noeuds qui sont utilises lors de l’operation de
fusion proviennent de l’arbre de derivation pour les derivations completes et de l’arbre derive
pour la derivation incomplete. Si l’on considere que chaque item de derivation correspond a
un argument semantique, le graphe de derivation correspond a un graphe semantique similaire
au DSyntS de la theorie sens-texte (Mel’Cuk, 1997). Une extension du modele pour traiter des
phenomenes lies aux coordinations elliptiques est actuellement en cours d’elaboration. Pour
batir ce modele nous avons du modiﬁer legerement le formalisme TAG pour inclure une in-
formation lexicale necessaire aux regles d’inference. La methodologie consistant a travailler

1°L’arbre élémentaire 7 généralise le cas présenté ﬁgure 7 ou la fusion opérait sur l’arbre initial (15.

351

352

D. Seddah, B. Gaiffe

systematiquement au coeur de la forét partagee nous permet de travailler sur toutes les analyses
a la fois et donc de generer tous les graphes de dependance au sein d’une foret compacte.

References

ABEILLE A. (1991). Une grammaire lexicalisée d ’arl9res adjoints pour le francais. PhD
thesis, Paris 7.

ABEILLE A. (1999). Verbes "a monte" et auxiliaires dans une grammaire d’arbres adjoints.
LINX,Linguistique Institut Nanterre Paris X.

BILLOT S. & LANG B. (1989). The stiucture of shared forests in ambigous parsing. In 33rd
Conference of the Association for Computional Linguistics (ACL’89).

CANDITO M.-H. & KAHANE S. (1998). Can the TAG derivation tree represent a semantic
graph ? In Proceedings TAG+4, Philadelphie, p. 21-24.

FRANCK A. & VAN GENABITH J. (2001). Gluetag : Linear logic based semantics for LTAG
-and What it teaches us about LFG and LTAG-. In Proceddings of the LFGO] Conference,
University of Hong Kong, Hong Kong.

GARDENT C. & KALLMEYER L. (2003). Semantic construction in feature-based tag. In
Procedings of EACL 2003.

KALLMEYER L. (2004). LTAG Semantics with Semantic Uniﬁcation. In Proceedings of
TAG+ 7, To appears.

KALLMEYER L. & J OSHI A. (1999). Factoring predicate argument and scope semantics:
Underspeciﬁed semantics with LTAG. In Proceedings of the 12th Amsterdam Colloquium,
December.

MEL’CUK I. (1997). Vers une linguistique Sens-Texte. Lecon inaugurale. College de France,
Paris.

RAMBOW O. & J OSHI A. K. (1994). A Formal Look at Dependency Grammar and Phrase
Structure Grammars, with Special consideration of Word Order Phenomena. Leo Wanner,
Pinter London, 94.

SCHABES Y. & SHIEBER S. (1994). An alternative conception of tree-adjoining derivation.
Computational Linguistics, 20(1), 91-124.

SEDDAH D. (2004). Synchronisation des connaissances syntaxiques et sémantiques pour
l ’analyse d ’e’nonce’s en langage naturel a l ’aide des grammaires d ’arl9res adjoints lexicalisées.
PhD thesis, Universite Henry Poincare, Nancy.

VIJAY-SHANKER K. & WEIR D. (1993). The use of shared forests in tree adjoining grammar
parsing. In EACL ’93, p. 384-393.

WEIR D. (1988). Characterizing Midly Context-Sensitive Grammar Formalisms. PhD thesis,
University of Pennsylvania.

