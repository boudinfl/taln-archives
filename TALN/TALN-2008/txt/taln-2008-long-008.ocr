TALN 2008, Avignon, 9-13 juin 2008

Controle rhétorique de la génération des connecteurs
concessifs en dialogue homme-machine

Vladimir Popescu1’2 Jean Caelenl

(1) GETALP/LIG, Institut National Polytechnique de Grenoble, France
(2) Université « Politehnica » de Bucarest, Roumanie
{Vladimir.popescu, jean.caelen} @imag.fr

Résumé. Les connecteurs discursifs ont on role important dans l’interprétation des dis-
cours (dialogiques ou pas), donc lorsqu’il s’agit de produire des énoncés, le choix des mots
qui relient les énoncés (par exemple, en dialogue oral) s’avere essentiel pour assurer la com-
préhension des visées illocutoires des locuteurs. En linguistique computationnelle, le probleme
a été abordé surtout au niveau de l’interprétation des discours monologiques, tandis que pour
le dialogue, les recherches se sont limitées en general a établir une correspondance quasiment
biunivoque entre relations rhétoriques et connecteurs. Dans ce papier nous proposons un méca-
nisme pour guider la génération des connecteurs concessifs en dialogue, a la fois du point de vue
discursif et sémantique ; chaque connecteur considéré sera contraint par un ensemble de condi-
tions qui prennent en compte la cohérence du discours et la pertinence sémantique de chaque
mot concerné. Les contraintes discursives, exprimées dans un formalisme dérivé de la SDRT
(« Segmented Discourse Representation Theory ») seront plongées dans des contraintes séman-
tiques sur les connecteurs, proposées par l’école genevoise (Moeschler), pour enﬁn évaluer la
cohérence du discours résultant de l’emploi de ces connecteurs.

Abstract. Cue words play an important part in discourse interpretation (whether dialogues
are concerned or not), hence when utterances have to be produced, the choice of the words that
connect these utterances (for example, in spoken dialogue) is essential for ensuring the com-
prehension of the illocutionary goals of the speakers. In computational linguistics, the issue
has been mitigated particularly in the context of monologue discourse interpretation, whereas
for dialogues, research is usually limited to establishing an almost one-to-one mapping between
rhetorical relations and cue words. In this paper we propose a mechanism for guiding concessive
connectors in dialogue, at the same time from a discourse and from a semantic point of view;
each considered connector will be constrained via a set of conditions that take into account dis-
course coherence and the semantic relevance of each word concerned. Discourse constraints,
expressed in a formalism derived from SDRT (“Segmented Discourse Representation Theory”)
will be mapped to semantic constraints on the connectors; these semantic constraints are pro-
posed by the Geneve linguistics school (Moeschler). Finally, the coherence of the discourse
resulted from the use of these connectors will be assessed.

I
Mots-cles 2 Dialogue homme-machine, cohérence discursive, connecteurs concessifs,

sémantique, pragmatique.

Keywords: Human-computer dialogue, discourse coherence, concessive connectors, se-
mantics, pragmatics.

Vladimir Popescu, Jean Caelen

1 Introduction

Les connecteurs discursifs sont importants pour guider la comprehension des messagesl que les
locuteurs transmettent sous forme linguistique en dialoguant. Par consequent, ils ont regu relati-
vement beaucoup d’attention dans les recherches en linguistique, surtout lorsque l’interpretation
des enonces est concernee (Ducrot, 1980), (Moeschler, 1989). En traitement automatique des
langues, les connecteurs sont regardes en general de deux manieres differentes, selon les buts
assumes :

— en analyse morpho-syntaxique et semantique, les connecteurs ont souvent on role modere,
car, d’un cote ils subissent et imposent peu de contraintes aux niveaux morphologique et
syntaxique (voir par exemple, en frangais, l’emploi du subjonctif du verbe, apres bien que)
et, d’un autre cote, ils n’apportent rien a la semantique des enonces, consideree de maniere
vericonditionnelle et / ou isolee (Jurafsky & Martin, 2000)2 ;

— en interpretation / analyse du discours (qui remonte surtout a la prise en compte des aspects
pragmatiques de la langue), les connecteurs ont une place importante, car leur presence guide
le processus d’analyse (Mann & Thomson, 1986).

En generation du langage naturel, les connecteurs sont en general consideres comme les mani-
festations superﬁcielles (c’est-a-dire, au niveau de la realisation de surface) des relations rheto-
riques qui relient des enonces distincts pour constituer des discours (Reiter & Dale, 2000) ; par
exemple, le connecteur “mais” materialise une relation de correction par rapport a ce qui avait
ete dit auparavant. De toutes fagons, cette approche s’avere souvent insufﬁsante, car, comme
l’a montre Moeschler (Moeschler, 1989), les conditions d’emploi de chaque connecteur im-
pliquent souvent plusieurs enonces, relies de manieres assez diverses.

De l’autre cote, au niveau computationnel, les propos de Moeschler doivent étre developpes
sous forme d’algorithmes, o1‘1 les entrees et les sorties soient clairement precisees. A partir de
ce constat, cet article propose une formalisation computationnelle du choix des connecteurs
concessifs dans le cadre d’un module generique, congu pour le controle pragmatique de la
generation du langage en dialogue oral homme-machine (Popescu et al., 2007).

Au niveau theorique, la nouveaute de l’approche proposee dans cet article reside dans le fait
qu’a la difference de Moeschler, qui, etant donne le connecteur, deduisait le schema semantico-
pragmatique le plus pertinent et donc l’emploi du connecteur (causal ou argumentatif) (Moes-
chler, 1989), nous proposons de deduire le schema semantico-pragmatique le plus pertinent a
partir de la structure rhetorique (SDRS - « Segmented Discourse Representation Structure ») du
dialogue et, par consequent, choisir le connecteur qui satisfasse le mieux ce schema; ainsi, la
coherence du discours est egalement prise en compte.

Du point de vue applicatif, une telle demarche est utile lorsqu’il s’agit, pour la machine, de
produire des repliques, a partir d’expressions ﬁgees a trous, ce qui est une approche courante en
dialogue homme-machine ﬁnalise par la tache, etant donnees la facilite de l’implementation et
la vitesse d’execution; les expressions ﬁgees sont ensuite collees via les connecteurs calcules.
On genere donc un phenomene de surface (les connecteurs discursifs concessifs) de maniere
motivee du point de vue pragmatique et semantique.

1Le mot << message » est pris ici dans un sens elargi, integrant la portee speciﬁee par la theorie de l’information
et les Visees illocutoires des sujets parlants.

211 y a toutefois des exceptions a cette maniere de considerer les connecteurs en analyse et en generation,
comme par exemple la theorie << sens—texte » de Mel’éuk (Reiter & Dale, 2000).

Generation des connecteurs concessifs en dialogue

Pour un etat de l’art concis sur ce sujet, on peut retenir, d’un cote, les demarches convergentes
avec celles de Moeschler, qui concement seulement l’ interpretation des connecteurs du discours
ou, d’un autre cote, l’interpretation des connecteurs surtout en termes de relations de discours,
soit dans la direction ﬁxee par Marcu (Marcu, 2000), soit selon l’approche de Lascarides en
SDRT (Sporelander & Lascarides, 2006). En ce qui concerne le choix des connecteurs en ge-
neration, des travaux representatifs ont ete poursuivis par Marcu, qui reliait les connecteurs
a des relations discursives seulement (Marcu, 2000); donc, selon la terminologie de Moes-
chler, seul le « cotexte » etait pris en compte, en opposition avec le « contexte » semantico-
pragmatique, qui legitime ou bloque la production d’un connecteur, surtout lorsque le dialogue
oral est concerne.

Ici, a partir de la structure rhetorique (cotexte), nous calculons un contexte semantico-pragma-
tique, qu’on ﬁltre ensuite a travers le cotexte du dialogue entier, et qui pilote le choix des
connecteurs. La section suivante constitue le coeur de l’article et presente les semantiques des
connecteurs pragmatiques consideres, aussi que les details formels et computationnels du me-
canisme pilotant le choix des connecteurs en generation; ce mecanisme sera ensuite evalue de
maniere qualitative via un exemple typique de dialogue. La troisieme section conclut l’article
et presente des pistes pour continuer cette recherche.

2 Generation des connecteurs concessifs en dialogue

2.1 Apercus sémantico-pragmatiques des connecteurs

Les connecteurs discursifs marquant la concession ont ete bien etudies, surtout dans l’ecole
genevoise de linguistique (Moeschler, Roulet, Rubattel, etc.) (Moeschler, 1989) ; ces travaux ont
abouti a des modelisations semantiques formelles des connecteurs tels que mais, quand méme,
pourtant ou bien que. Dans ce paragraphe on donne un bref apercu d’une telle modelisation, a
partir de la presentation de (Moeschler, 1989).

Pour cela, on considere d’abord un ensemble de notations, utilisees tout au long de cet article :

— oz, ﬂ, ..., ::= etiquettes des enonces dans le discours;

— * ::= marque de connexion entre deux enonces du discours;

— TRUE, FALSE ::= les Valeurs de Verite << Vrai », respectivement << faux »;

— equa|s(a, go) ::= predicat binaire Vrai ssi la variable 04 est egale (c’est-a-dire, uniﬁee) avec la Valeur go;

— =>, -v, A, V ::= connecteurs logiques ayant leur signiﬁcation classique en logique (Gallier, 1986) ;

— E, 3, C, D ::= connecteurs ayant leur signiﬁcation classique en theorie des ensembles;

— El, V ::= quantiﬁcateurs logiques existentiel, respectivement universel;

— K (at) ::= fonction retoumant la semantique (en logique du premier ordre) de l’enonce oz;

— v()\) ::= fonction retoumant la Valeur de Verite de la formule logique A; donc, designant par A l’ensemble des
formules logiques deﬁnissables pour un alphabet donne, on a que U : A —> {TRUE, FALSE} ;

— cause(a, ,8) ::= predicat binaire Vrai ssi la modiﬁcation de contexte du discours, detenninee par l’enonce 04,
est une cause sufﬁsante pour l’aj out du contenu de l’enonce B au contexte;

— —» (at, H) ::= relation argumentative entre les enonces ct et 3, Vraie ssi un locuteur utilise l’enonce ct pour faire
admettre le contenu propositionnel o1‘1 les Visees illocutoires de l’enonce ﬂ (Ducrot, 1980);

— < ::= relation de force argumentative entre deux enonces : 04 < ﬂ ssi B est plus pertinent pour son emetteur
(qui tente d’argu1nenter le contenu d’un autre enonce, soit—il 7) que ct (Moeschler, 1989) ;

— I/(Ct, H) ::= relation de norme, Vraie ssi d ’ordinaire oz implique ﬂ; la nonne est donc une implication revisable
selon le contexte;

— sma||er(¢,1p) ::= predicat binaire Vrai ssi la Valeur ¢ est inferieure a la Valeur 1p ;

— C|assOf(¢, <19) ::= predicat binaire Vrai ssi l’element <;$ appartient a l’ensemble <1) ;

Vladimir Popescu, Jean Caelen

— \7 ::= opération logique de << ou exclusif ».

Ainsi, (Moeschler, 1989) déﬁnit deux types de concession, causale et argumentative qui se
particularisent pour chacun des connecteurs considérés - mais, quand méme, pourtant ou bien
que. Par conséquent, (Moeschler, 1989) propose un ensemble de sémantiques pour ces quatre
connecteurs, dont on ne retient, de toutes facons, que les aspects ’procéduraux’, car le but as-
sumé dans cet article est de proposer un cadre opérationnel pour la génération de ces connec-
teurs en dialogue homme-machine.

Ainsi, mais et quand méme se déﬁnissent a travers un « carré argumentatif » (délimité par trois
énoncés, oz, B et 7), formalisable de maniere concise comme ci-dessous :

1. mais peut étre employé de deux maniéres, désignées par maisl (pour 1’emp1oi de relation directe) et maisg
(pour 1’emploi de relation indirecte) :

— a main -n’y ::= Elﬂ :—» (o¢,'y) /\ ('y\7-vy) /\ (a < ﬂ) /\ equa|s(u(K(a)),TRUE) /\ equa|s(u(K(ﬂ)),TRUE)/\ —» (ﬂ, -n’y);
exemple : I1 fait beau maisl je ne sors pas . — 04 est ’il fait beau’, *y est ’je sors’ et ﬂ est par exemple ’je
ne me sens pas bien’.

— oz maisg ﬂ ::= E|'y :—» (a,'y) /\ ('y\7-n’y)/\ —» (ﬂ, -n’y) /\ equa|s(u(K(a)), TRUE) /\ equa|s(u(K(ﬂ)),TRUE);
exemple : I1 fait beau maisg j’ai mal a la téte. — 04 est ’il fait beau’, ﬂ est ’j’ai mal a la téte’ et 7 est par
exemple ’je sors’.

2. quand méme peut étre employé en relation directe seulement, ainsi :
oz quandméme -n’y ::= Elﬂ : 1/(oz, 7) /\ ('y\7-n’y)/\ —» (ﬂ, -n’y) /\ equa|s(u(K(a)), TRUE) /\ equa|s(u(K(ﬁ)), TRUE);

exemple : I1 fait beau. J e reste quand méme chez moi. — 04 est ’il fait beau’, ﬂ est par exemple ’j’ai mal a la
téte’ et 7 est ’je sors’ .

D’un autre cote, les connecteurs pourtant et bien que se déﬁnissent a travers un « triangle
causal » (délimité par deux énoncés, oz et 3), formalisable ainsi :

1. pourtant peut étre employé de deux maniéres, selon les deux permutations possibles du triangle causal
(Moeschler, 1989) :
— ozpourtantl ﬂ ::= cause(a, —»ﬁ) /\ (ﬂ\7—-,6) /\ equa|s(u(K(a)), TRUE) /\ equa|s(u(K(ﬂ)), TRUE) ;
exemple : I1 pleut, pourtantl je me balade dans le parc. — 04 est ’il pleut’ et ﬂ, ’je me balade...’.
— apourtant2 ﬂ ::= cause(ﬁ, -104) /\ (a¢\_/-101) /\ equa|s(u(K(a)), TRUE) /\ equa|s(u(K(ﬁ)), TRUE) ;
exemple : Je suis gentil avec lui, pourtantg i1 me dit de gros mots toujours. — 04 est ’je suis gentil...’ et ﬂ,
’i1me dit de gros mots...’.

2. bien que peut également étre employé de deux maniéres, selon les permutations du triangle causal :
— bien quel a, ﬂ ::= cause(a, —»ﬁ) /\ (ﬂ\7—-,6) /\ equa|s(u(K(a)), TRUE) /\ equa|s(u(K(ﬂ)), TRUE);
exemple : Bien qu’1 i1 fasse mauvais, je sors. — 04 est ’il fait mauvais’ et ﬂ, ’je sors’.
— a bien que2 ﬂ ::= cause(ﬁ, -104) /\ (a¢\7—Io¢) /\ equa|s(u(K(a)), TRUE) /\ equa|s(u(K(ﬁ)), TRUE) ;
exemple : Je me balade dans le parc, bien qu’2 il pleuve. — 04 est ’je me balade...’ et ﬂ, ’il pleut’.

Dans ce paragraphe nous avons présenté les sémantiques de quatre connecteurs concessifs,
mais, quand méme, pourtant et bien que, formalisées dans une approche qui s’inspire des tra-
vaux de l’école genevoise (Moeschler, 1989). Pour une spéciﬁcation algorithmique du proces-
sus de génération de ces connecteurs, a partir de leurs sémantiques, il y a au moins un point
a améliorer dans les sémantiques présentées : on observe qu’au niveau formel il n’y a aucune
différence entre les sémantiques de pourtant et bien que. Comment savoir alors quel connecteur
produire, dans un contexte donné ? Pour l’interprétation, Moeschler précise seulement que bien
que stipule une plus forte détermination causale entre ses arguments, par rapport a pourtant
(Moeschler, 1989); donc, il faudra exprimer cette idée de maniere formelle, en tant que regle
ou contrainte supplémentaire agissant sur la sémantique de ce connecteur.

Génération des connecteurs concessifs en dialogue

2.2 Structure de discours et sémantique des connecteurs

L’ idée fondamentale de cet article est de « calculer » le connecteur le plus approprié en genera-
tion dialogique, par rapport au contexte sémantico-pragmatique de la conversation. Ainsi, pour
cela on part d’une représentation profonde du cotexte associé au dialogue, a laquelle on ajoutera
des contraintes contextuelles.

Nous supposons que le point de départ pour le calcul des connecteurs est une structure segmen-
tée de discours (SDRS), calculé en préalable par un module de structuration rhétorique (Popescu
et al., 2007). Cette structure de discours est calculée dans le cadre d’une version adaptée de la
SDRT, pour la génération en dialogue (Popescu et al., 2007).

Pour qu’on puisse utiliser cette structure rhétorique dans le calcul des connecteurs, nous spé-
ciﬁons une grammaire pour la représenter, utilisant les informations fournies par le module
de structuration rhétorique. Une telle grammaire suppose que les informations sur la SDRS
consistent en (i) le nombre D des énoncés connectés par des relations rhétoriques, (ii) le nombre
R des relations rhétoriques qui relient les énoncés, (iii) l’ensemble H d’étiquettes 7r des énoncés,
(iv) l’ensemble P des étiquettes des relations rhétoriques3, (V) les formes logiques K des énon-
cés dans la structure de discours, (vi) les sémantiques (exprimées dans une logique du premier
ordre (Popescu et al., 2007)) 2 des relations rhétoriques dans la structure de discours. Cette
grammaire est présentée de maniere détaillée en (Popescu, 2007).

En ce qui concerne l’ensemble possible des relations rhétoriques qui relient des paires d’énon-
cés (ou de sous-structures de discours), nous avons considéré 17 relations (Popescu et al.,
2007), du total de 35, précisées par la SDRT d’origine (Asher & Lascarides, 2003) : (i) re-
lations dialogiques - Q-Elab (« Question Elaboration »), IQAP (« Indirect Question-Answer
Pair »), P-Corr (« Plan Correction »), P-Elab (« Plan Elaboration »), Backgroundq (« Back-
ground Question »), Elabq (« Elaboration Question »), Narrationq (« Narration Question »),
QAP (« Question-Answer Pair »), ACK (« Acknowledgement ») et NEI (« Not Enough Infor-
mation ») ; (ii) relations monologiques - Altemation, Background, Consequence, Elaboration,
Narration, Contrast et Parallel. Les sémantiques de toutes ces relations rhétoriques sont simu-
lées dans une logique du premier ordre, pour plus d’efﬁcacité computationnelle dans le contexte
des dialogues ﬁnalisés par la tache (Popescu et al., 2007); cette simulation conserve les sé-
mantiques informelles des relations, en tant que précisées dans la SDRT d’origine (Asher &
Lascarides, 2003).

Pour relier cette structure rhétorique aux spéciﬁcations sémantiques des connecteurs concessifs
(présentées dans la section 2.1), on va transposer le carré argumentatif et le triangle causal qui
situent les quatre connecteurs considérés, dans des contraintes de type rhétorique ; pour cela, on
s’appuie sur les sémantiques des relations rhétoriques, en tant que précisées en (Popescu et al.,
2007). Ainsi, nous proposons tout d’abord un ensemble de correspondances entre les relations
sémantiques spéciﬁant les connecteurs et les relations rhétoriques; ces correspondances, pré-
sentées dans le tableau 1 sont motivées également par les déﬁnitions de (Moeschler, 1989) et
par les spéciﬁcations de (Asher & Lascarides, 2003).

S’appuyant sur ces correspondances, nous pourrons spéciﬁer les sémantiques des connecteurs,
en termes des relations de discours (et des connecteurs logiques usuels). Cependant, une obser-
vation préalable s’impose : dans la section 2.1 il n’y avait pas de distinction sémantique formelle
entre pourtant et bien que ; de toutes facons, l’idée d’une plus forte détermination causale agen-

3Les étiquettes des relations rhétoriques sont identiques a leurs noms (Asher & Lascarides, 2003).

Vladimir Popescu, Jean Caelen

TAB. 1 — Relations sémantiques (Moeschler) et relations rhétoriques (Asher & Lascarides)

| Relation sémantique | Relation rhétorique |
V 04, oz, /\ 04 V
0: =>

_»a
O!

 

cée par bien que peut étre formalisée via une contrainte supplémentaire sur ce connecteur : que
le temps de l ’acti0n décrite par Z ’én0ncé qui succede ce connecteurprécede le temps de l ’acti0n
décrite par le deuxieme énoncé sous l ’incidence de ce connecteur. Au niveau logique cela sera
exprimé via la fonction A(a) qui précise (retourne) le temps de l’action décrite par l’énoncé
libellé oz ; cette fonction est codée dans une ontologie de discours (Popescu et al., 2007).

Ainsi, les sémantiques des connecteurs concessifs considérés se formalisent, en termes rhéto-
riques, comme ci-dessous :

1. oz mais1 -n’y ::= Elﬂ : Consequence(a, 7)/\Contrast('y, -n’y)/\Consequence(ﬂ, —vy)/\equa|s(u(K(oz)), TRUE)/\equa|s(u(K(ﬂ)),
TRUE) /\ equa|s(u(K(»y)), FALSE)/\ < (a,ﬂ);

2. 0: maisg ﬂ ::= E|'y : Consequence(oz, 7) /\ Contrast('y, —vy) /\Consequence(ﬂ, -n’y) /\equa|s(u(K(o¢)), TRUE) /\equa|s(u(K(ﬂ)),
TRUE) /\ equa|s(u(K(7)), FALSE);

3. oz quand méme -n’y ::= Elﬂ : Background(a, 7) /\ Contrast('y, -n’y) /\ Consequence(ﬂ, -n’y) /\ equa|s(u(K(a)), TRUE) /\
equa|s(u(K(,6)), TRUE) /\ equa|s(u(K(ry)), FALSE);

4. apourtantl ﬂ ::= (04 => -vﬂ) /\ Contrast(ﬂ, -uﬂ) /\ equa|s(u(K(a)), TRUE) /\ equa|s(u(K(ﬂ)), TRUE);

5. apourtant2 ﬂ ::= (ﬂ => -04) /\ Contrast(a, -uoz) /\ equa|s(u(K(a)),TRUE) /\ equa|s(u(K(ﬂ)), TRUE);

6. bien quel oz, ﬂ ::= (04 => -vﬂ) /\ Contrast(ﬂ, -vﬂ) /\ equa|s(u(K(a)), TRUE) /\ equa|s(u(K(ﬁ)), TRUE) /\ sma||er(At(a),
At(ﬁ));

7. oz bien que2 ﬂ ::= (ﬂ => -va)/\Contrast(oz, —uo¢)/\equa|s(u(K(oz)), TRUE)/\equa|s(v(K(ﬂ)), TRUE)/\sma||er(At(ﬂ), At(a)).

Dans ces sémantiques, les énoncés non reliés par les connecteurs, mais intervenant dans les
contraintes sur ces derniers (7 ou B, selon le cas) sont tirés soit du cotexte, soit du contexte :

— si l’énoncé en question est présent dans le discours, dans des tours de parole antérieurs, on
s’appuie sur lui;

— sinon, on déduit cet énoncé a partir des énoncés antérieurs et de l’ontologie de téiche (Caelen
& Xuereb, 2007) (le contexte), via un processus inférentiel.

Une derniere remarque a l’égard des sémantiques des connecteurs concessifs (et du lien entre
celles-ci et la structure rhétorique) concerne la relation « < / 2 », de force argumentative, non
formalisée par Moeschler ou dans les sections antérieures de cet article. Pour cela, on s’appuie
de maniere explicite sur le contexte du dialogue, posant qu’on peut avoir deux interlocuteurs,
l’émetteur d’un énoncé courant, désigné comme ci-dessus, par la fonction emitter / 1 et l’alocu-
taire, désigné par —uemitter/ 1 ; par conséquent, il n’y a pas d’équivalence entre des expressions
du type *(—uemitter(a), qﬁ) et -u * (emitter(a), qﬁ), ou « >:< » désigne un prédicat binaire quel-
conque et « qﬁ », un terme quelconque. Ceci étant, nous posons comme hypothese de travail
qu’un énoncé dont le contenu fait une référence explicite a son émetteur a une force argumenta-
tive plus élevée par rapport a un énoncé qui ne le fait pas, ou qu’un énoncé qui fait une référence
explicite a l’alocutaire (donc, au destinataire) a une force argumentative plus élevée par rapport
a un énoncé dont le contenu ne fait référence ni a cet alocutaire, ni a l’émetteur. Précisant que
deux énoncés dont la force argumentative est a comparer ont le meme émetteur, ces consignes
peuvent s’exprimer sous forme logique ainsi :

a < ﬂ ::= (C|assOf(emitter(ﬁ), K (ﬂ))/\—«C|assOf(emitter(o¢), K (a)))v(C|assOf(—-emitter(,6), K (ﬂ))/\—-C|assOf(—-emitter(a), K (a))
/\ —-C|assOf(emitter(o¢), K (a))) /\ equa|s(emitter(a), emitter(ﬁ)) /\ equa|s(—-emitter(a), —-emitter(ﬂ)).

Génération des connecteurs concessifs en dialogue

2.3 Choix des connecteurs : algorithme

Le cadre posé dans le paragraphe précedent pour l’expression sémantique, amendée par la struc-
ture rhétorique, des connecteurs concessifs en dialogue sera mis en valeur via une procédure
concue pour générer les connecteurs appropriés, lorsqu’il s’agit, pour la machine, de produire
un énoncé dialogique.

Les entrées dans cette procedure consistent en (i) la structure rhétorique du dialogue « courant »
(c’est-a-dire, intégrant aussi la sémantique de la réplique censée étre générée par la machine et
donc, éventuellement, contenir un ou plusieurs connecteurs concessifs), (ii) les sémantiques
des connecteurs (spéciﬁées sous forme de regles), (iii) l’ontologie de discours (spéciﬁée sous
forme d’arbre hiérarchique (Popescu et al. , 2007)) et (iv) l’ontologie de tache pour les dialogues
(spéciﬁée, a l’instar de l’ontologie de discours, sous forme de hiérarchie de concepts (Caelen &
Xuereb, 2007)).

La sortie de cette procedure consiste en un ensemble de connecteurs qui peuvent relier les
énoncés dans la réplique courante de la machine ; cette liste peut éventuellement étre vide, mais
dans le cas contraire, chaque entrée dans cette liste a trois éléments : (i) le connecteur choisi,
(ii) son « argument gauche » et (iii), son argument droit; donc une entrée type est de la forme :
(>1<, 7r,-, vrj), ce qui correspondra a une forme de surface du type 7r,- * vrj, ou * est le connecteur
et 7r,- et 7r,-, les libellés de deux énoncés. Donc, la procédure est spéciﬁée ci-dessous :

1. initialiser la liste des connecteurs : A <— (Z);

2. lire la structure de discours courante, S'(D, R, P, H) (cf. §2.2) ;

3. lire les étiquettes des énoncés a etre générés par la machine, < 7r >, avec < 7r >C H et | < 7r > | < D;
4

. trier l’ensemble < 7r > par rapport a l’ordre d’apparition des énoncés (ordre spéciﬁe par le composant de
structuration rhétorique (Popescu et al., 2007));

5. pour chaque énoncé 7r_ dans < 7r > :

(a) repérer les relations rhétoriques connectant l’énoncé 7r_ a des énonces dans S’ ; soient ces relations
spéciﬁées par l’ensemble < p >,,_C P, avec | < p >,,_ | < R;

(b) repérer les arguments gauches des relations dans l’ensemble < p >,,_; soient ces arguments spéci-
ﬁes par l’ensemble < 'y >,r_C H, avec | < 'y >,,_ | < D;

(c) pour chaque sémantique § des connecteurs (§ 6 E, avec  = 7, car il y a 7 connecteurs possibles) :
i. apparier(§, 7r_, (< p >,,_, < *y >,,_)) ;
 si OK, alors A <— A U (5, 7r‘5,7r_);
iii. sinon, alors A <— A U (2);
6. si |(>s<, 7r5 , 7r_)| > 1 (la procedure apparier retoume plusieurs connecteurs entre deux enoncés), alors :

(a) s’il existe un connecteur qui a un maximum de contraintes, alors garder celui—ci et enlever le reste
(par exemple, entre pourtant et bien que, garder le demier et enlever le premier) ;

(b) sinon, s’il existe un connecteur qui assure un nombre maximal de relations rhétoriques, c’est-a-dire,
qui contient un nombre maximal de relations rhétoriques diﬂérentes dans ses contraintes, alors :

i. si les sémantiques des connecteurs ne menent pas a une contradiction logique, alors garder
tous ces connecteurs;

 sinon, alors garder celui—ci et enlever le reste (par exemple, entre mais et quand meme, garder
le demier et enlever le premier, car celui—ci contient deux relations rhétoriques différentes,
Consequence et Contrast, tandis que le demier en contient trois — les deux qui Viennent d’etre
précisées, auxquelles Background s’ajoute) ;

(c) sinon, alors choisir de maniere aléatoire un des connecteurs (cette situation est peu probable, étant
données les sémantiques des connecteurs et leur utilisation);

7. retoumer A.

Vladimir Popescu, Jean Caelen

Le noyau de l’algorithme consiste dans la procédure apparier / 3, qui prend en entrée la séman-
tique d’un connecteur, (l’étiquette d’) un énoncé qui constituera l’argument droit du connecteur
et une structure formée de deux ensembles : un ensemble de relations rhétoriques (censées
avoir 7r_ en tant qu’argument droit) et, respectivement, un ensemble d’énoncés (censés étre les
arguments gauches des relations rhétoriques). La sortie de la procédure apparier est constituée
d’une structure qui contient la sémantique d’un connecteur, son argument gauche et, respecti-
vement, son argument droit (qui est censé étre justement l’énoncé 7r_ lu en entrée) :

1. initialiser trois listes : ﬂ <— (2), F <— (Z), 5 <— (Z); ces listes contiendront, respectivement, des étiquettes
d’énoncés, des étiquettes de relations rhétoriques, et des connecteurs logiques ;

2. pour chaque terme dans la sémantique 5 du connecteur, le classer dans une des categories suivantes : (i)
étiquettes d’énoncés, (ii) relations de discours, (iii) connecteurs logiques;
3. par consequent, actualiser les listes ﬂ, ? et 5;
4. si F C< p >,,_, alors:

(a) uniﬁer les termes dans ﬁ qui sontles arguments des termes en F, avec les termes en < *y >,,_ qui
sont les arguments des termes en Pﬂ < p >,,_;

(b) pour chaque connecteur logique en 5, vériﬁer si celui—ci peut etre place entre des entités en < p >,,_

F)? et < 'y >,,_ ﬂﬁ, aﬁn que:

— la succession des termes et connecteurs soit identique a celle spéciﬁée en Q", a part les uniﬁcations
de l’étape 4.(a) ;

— la forme logique résultée (en étendant les énoncés a leurs sémantiques, exprimées Via des prédicats
dans l’ontologie de tache, selon les details précisés en (Popescu et al., 2007)) ne mene pas a
l’ensemble Vide (c’est—a—dire, a une contradiction) ;

cette étape représente en fait la resolution de la formule logique obtenue de 5, en substituant les

énoncés par des énoncés dans la structure de discours en entree, pourvu qu’on preserve les arguments

des relations rhétoriques ;

(c) si OK, alors retoumer OK, (5, 7r5 , 7r_) ;
(d) sinon, alors retoumer K0;

5. sinon, alors retoumer K0.

2.4 Tracage sur une situation de dialogue

Nous démontrons l’opération des algorithmes proposés en §2.3 sur un fragment de dialogue
typique entre le systeme et un client, ou la machine est une bibliothécaire virtuelle. Ainsi, desi-
gnant par U le client (l’usager), par M, la machine, et par l’indice supérieur 7r,-j, l’étiquette du
j-eme énoncé dans le i-eme tour de parole, le dialogue est montré ci-dessous (les connecteurs
ont été Inis en italiques) :

U : Excusez—moi”11, pourrais—je emprunter ce bouquin ?"12

M : Monsieur, Vous ne pouvez emprunter que trois livres a la fois"21, mais je ferai quand méme une
exception cette fois-ci.”2“‘

U : Merci beaucoup !"31 Alors, je Vous donne ma carte ?”32
M : Bon"41, bien que Vous ayez déja gardé un livre il y a deux mois"42 , je Vous en prete maintenant
quatre"43 ; pourtant, Vous n’aVez pas l’air plus attentif en ce moment...7r44

Les énoncés de M sont disponibles sous forme logique, en tant que foumis par le contro-
leur de dialogue (Caelen & Xuereb, 2007), (Popescu et al., 2007), tandis que ceux de U, sous
forme linguistique; a partir de ces derniers, l’analyseur sémantique calcule, pour ces énoncés,
les formes logiques correspondantes, auxquelles l’interpréteur pragmatique attache les infor-
mations concernant le type d’acte de langage véhiculé par chaque contribution dialogique de

Génération des connecteurs concessifs en dialogue

l’usager (Caelen & Xuereb, 2007). A partir de ces informations, le composant de structuration
rhétorique dans le module de génération calcule la SDRS qui integre les formes logiques des
énoncés censés étre réalisés sous forme linguistique par M (Popescu et al., 2007). Ainsi, pour
le fragment de dialogue considéré, la SDRS calculée est exprimée, sous forme synthétique,
ci-dessous :

Elaboration(7r11, 7r12) /\ P-Corr(7r12, 7r21) /\ Consequence(7r21, -v7r22) /\ACK(7r22, 7r31) /\ Consequence(7r31, 7r32) /\ACK(7r32, 7r41) /\

P-Elab(7r22, 7r43) /\ Consequence(7r42, -v7r43) /\ Consequence(7r43, -v7r44) /\ Narration(7r42, 7r44).

Les relations de discours ont été calculées entre des paires d’énoncés et méme entre des paires
dont un élément est un énoncé sous forme niée; cela est utile pour faire la correspondance
entre des fragments de cette SDRS et les sémantiques des connecteurs. Ainsi, pour la premiere
réplique de la machine, entre les énoncés 7r21 et TF2; la procédure apparier retoume les ele-
ments (mais, 7r21, W22) et (quand méme, W21, W22), puisque, pour mais on retrouve les contraintes
C0nsequence(7r21, -W22) /\ C0m,‘rast(7r22, -W22) /\ equa|s(v(K(7r21)), TRUE) /\

equa|s(v(K(—nr21)), FALSE) et l’énoncé « manquant » B est retrouvé en tant que ’vous ne
pouvez pas emprunter ce livre’ qui est déduit par modus ponens (Gallier, 1986) a partir de 7r21
et du fait (connu par le systeme a travers son ontologie de tache) que U a déja emprunté trois
livres qu’il n’a pas encore rendus; pour quand méme est déduit via les mémes contraintes que
ci-dessus, auxquelles s’ajoute la contrainte Backgr0und(7r21, -uvrgg), déduite par modus ponens
du fait que U a déja emprunté trois livres et que, par défaut, selon le reglement, la bibliotheque
ne préte pas plus de trois livres a la fois. Dans ce contexte, on a trois choix : (i) supprimer mais,
(ii) supprimer quand méme, (iii) garder les deux connecteurs ; selon l’algorithme dans §2.3 nous
devrions adopter un des choix (ii) ou (iii). Du fait que (iii) ne mene a aucune contradiction lo-
gique, nous l’adoptons, car ainsi nous augmentons la pertinence illocutoire de la contribution
langagiere de M. De toutes facons, pour pouvoir garder mais on doit vériﬁer la satisfaction de
< (W21, B), ce qui est vrai puisque 7r21 exprime une vérité générale - ’on peut emprunter au plus
trois livres a la fois’, tandis que B exprime un fait relié a U, donc : C|assOf(—Iemitter(ﬂ), K

La deuxieme contribution de la machine est traitée de maniere similaire : entre les énoncés
7r42 et 7r43 la procédure apparier retoume (bien que, 7'('42, 7r43) et (pourtant, 7121;, mg), puisqu’on
retrouve la contrainte 7r42 => -u7r43, déduite de la relation C0nsequence(7r42, -u7r43) et du fait,
présent dans l’ontologie de tache, que si un client avait perdu un document, la bibliotheque serait
devenue plus stricte avec celui-ci, ce qui n’est pas compatible avec la concession de préter plus
de documents que le reglement prévoit, a cet usager (quatre livres, au lieu de trois); toutefois,
on en retient seulement bien que, car, selon l’algorithme dans §3.2, ce connecteur est déﬁni
par plus de contraintes : a partir de K (W42) et de K (TF43) (les sémantiques des énoncés 7r43 et
7r44) on déduit sma||er(At (W42), At (7r43)). Par contre, pour les énoncés 7r43 et 7r44, la procédure
apparier, opérant a l’instar du cas précédent, ne retourne quand méme que pourtant, car, du fait
que le temps de ces deux énoncés est le méme (le present), on a que equa|s(At(7r43), At(7r44)),
donc les contraintes pour bien que ne sont pas satisfaites.

3 Conclusion

Dans cet article nous avons proposé un cadre pour controler la génération des connecteurs
concessifs aﬁn de mieux structurer les répliques de la machine en dialogue avec les utilisa-
teurs. Le mécanisme proposé pour générer mais, quand méme, pourtant et bien que s’articule
d’une part autour d’une description sémantique de ces connecteurs, dérivée de celle proposée

Vladimir Popescu, Jean Caelen

par (Moeschler, 1989) et, d’une autre part, autour d’un ensemble de spéciﬁcations pragmatiques
dans une procédure computationnelle. Ainsi, l’efﬁcacité de ce cadre a été démontrée sur un frag-
ment typique de dialogue homme-machine autour d’une application particuliere - la réservation
de documents dans une bibliotheque. Toutefois, les démarches proposées sont génériques, voire
indépendantes du domaine d’application et paramétrables par rapport a celui-ci.

Cette recherche devrait étre continuée a plusieurs niveaux : (i) l’ensemble des connecteurs de-
vrait étre étendu a d’autres, comme parce que, puisque, car, d ’ailleurs, etc. ; (ii) le mécanisme
devrait étre étendu au cas du dialogue a plusieurs locuteurs, ce qui reviendrait dans un premier
temps a la modiﬁcation de la sémantique de la relation de force argumentative < : les inter-
locuteurs de la machine ne sont plus réduits a —uemitter() ; du fait que plusieurs interlocuteurs
interviennent, on peut avoir un ensemble plus large de situations concernant la force argumen-
tative : par exemple un énoncé dont l’action implique un locuteur plus haut du point de vue
hiérarchique ou plus actif en conversation peut étre plus pertinent du point de vue argumentatif
qu’un autre énoncé impliquant son émetteur... ; (iii) une fois réalisées les extensions au dialogue
a plusieurs, ce mécanisme devra étre évalué de maniere statistique sur des dialogues réels.

Références

ASHER N. & LASCARIDES A. (2003). Logics of Conversation. United Kingdom : Cambridge
University Press.

CAELEN J. & XUEREB A. (2007). Interaction et pragmatique - jeux de dialogue et de lan-
gage. Paris : Hermes Science.

DUCROT O. (1980). Les mots du discours. Paris : Editions du Minuit.
GALLIER J. (1986). Logic for Computer Science. New York : Wiley.

JURAFSKY D. & MARTIN J . H. (2000). Speech and Language Processing. New Jersey :
Prentice Hall.

MANN W. C. & THOMSON S. A. (1986). Rhetorical Structure Theory .' description and
construction of text structures. Nijmegen, The Netherlands : Information Sciences Institute.

MARCU D. (2000). The Rhetorical Parsing, Summarization and Generation of Natural Lan-
guage Texts. Canada : Ph D Thesis, University of Toronto.

MOESCHLER J . (1989). Modélisation du dialogue - repre’sentation de l’infe’rence argumenta-
tive. Paris : Hermes Science.

POPESCU V. (2007). Pronominal anaphora generation in human-computer dialogue, using
a semantic-pragmatic approach. In Proceedings of the Doctoral Consortium at the FoLLI
Summer School E UROLAN, Iasi, Romania : “Al. I Cuza” University Press.

POPESCU V., CAELEN J . & BURILEANU C. (2007). First-order logic rhetorical structuring
for natural language generation in human-computer dialogue. In Lecture Notes in Computer
Science 4629, Heidelberg : Springer.

REITER E. & DALE R. (2000). Building Natural Language Generation Systems. United
Kingdom : Cambridge University Press.

SPORELANDER C. & LASCARIDES A. (2006). Using automatically labelled examples to
classify rhetorical relations : an assessment. In Journal of Natural Language Engineering,
United Kingdom : Cambridge University Press.

