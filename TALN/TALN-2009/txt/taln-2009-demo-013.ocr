TALN 2009, Senlis, 24-26 juin 2009

Un Analyseur Sémantique pour le DHM
Démonstration

J eréme Lehuen (1), Thierry Lemeunier (2)

LIUM — Universite du Maine
Avenue Laennec, 72085 Le Mans Cedex 9
(1) J erome.Lehuen@lium.uniV—lemans.fr
(2) Thierry.Lemeunier@lium.uniV—lemans.fr

1 Introduction

Le systeme présenté est un analyseur sémantique destiné a étre intégré dans un systeme de
dialogue homme—machine avec entree Vocale. Afin de ne pas faire reposer l’interprétation
sémantique sur le succes d’une analyse syntaxique, nous avons cherché a intégrer des aspects
syntaxiques et sémantiques au sein d’un méme modele, ce qui permet plus facilement de faire
collaborer ces deux dimensions. De plus, l’analyseur permet les analyses partielles, ainsi que
la generation d’hypotheses lexicales et structurelles. ll repose sur une grammaire syntaXico—
sémantique contrélée par un processus de type analyse tabulaire (Kay, 1986) qui permet de
contoumer certaines structures agrammaticales, ou non décrites dans la grammaire.

2 Modélisation

Les connaissances se présentent sous la forme d’un lexique dans lequel les entrees sont
définies a la fois syntaxiquement et sémantiquement. Une lexie est caractérisée par un nom
(forme normalisée), par un systeme d’offres et d’attentes sémantiques, et par au moins une
forme d’usage langagiere (Figure 1). Les offres et les attentes sont des categories ou des traits
sémantiques, determines a partir d’une ontologie issue de la tache applicative. Les formes
d’usage sont des structures syntaxiques composées de mots (symboles terminaux) et/ou de
relations de dépendance faisant reference aux attentes (symboles non—terminauX), comme par
exemple << A1 chambre A2 >> ou A1 et A2 font reference a des attentes de la lexie [chambre].
On obtient ainsi une sorte de grammaire non contextuelle utilisable pour l’analyse, et
éventuellement pour la generation (Lehuen, 2008).

_ ------------- -- analyse - ----------- __

z ‘\

I’ \
offres \{ 01' 02 )1, ------ -- génération -—-—--_ ,'

 

 

attentes . .
{a11,a12} (a21}

 

Figure 1 : Modele de lexie a deux attentes

Lehuen et Lemeunier

La representation sémantique d’un énoncé consiste alors en une structure de dépendances
(Tesniere, 1959) qui couvre les mots ou expressions correspondant a des formes d’usage
reconnues. Les noeuds du graphe — les granules — correspondent a des lexies instanciées dans
le contexte de l’énoncé (Figure 2).

{ nombre ) {objet } ( chambre~type } {omen
T T T [chambre]
C [1] J [[chambre] J [ [double] 3 %> nombre-chambre
/ (nombre)
nombre-chambre [1 l
d

{ nombre} {chambre—1ype) "une chambre double"

   

      

(chambre-type)
[double]

Figure 2 : Des lexies a la structure de granules

La lexie [chambre] comporte une attente associée a un role. Le role permet de contextualiser
un granule fils en fonction de son pere. Ainsi, un granule possédant le trait {nombre} dans le
contexte d’un granule [chambre] est un nombre—chambre.

3 Implémentation et résultats

L’algorithme d’analyse tabulaire repose sur l’algorithme RETE (Forgy, 1982) qui intervient
dans l’implémentation de systemes a base de faits et de regles de production, tel que CLIPS1.
Pratiquement, le lexique code en XML est d’abord traduit sous la forme de regles CLIPS a
l’aide de transformations XSLT, puis compile par l’algorithme RETE. Cet algorithme, qui
tend a sacrifier la mémoire au profit de la Vitesse, s’est révélé particulierement efficace pour
implémenter notre algorithme. Les 3000 énoncés de 8 mots en moyenne du corpus MEDIA
(Bonneau—Maynard, 2005) ont été analyses en moins de 4mn, soit 80ms par énoncé sur un
Dual Core 2Ghz (ce temps évoluant linéairement par rapport au nombre de mots). Nos
résultats sur le corpus MEDIA sont plutot satisfaisants avec un CER (Concept Error Rate)
égal a 34,7 par rapport a l’annotation manuelle en << full 4 modes >>. Le tableau suivant place
notre taux d’erreurs par rapport aux participants a la campagne MEDIA—EVALDA de 2005 :

LIMSI—1 LIMSI—2 LIUM LORIA VALORIA LIA
29,0 30,3 34,7 36,3 37,8 41,3

4 Démonstration

Notre demonstration consiste a illustrer la grammaire et le fonctionnement de l’analyseur a
l’aide d’un lexique et d’un corpus simplifies. Les points abordés sont les suivants :

Le modele des connaissances (granules, structures de granules, roles) ;

La resolution des ambigu'1'tés lexicales (utilisation des traits sémantiques) ;

La generation des hypotheses lexicales (utilisation des formes d’usage) ;

La generation des hypotheses structurelles (utilisation des traits sémantiques) ;
La representation des questions et des négations.

.U1:'>P-’!°t-‘

1 CLIPS (C Language Integrated Production System) est un outil de construction de systémes 2 base de régles.

Analyseur Se'mantique pour le DHM

Chaque point fait l’objet d’un mini scenario qui illustre la formalisation des connaissances, les
principes d’analyse mis en oeuvre, ainsi que la representation obtenue. Par exemple, le point
n°2 (resolution des ambigu'1'tés lexicales) est illustré a l’aide des phrases suivantes :

0 Un avocat ambigu'1'té personne/fruit non résolue
0 Un avocat bien mﬁr ambigu'1'té résolue par le fils (adjectil)
0 Un avocat tres competent ambigu'1'té résolue par le fils (adjectil)
0 J e mange un avocat ambigu'1'té résolue par le pere (Verbe)
0 J e mange un avocat tres competent ambigu'1'té personne/fruit non résolue

La trace des inferences permet de suivre les différentes étapes de l’analyse sémantique :

C A r‘ Terminal — yade — 1S9><38
: 3e voudrais un avocat bien mar

> SEGMENT [3e voudrais] pos=l categori —GV
> SEGMENT [un avocat bien mar] pos=3 categorie=GN

GRANULE mur#1 [mar] pattern="(bien) mar" pos=6 offres=(etat) traits=() constituants=() score=1

GRANULE mur#Z [bien mar] pattern="(bien) mur" pos=5 offres=(etat) traits=() constituants=() score=Z

GRANULE ob]et:avocat#3 [avocat bien mar] pattern=”(Al) avocat(s) (AZ)" pos=4 offres=(obJet comestible) traits=() constitua
GRANULE personne:avocat#4 [avocat] pattern=”(A1) avocat(s) (AZ)" pos=4 offres=(personne) traits=() constituants=() score=1
GRANULE objetzavocatns [avocat] pattern="(A1) avocat(s) (AZ)“ pos=4 offres=(ob3et comestible) traits=() constituants=() sc
GRANULE demander#6 [je voudrais] pattern=”je veux/voudrais (A1)” pos=1 offres=(action) traits=() constituants=() score=Z
GRANULE nombre:1#7 [un] pattern= un/une" pos=3 offres=(determinant nombre) traits=() const1tuants=() score=1

GRANULE personne:avocat#8 [un avocat] pattern=”(A1) avocat(s) (AZ)" pos=3 offres=(personne) traits=() constituant (nombre
GRANULE ob]et:avocat#9 [un avocat bien mar] pattern=”(A1) avocat(s) (AZ)" pos=3 offres=(ob]et comestibte) traits=() consti
GRANULE demander#10 [je voudrais un avocat bien mur] pattern=“je veux/voudrais (A1)“ pos=1 offres=(act1on) traits=() const
GRANULE objetzavocatdll [un avocat] pattern=”(A1) avocat(s) (AZ)” pos=3 offres=(objet comestible) traits=() constituants=(
GRANULE demanderwlz [Je voudrais un avocat] pattern=”]e veux/voudrais (A1)" pos=1 offres=(act1on) traits=() constituants=(
GRANULE personnezavocatxs [un avocat] au profit de demanderﬁlz [je voudrais un avocat] (critere de score)

GRANULE demanderﬁe [je voudrais] au profit de demanderﬁlz [je voudrais un avocat] (critére de score)

GRANULE ob]et:avocat#S [avocat] au profit de demanderﬁlz [je voudrais un avocat] (critere de score)

GRANULE personne:avocat#4 [avocat] au profit de demanderﬁlz [je voudrais un avocat] (critére de score)

GRANULE ob]et:avocat#3 [avocat bien mar] au profit de demanderﬂlz [je voudrais un avocat] (critere de score)

GRANULE demanderﬁlz [je voudrais un avocat] au profit de demanderﬁle [je voudrais un avocat bien mar] (critere de score)
GRANULE ob]et:avocat#11 [un avocat] au profit de demanderﬁlo [je voudrais un avocat bien mar] (critere de score)

GRANULE murﬁl [mar] au profit de demander#10 [je voudrais un avocat bien mar] (critére de score)

II II II II
V

V

V

ll|l|lI|I|
VVV

V

A
II II II II
I II II II II II V V

A

A
I II II II II

demanderﬁlo [je voudrais un avocat bien mar] offres=(action)
A1:ob3et:avocat#9 [un avocat bien mar] types=(objet)
A1'nombre:1#7 [un] types=(determinant)

Références

BONNEAU-MAYNARD H., ROSSET S., AYACHE C., KUHN A., MOSTEFA D. (2005). Semantic
Annotation of the French MEDIA dialog corpus. Proceedings of Eurospeech 05, Lisboa.

FORGY, C.L. (1982). Rete: A Fast Algorithm for the Many Pattern/Many Object Pattern
Match Problem. Artiﬁcial Intelligence (19), 17-37.

KAY M. (1986). Algorithms chemata and data structures in syntactic processing. Readings in
natural language processing. San Francisco, CA, USA : Morgan Kaufmann Publishers Inc.

LEHUEN J. (2008). Un modele de langage pour le DHM : la Grammaire Sémantique
Reversible (poster), Actes de TALN’08, 9-13 juin 2008, Avignon (France).

TESNIERE L. (1959). Elements de syntaxe structurale, Paris, Klincksiek.

