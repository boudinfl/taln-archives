TALN 2010, Montréal, 19-23 juillet 2010

Alignement de traductions rares
a l’aide de paires de phrases non alignées

Julien Bourdaillet Stéphane Huet Philippe Langlais
RALI - DIRO - Université de Montréal
C.P. 6128, succursale centre-ville
H3C 3J7, Montréal, Québec, Canada

{bourdaij,huetstep,felipe}@iro.umontreal.ca

Résumé. Bien souvent, le sens d’un mot ou d’une expression peut étre rendu dans une autre langue
par plusieurs traductions. Parmi celles-ci, certaines se révelent tres fréquentes alors que d’autres le sont
beaucoup moins, conformément a une loi zipﬁenne. La googlisation de notre monde n’échappe pas aux
mémoires de traduction, qui mettent souvent 51 mal ou simplement ignorent ces traductions rares qui sont
souvent de bonne qualité. Dans cet article, nous nous intéressons a ces traductions rares sous l’angle du
repérage de traductions. Nous argumentons qu’elles sont plus difﬁciles a identiﬁer que les traductions plus
fréquentes. Nous décrivons une approche originale qui permet de mieux les identiﬁer en tirant proﬁt de
l’a1ignement au niveau des mots de paires de phrases qui ne sont pas alignées. Nous montrons que cette
approche permet d’améliorer l’identiﬁcation de ces traductions rares.

Abstract. There generally exist numerous ways to translate a word or a phrase in another language.
Among these translations, some are very common while others are far less so, according to a zipﬁan
law. As with the rest of the world, translation memories are googlized, leading to poorly handled or even
simply ignored rare translations, while they are often of good quality. In this paper, we tackle this problem
in a transpotting framework. We show that these rare translations are harder to identify than common
translations. We describe an original approach based on the word alignment of sentences which are not
aligned. We show that this approach signiﬁcantly improves the identiﬁcation of those rare translations.

M0tS-CléS I Traduction automatique statistique, alignement de mots, traduction rares, controle de
pertinence.

Keywords: Statistical machine translation, word alignment, rare translations, relevance feedback.

1 Introduction

Le repérage de traduction, ou transpotting (diminutif de translation spotting), consiste a identiﬁer dans du
texte cible la traduction d’une requéte en langue source (Simard, 2003b; Véronis & Langlais, 2000). Nous
appelons transpot l’ensemble des mots cibles automatiquement associés a une requéte dans une paire de
phrases grace a un algorithme de transpotting.

Dans (Huet et al., 2009a; Bourdaillet et al., 2010), nous avons présenté la nouvelle version du concor-
dancier bilingue Trans Search. Grace a des algorithmes de transpotting a l’état de l’art, celui-ci permet

J ULIEN BOURDAILLET, STEPHANE HUET & PHILIPPE LANGLAIS

[U 0 . Tran§Sear(h
[+ I» cw -Kc» -
CIJ .EEE MIDI! Yahou! Gnuglc Mips YnuTuhc Mkipldii News (17)v Fnpulirv

Transsearch

um mistraleur Décnnnexmn Acnus.-H Mnncompte r I " ' nu Cnlleclions Paramélres Aide English

Expression want and see l
conecuuns l Hansard - Ia94[2no4 3:

‘’ Cherdlar “ " Requéle bxlmgue ‘-
B1 mfleremtranslallcunsul wait and 5EEfaum12Q2IIme5

attendre pourvmr Eﬁliwes

\’\.law\|l haven: waitandsee H nous Iaudra anendre p_ourvmr
\’\.law\|l haven: waitandsee Nous devrnnsanendre p_ourvnir

lquess wewll haveto wawlandsee Jesuppasa QU'il Vaudraallendre Qurumr

anendre ED HWES

vulr Sﬂnwes

anermsle lﬁmres

anermsme B lures

Iemporlsatlon slmres

vous allezvmr Eliwes

faudra doncanendre Eliwes '

FIG. 1 — Interface utilisateur du concordancier bilingue T ran s Se a 1: ch suite a la soumission de la requéte
wait and see.

maintenant de répondre a une requéte utilisateur libre par un ensemble de traductions. La ﬁgure 1 présente
l’interface de l’application.

Bien souvent, le sens d’un mot ou d’une expression peut étre rendu dans une autre langue par plusieurs
traductions. Parmi celles-ci, certaines se révelent tres fréquentes alors que d’autres le sont beaucoup moins,
conformément a une loi zipﬁenne. Par exemple, dans nos travaux nous utilisons le corpus bilingue du
Hansard constitué des actes des débats du parlement canadien, soit plus de 8 millions de paires de phrases.
On y trouve 1558 paires contenant meanwhile, dont 964 contiennent la traduction pendant ce temps,
91 la traduction en attendant, mais une seule a la traduction sur ces entrefaites. De méme, la
requéte wait and see apparait dans 292 paires, soit 86 traductions par attendre pour voir, 60 par
attendre, mais seulement une par qui vivra verra. Or dans la version courante de l’app1ication
Transsearch, ces deux traductions idiomatiques ne sont pas identiﬁées correctement par le systeme,
privant ainsi l’utilisateur de résultats tres intéressants.

Dans cet article, nous nous intéressons a un cas particulier de la tache de transpotting, a savoir la recherche
de traductions rares. On peut considérer une traduction comme rare quand on ne la trouve pas dans un
dictionnaire bilingue, ou bien quand son nombre d’occurrences dans un grand corpus parallele comme le
Hansard est tres faible, soit — et c’est notre déﬁnition ici — égal a une seule occurrence.

Ces traductions rares posent probleme aux modeles statistiques d’alignement de mots sur lesquels sont
basés les algorithmes de transpotting. En effet, les distributions de transfert sont mal estimées du fait du
nombre tres restreint de cooccurrences requéte/traduction (une seule) dans le bitexte d’entrainement. Dans
cet article, nous cherchons a afﬁner ces distributions pour les traductions rares. Pour cela, nous faisons
l’hypothese que des paires de phrases non alignées, c’est-a-dire qui ne sont pas en relation de traduction,

ALIGNEMENT DE TRADUCTIONS RARES A L’ AIDE DE PAIRES DE PHRASES NON ALIGNEES

mais qui néanmoins contiennent la requéte et sa traduction rare, peuvent aider a afﬁner ces distributions.

Dans la suite de cet article, nous présentons en section 2 les différents algorithmes de transpotting que nous
utilisons. Nous adaptons en section 3 le concept de controle de pertinence (ou relevance feedback) popu-
laire en recherche d’information a la tache de transpotting. Ceci nous permet d’adapter les algorithmes
de transpotting a la requéte a transpotter. Nous présentons en section 4 l’idée originale sur laquelle notre
approche s’appuie pour améliorer la recherche de traductions rares. Nous décrivons en section 5 les gains
atteints par notre approche et dressons des perspectives de cette étude en section 6.

2 Transpotting

Le transpotting est un probleme d’alignement au niveau des mots. Il est donc tout a fait approprié de
se baser sur les modeles d’alignement de mots IBM largement utilisés en traduction automatique statis-
tique (Brown et al., 1993).

Forrnellement, a partir d’une phrase S = s1...s,, exprimée dans une langue dite source et de sa traduction
T = t1...tm, un alignement a = a1...am de type IBM consiste a connecter chaque mot de T a un mot de
S (aj E «[1, ..., n}) ou au mot vide (aj = 0), ce dernier rendant compte des mots cibles non traduits. Pour
le modele IBM 2, la probabilité jointe d’une phrase cible et de son alignement, étant donnée la phrase
source, est exprimée par :

p( '1”, al"|8l‘) = P(m|n) HP(tg-Isa.-) >< p(aj|J',m,n) (1)
j=1

ou p(m|n) est la distribution de longueur des phrases, le premier terrne du produit est la probabilité de
transfert et le second la probabilité d’alignement. Avec cette décomposition, il est facile et efﬁcace de
calculer l’alignement le plus probable entre deux phrases, argmaxain p(a§”|t'1", 3}‘), appelé (par abus de
langage) l’alignement de Viterbi, en temps O(mn).

Le modele HMM est une généralisation du modele IBM 2 (Vogel et al., 1996). Dans ce cas, la probabilité
d’a1ignement dans l’équation (1) est exprimée par p(aj |aj_1, n), ou une dépendance du premier ordre est
introduite en modélisant la probabilité d’alignement du mot cible courant en fonction de l’alignement du
mot cible précédent. L’ alignement de Viterbi est obtenu par programmation dynarnique en temps O(mn2).

Un algorithme simple de transpotting consiste a calculer l’alignement de Viterbi d’une paire de phrases
avec un modele IBM 2 ou HMM, puis a extraire les mots cibles alignés a la requéte source pour selec-
tionner le transpot recherché. On appelle ces algorithmes IBM2 et HMM respectivement. Cette approche a
tendance a produire — le plus souvent a tort — des transpots discontinus. Aﬁn de remédier a cela, Simard
(2003b) a proposé l’algorithme suivant ne générant que des transpots continus.

Pour chaque paire_(j1, jg) E [1, m]_ X [1, m], jl < jg, deux alignements de Viterbi sont calculés : l’un entre

la suite de mots  et la requéte 3:3, et l’autre entre les mots restants des phrases source  E 33143;; +1

et cible  E t’f"1 +1. Le transpotting revient alors a trouver le transpot  maximisant :
1

argmax p(a§f |s:f,  X Ir;%Xp(é§f |§:f, } (2)

(.7-1:]-2) ajl 3'1

J ULIEN BOURDAILLET, STEPHANE HUET & PHILIPPE LANGLAIS

Cet algorithme a une complexité en O(m3n) en utilisant un modele [BM2 pour calculer les alignements de
Viterbi, et en O(m3n2) avec un modele HMM. Toutefois, certains calculs sont factorisables par program-
mation dynamique, comme détaillé dans (Bourdaillet et al. , 2010), ce qui donne une complexité en O(mn)
avec IBM 2 et O(mn2) avec HMM. On appelle ces algorithmes C—IBM2 et C—HMM respectivement.

Finalement, cet algorithme (avec IBM 2 ou HMM) peut proﬁter des distributions de transfert obtenues en
entrainant les modeles dans les deux directions de traduction (les modeles IBM ne sont pas symétriques).
Pour cela, les probabilités de transfert d’un mot cible t étant donné un mot source 3 sont reformulées en :

mm-(tls) = c(pS—>T(t|3)apT—>S(5|t)) (3)

o1‘1  est une fonction a spéciﬁer combinant les probabilités de transfert des deux directions de traduc-
tion. Cette bidirectionnalisation de l’algorithme ne modiﬁe pas la complexité temporelle. Pour HMM, on
appelle cet algorithme C—HMM—bi.

Enﬁn, Callison-Burch et al. (2005) ont proposé d’utiliser les modeles a base de segments pour transpotter.
La trousse a outils MOSES permet d’entrainer un tel modele a l’état de l’art. Pour transpotter, on extrait de
la table de segments l’ensemble des paires candidates dont le segment source est égal a la requéte et dont
le segment cible apparait dans la phrase a transpotter. Aﬁn de garder le meilleur candidat, ces paires sont
valuées en combinant leurs scores associés dans la table de segments. On appelle cette méthode PBM.

3 Pseudo contrﬁle de pertinence

Dans sa these, Simard (2003a) a été le premier a suggérer que la tache de transpotting pouvait étre assi-
Inilée a une tache de recherche d’information, le transpot étant l’information a extraire de la phrase cible.
La technique décrite ci-dessous s’inscrit dans cette continuité et renforce l’analogie entre transpotting et
recherche d’information.

Principe. En recherche d’information, le pseudo controle de pertinence (en anglais, pseudo relevance
feedback) est une technique permettant d’afﬁner les résultats d’une recherche (Croft & Harper, 1979).
Dans un premier temps, une requéte est soumise au systeme qui retoume une liste de documents, et dans
un second temps, on extrait de cette liste un ensemble de caractéristiques pertinentes permettant d’afﬁner
une seconde recherche.

Dans (Huet et al., 2009b), nous avons proposé une adaptation de cette idée pour améliorer nos techniques
de transpotting de la facon suivante. Dans un premier temps, on recherche dans le bitexte indexé la requéte
req a traduire, ce qui donne une liste de paires de phrases dont la phrase source contient req. Puis l’al-
gorithme de transpotting transpotte chacune de ces paires de phrases. Des phrases cibles transpottées, on
extrait la liste Z64 des traductions obtenues (dans cette liste, une traduction apparait autant de fois qu’elle
a été transpottée dans la liste de paires de phrases). Ces traductions permettent d’adapter le systeme a la
requéte lors de la seconde passe.

Pour cela, on crée un bitexte artiﬁciel B1 = {(req, trad) |trad E Z64} ou chaque paire de pseudo-phrases
est composée : de req pour la partie source, et de l’une des ses traductions pour la partie cible. En denom-
brant les alignements de mots, on peut alors estimer a partir de 31 une distribution de transfert a posteriori
locale a la requéte. Cette distribution locale peut ensuite étre combinée a la distribution globale (résul-
tant de l’entrainement d’un modele IBM sur tout le bitexte, soit la distribution utilisée lors de la premiere

ALIGNEMENT DE TRADUCTIONS RARES A L’ AIDE DE PAIRES DE PHRASES NON ALIGNEES

passe) de la facon suivante :

_ Ap ;ob(t|s) + (1 — )\)p;,,c(t|s) sis E req
Prf(tl3) — { pglzbms) Sinon (4)

o1‘1 A est un parametre controlant la combinaison linéaire. L’ interpolation n’a lieu que pour les mots sources
de la requéte ; en effet, par construction de 31, la distribution locale est estimée uniquement pour ces mots
sources. La distribution de l’équation (4) est utilisée lors de la deuxieme phase de transpotting.

Résultats expérimentaux. Dans (Bourdaillet et al., 2010), nous avons testé l’utilisation du controle de
pertinence décrit ci-dessus aﬁn d’améliorer l’application Trans Search. La méthode permet de corriger
certains transpots erronés. Par exemple pour la requéte way of life, les transpots qualité de vie
et maniére d’ ét re gagnent quelques rangs dans la distribution des traductions de la requéte. Malheu-
reusement, les gains numériques sont peu signiﬁcatifs et les résultats décevants. Néanmoins, nous pensons
que cette idée a un potentiel intéressant et nous avons cherché a l’utiliser pour la tache qui nous intéresse
dans cet article, le repérage de traductions rares.

4 Alignements de paires de phrases non alignées

La technique présentée dans la section 3 repose sur le fait qu’une paire requéte/traduction apparait plu-
sieurs fois dans le bitexte indexé. On espere que les occurrences correctement transpottées vont aider a
retranspotter correctement celles qui le furent mal. En effet, si les transpots corrects sont les plus fréquents
dans Zeq, on peut supposer que la masse de probabilité de traduction soit correctement répartie dans la
distribution a posteriori locale. Or dans le cas de la recherche de traductions rares, par déﬁnition ces tra-
ductions n’apparaissent qu’une seule fois dans le bitexte indexé (bien que la requéte traduite puisse avoir
plusieurs autres traductions). Appliquer la technique de la section 3 a ce cas reviendrait a construire un
bitexte B1 composé d’une seule paire de pseudo-phrases, ce qui serait sans intérét. Il convient donc de
modiﬁer cette méthode pour adapter les algorithmes de transpotting au cas des traductions rares.

Pour cela, nous modiﬁons la facon de générer Z64 l’ensemble des transpots associés a une requéte req.
Soit (Smm Tram) une paire de phrases contenant la traduction rare tradmre, avec req 6 Smre et tradmre E
Tmre. Par une simple recherche, on extrait du bitexte indexé l’ensemble 8,64 des phrases sources contenant
req. Smre est nécessairement l’une d’elles, et c’est l’unique traduction de Tum. On crée ensuite un bitexte
artiﬁciel B2 = {(8, Tum) |S 6 8,64}. Aucune de ces paires (sauf une) n’a de sens linguistique, puisqu’elles
sont artiﬁcielles et que les phrases ne sont pas en relation de traduction; elles peuvent étre considérées
comme du bruit. En revanche, il existe une régularité dans ce bruit, a savoir le fait que chacune des paires
contient la requéte et sa traduction rare, qui elles par déﬁnition sont en relation de traduction.

On peut alors transpotter chacune des paires de phrases de 32 avec un des algorithmes présentés dans la
section 2. Les transpots obtenus sont tous des sous-séquences de Tmre. Etant donné la facon dont sont
construites les paires de 32, les aligner avec un algorithme basé sur les modeles [BM constitue une utili-
sation discutable de ceux-ci ne correspondant que partiellement a la fonction optimisée par l’algorithme
Espérance-Maximisation durant leur entrainement. On peut donc s’attendre a ce que le transpot identiﬁé
dans chaque paire ne soit pas forcément tres bon. Toutefois, on peut également espérer qu’en accroissant
la taille de 32 et donc en accroissant les « avis » donnés sur l’identité du transpot rare, on arrive a tirer
proﬁt de la régularité au sein de 32 pour Inieux discriminer le transpot rare. L’intuition sous-jacente est

J ULIEN BOURDAILLET, STEPHANE HUET & PHILIPPE LANGLAIS

que, dans la mesure ou la paire requéte/traduction rare est la seule régularité dans le bruit, on peut espérer
qu’elle « ressorte » ou émerge de ce bruit.

Finalement, on peut appliquer la technique du controle de pertinence de la section 3. Une fois chaque paire
de phrases de 32 transpottée, on extrait l’ensemble 726.1 des transpots de la requéte. On crée le bitexte
B1 aﬁn d’estimer la distribution de traduction a posteriori locale qui est réinjectée dans l’algorithme de
transpotting conformément a l’équation (4). Puis, la paire (Sum, Tum) est transpottée a nouveau durant
la seconde passe, o1‘1 on espere que le transpot trouvé sera amélioré par rapport a la premiere passe.

5 Expériences

5.1 Corpus

Nos expériences utilisent le corpus parallele francais-anglais du Hansard, les actes ofﬁciels des débats
parlementaires canadiens, des années 1986 a 2007. On dispose au total de plus de 8,3 millions de paires de
phrases. L’indexation de ce corpus avec le moteur Lucenel permet de soumettre des requétes auxquelles
le moteur répond en retournant l’ensemble des paires de phrases contenant la requéte.

Pour constituer le corpus de test de requétes/traductions rares, nous avons procédé de maniere semi-
automatique, en extrayant automatiquement un ensemble de paires de phrases puis en les validant ma-
nuellement. Pour ce faire, a partir des logs des requétes soumises par les utilisateurs a Transsearch,
nous avons extrait un sous-ensemble de ces requétes réelles ayant une entrée dans un dictionnaire de
mots et d’expressions bilingues disponible au RALI. Nous avons ensuite interrogé avec ces couples re-
quéte/traduction le bitexte indexé aﬁn de compter leur nombre d’occurrences. Finalement, nous avons
gardé les couples apparaissant dans une seule paire de phrases dans tout le corpus. Par exemple, la requéte
meanwhile apparait dans 1558 paires de phrases, mais le couple meanwhile/sur ces entrefaites
n’apparait que dans une seule paire. Nous avons ainsi retenu environ un millier de paires de phrases.

Nous avons ensuite examiné manuellement chacune de ces paires aﬁn de vériﬁer que la traduction de
référence de la requéte était effectivement exacte en contexte. Cette étape permet de ﬁltrer différents cas
problématiques : traduction en contexte incorrecte a cause de la polysémie de la requéte ou de la traduc-
tion; phrase contenant plusieurs mots sémantiquement proches de la requéte, la traduction de référence
traduisant un de ces mots et non la requéte ; bornes exactes du transpot indécidables meme pour un humain.

Au ﬁnal, nous avons conservé 591 paires de phrases dont nous connaissons la requéte a transpotter et la
traduction rare associée. De celles-ci, nous avons extrait 115 paires pour constituer un corpus de develop-
pement, appelé DEV. Nous gardons le reste des 476 paires pour former le corpus de test, appelé TEST.

5.2 Métriques

Les métriques que nous utilisons pour évaluer la tache de transpotting sont tres simples. Dans le corpus
TEST, chaque paire de phrases contient la requéte et sa traduction. On souhaite qu’un algorithme de trans-
potting identiﬁe cette traduction aﬁn de la présenter a un utilisateur qui aurait soumis la requéte. I1 convient
donc de calculer le ratio du nombre de fois ou la traduction de reference a été identiﬁée correctement.

lhttp ://lucene.apache.org

ALIGNEMENT DE TRADUCTIONS RARES A L’ AIDE DE PAIRES DE PHRASES NON ALIGNEES

Un second indicateur intéressant donne crédit a un transpot partiellement identiﬁé. En effet, plutot que
d’identiﬁer l’ensemble des mots de la traduction de référence, un algorithme de transpotting peut ne reus-
sir a en identiﬁer qu’un sous-ensemble. Bien qu’un tel résultat soit insatisfaisant, cela indique que l’algo-
rithme a pointé dans la phrase cible la zone de la traduction de référence, mais qu’il subsiste un probleme
d’identiﬁcation précise de ses bornes. On peut donc également calculer le ratio du nombre de fois ou au
moins un mot de la traduction de référence a été identiﬁé.

5.3 Entrainement des modéles statistiques et optimisation des paramétres

Les distributions d’alignement et de transfert des modeles IBM 2 et HMM décrits dans la section 2 sont
obtenues grace a GIZA++. Les modeles sont entrainés sur le bitexte de 8,3 millions de paires de phrases
décrit dans la section 5.1 comprenant entre autre DEV et TEST.

Aﬁn d’améliorer tres signiﬁcativement les performances des algorithmes de transpotting, les distributions
de transfert des modeles IBM 2 et HMM sont remplacées par celles d’un modele [BM 4. Pour cela,
GIZA++ utilise la séquence de modeles suivante avec 5 itérations pour chaque : 1, 2, HMM, 3 et 4.

La table de segments nécessaires a l’algorithme PBM est obtenue en utilisant MOSES sur le meme bitexte
et avec la meme séquence de modeles (mais jusqu’a HMM seulement).

L’équation (3) de combinaison des distributions de transfert des deux directions de traduction nécessite un
opérateur de combinaison. Les meilleurs résultats sur DEV ont été obtenus avec la moyenne géométrique.

L’équation (4) combinant les distributions de transfert globale et locale a chaque requéte nécessite d’opti-
miser le parametre A controlant la combinaison linéaire. Nous l’avons optimisé sur DEV séparément pour
chaque algorithme de transpotting. Les valeurs obtenues sont discutées dans la section suivante.

5.4 Résultats

Capacité des algorithmes de transpotting £1 identiﬁer les traductions rares. La premiere experience
que nous présentons compare les performances des différents algorithmes de transpotting présentés dans
la section 2. Chacun de ces algorithmes doit transpotter les requétes du corpus TEST; les résultats sont
présentés dans les colonnes 2 et 3 du tableau 1.

Sans surprise, on constate que les algorithmes a base de modele HMM sont meilleurs que leur alter-ego
a base de modele IBM2, que ceux avec contrainte de contigui'té sont meilleurs que sans, et que le modele
HMM bidirectionnel est meilleur que le monodirectionnel. Dans (Bourdaillet et al., 2010), nous avons
constaté des résultats similaires sur un corpus de test beaucoup plus grand d’environ 1,4 million de paires
de phrases et non limité a des couples requéte/traduction rare.

Au premier abord, le mauvais score de PBM peut sembler plus étonnant. En fait il faut garder a l’es-
prit, d’une part que tous les autres transpotteurs utilisent une table de transfert au niveau des mots [BM
4 (cf. section 5.3), ce qui améliore signiﬁcativement leurs performances. D’autre part, les couples re-
quéte/traduction rare n’ont été vus qu’une seule fois a l’entrainement du modele a base de segments, et
n’ont pas forcément été conservés dans la table de segments par l’heuristique grow—diag—final par
défaut de MOSES (Koehn et al., 2007). Ceci met en évidence le fait que les modeles a base de segments sont
clairement insufﬁsants pour une recherche de traductions rares et justiﬁe pleinement l’usage des différents

J ULIEN BOURDAILLET, STEPHANE HUET & PHILIPPE LANGLAIS

Algoﬁthme Sans controle de pertinence Avec controle de pertinence

% réf. trouvée % 1 mot trouvé % réf. trouvée % 1 mot trouvé A
PBM 32,5 47,9 - - -
IBM2 43,8 58,5 - - -
HMM 47,4 63,3 - - -
C— IBM2 51,3 70,4 58,4 79,0 0,99
C—HMM 54,3 73,6 60,9 83,2 0,98
C—HMM—bi 65,6 83,9 69,7 86,5 0,50

TAB. 1 — Scores des algorithmes de transpotting sans controle de pertinence (colonnes 2 et 3) et avec
(colonnes 4 et 5). Les colonnes 2 et 4 indiquent le pourcentage de traduction de référence trouvées exac-
tement, et les colonnes 3 et 5 le pourcentage de fois ou au moins un mot de la traduction de référence est
identiﬁé. La colonne 6 indique le meilleur parametre A utilisé pour combiner les distributions de transfert
globale et locale, conformément a l’équation (4) du controle de pertinence.

algorithmes de transpotting présentés dans la section 2.

Enﬁn, on remarquera que les pourcentages de fois ou l’on trouve au moins un mot de la traduction de
référence sont environ 20 points supérieurs a ceux ou la traduction est identiﬁée exactement. Cela indique
que les algorithmes identiﬁent souvent la zone de la traduction de référence dans la phrase cible, mais qu’il
reste un probleme d’identiﬁcation précise des bornes. C’est un probleme de précision ou les distributions
de transfert permettent généralement d’aligner a la requéte les mots qui lui sont associés, mais le rang
élevé des mots grammaticaux dans ces distributions pose probleme comme le soulignait Moore (2004).

Contr6le de pertinence avec paires de phrases non alignées. La seconde expérience consiste a tester
la validité de la méthode de transpotting en deux passes décrite dans la section 4, a savoir le controle de
pertinence grace a des paires de phrases non alignées.

Pour ce faire, nous avons considéré les trois meilleurs algorithmes de transpotting relativement aux ré-
sultats présentés dans le tableau 1, et appliqué la méthode décrite en section 4. Les colonnes 4 et 5 du
tableau 1 donnent les résultats avec 200 paires artiﬁcielles. La ﬁgure 2 présente les résultats obtenus en
fonction du nombre de paires artiﬁcielles utilisées.

Au vu des résultats, on constate les gains signiﬁcatifs obtenus par la méthode, et ce pour les trois algo-
rithmes testés. En pourcentage de références trouvées, on a un gain d’environ 6,5 points pour C—IBM2 et
C—HMM, et d’environ 4 points pour C—HMM—bi. Un tel gain de 4 points est du méme ordre de grandeur
que ceux entre IBM2 et HMM d’une part, ou C—IBM2 et C—HMM d’autre part.

Un point tres intéressant est le fait que le gain le plus important est obtenu avec les 10 premieres paires
de phrases (gain de 3,1 points pour C—HMM—b i). Cela implique qu’un petit nombre de paires de phrases
artiﬁcielles sufﬁt a adapter la distribution de transfert a la requéte. En outre, cela signiﬁe que le coﬁt
de la méthode de controle de pertinence est raisonnable et qu’elle peut étre déployée dans le systeme
commercial Transsearch.

Enﬁn, la derniere colonne du tableau 1 donne la valeur optimale du parametre A utilisé pour combiner
les distributions de transfert globale et locale dans l’équation (4) du controle de pertinence. Pour les deux
modeles monodirectionnels C—IBM2 et C—HMM, on observe que la conﬁance accordée au modele local est

ALIGNEMENT DE TRADUCTIONS RARES A L’ AIDE DE PAIRES DE PHRASES NON ALIGNEES

0.75 . . . . _ . 0.9
C—HMM—bI —~ C—HMM—bI —~—
C—HMM —>«— C—HMM —~—
C—|BM2 —x— C—|BM2 —x—
0.7 - -
0.85 -

~02
‘E’ 0.65 — — .-=
3 r..-;
-‘=, 3; 08
3;, o
|,_<- 0.6 - E

:1

0.75
0.55
0-5 I I I I I 0-7 I I I I I
0 10 25 50 100 200 0 10 25 50 100 200
Nb. paires artificielles Nb. paires artificielles

FIG. 2 — Pourcentage de fois ou la traduction de référence est trouvée (a gauche) et ou au moins un mot
de la traduction de référence est trouvé (a droite) en fonction du nombre de paires de phrases non alignées
utilisées pour le controle de pertinence.

tres faible. En effet, nous avons constaté que des que la valeur de A descend en-dessous de 0,95 les scores
baissent jusqu’a annuler les gains du controle de pertinence, avant de dégrader les scores en dessous de
A = 0,7. Au contraire, pour le modele bidirectionnel C—HMM—bi le poids accordé au modele local est tres
important. En fait, pour toutes les valeurs de A que nous avons testées, le controle de pertinence améliore
signiﬁcativement les résultats.

Finalement, pour la requéte messy le controle de pertinence avec paires artiﬁcielles et C—HMM—bi permet
ainsi d’obtenir la traduction f ouillis au lieu de qui sans controle de pertinence. De méme, pour la
requéte lead the way, on obtient etre en tete au lieu de tete au. Enﬁn, pour la requéte wait
and see, on obtient qui vivra verra au lieu de vivra verra.

6 Conclusion

Dans cet article, nous avons présenté une méthode de transpotting dédiée aux traductions rares. Celle-
ci repose sur le principe du controle de pertinence en utilisant des paires de phrases non alignées. Les
expériences réalisées montrent des gains signiﬁcatifs pour le repérage de traductions rares.

Ces gains sont observés en utilisant seulement un petit nombre de paires de phrases non alignées pour
chaque requéte. Ceci suggere que la méthode présentée ici est industrialisable dans l’application commer-
ciale Trans Search. En effet, apres la premiere passe de transpotting, on a, tres approximativement, 1/3
des paires de phrases qui ont donné des transpots uniques dans la distribution des traductions de la re-
quéte. Ceux-ci sont soit des erreurs des algorithmes de transpotting, soit des traductions rares. On pourrait
appliquer le controle de pertinence uniquement sur ces paires de phrases aﬁn d’améliorer les résultats. Le
coﬁt est fonction de l’algorithme de transpotting utilisé, a un facteur constant pres : le nombre de paires
non alignées (par requéte) utilisées pour le controle de pertinence.

Dans l’avenir, nous souhaitons évaluer la méthode décrite dans ce papier pour le transpotting de traductions
non rares. En effet, la méthode est sufﬁsamment générale pour qu’on puisse espérer obtenir des gains dans

J ULIEN BOURDAILLET, STEPHANE HUET & PHILIPPE LANGLAIS

la plupart des cas. En outre, on peut envisager d’appliquer cette méthode pour une tache de traduction
complete. En effet, le controle de pertinence par alignement de paires de phrases non alignées pourrait étre
utilisé pour valider ou corriger les paires de segments rares extraites par un modele a base de segments.

Remerciements

Cette étude est ﬁnancée par le Conseil National de Recherches du Canada, en collaboration avec l’entre-
prise canadienne Terminotix.2

Références

BOURDAILLET J ., HUET S., LANGLAIS P. & LAPALME G. (2010). TransSearch : from a bilingual
concordancer to a translation ﬁnder. A paraitre dans Machine Translation.

BROWN P., DELLA PIETRA V., DELLA PIETRA S. & MERCER R. (1993). The mathematics of statistical
machine translation : parameter estimation. Computational Linguistics, 19(2), 263-311.
CALLISON-BURCH C., BANNARD C. & SCHROEDER J . (2005). A compact data structure for searchable

translation memories. In 10th European Conference of the Association for Machine Translation ( EAM T),
p. 59-65, Budapest, Hongrie.

CROFT W. & HARPER D. (1979). Using probabilistic models of information retrieval without relevance
information. Journal of Documentation, 35(4), 285-295.

HUET S., BOURDAILLET J . & LANGLAIS P. (2009a). Intégration de l’alignement de mots dans le
concordancier bilingue TransSearch. In 16e Confe’rence sur le Traitement Automatique des Langues
Naturelles (TALN), Senlis, France.

HUET S., BOURDAILLET J ., LANGLAIS P. & LAPALME G. (2009b). Harnessing the redundant results
of translation spotting. In 12th Machine Translation Summit, Ottawa, Canada.

KOEHN P., HOANG H., BIRCH A., CALLISON-BURCH C., FEDERICO M., BERTOLDI N., COWAN
B., SHEN W., MORAN C., ZENs R., DYER C., BOJAR 0., CONSTANTIN A. & HERBST E. (2007).
Moses : open source toolkit for statistical machine translation. In 45th Annual Meeting of the Association
for Computational Linguistics (ACL), Companion Volume, p. 177-180, Prague, République tcheque.

MOORE R. C. (2004). Improving IBM word alignment model 1. In 42th Annual Meeting of the Asso-
ciation for Computational Linguistics (ACL), p. 518-525, Barcelone, Espagne.

SIMARD M. (2003a). Me’moires de traduction sous-phrastiques. PhD thesis, Université de Montréal.

SIMARD M. (2003b). Translation spotting for translation memories. In HLT-NAACL Workshop on
Building and Using Parallel Texts .' Data Driven Machine Translation and Beyond, p. 65-72, Canada.

VERONIS J . & LANGLAIS P. (2000). Evaluation of parallel text alignment systems — The Arcade
project., chapter 19, p. 369-388. Kluwer Academic Publisher, Dordrecht, Pays-Bas.

VOGEL S., NEY H. & TILLMANN C. (1996). HMM-based word alignment in statistical translation. In
16th Conference on Computational Linguistics, p. 836-841, Copenhague, Danemark.

zhttp ://www.tenninotix.com

