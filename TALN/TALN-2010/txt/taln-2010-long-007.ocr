TALN 2010, Montréal, 19-23 juillet 2010

Motifs de graphe pour le calcul de dépendances syntaxiques
completes

Jonathan Marchand, Bruno Guillaume, Guy Perrier
INRIA Nancy-Grand Est - LORIA - Nancy-Université

Résumé. Cet article propose une méthode pour calculer les dépendances syntaxiques d’un énoncé
a partir du processus d’analyse en constituants. L’ objectif est d’obtenir des dépendances completes c’est-
a-dire contenant toutes les informations nécessaires a la construction de la sémantique. Pour l’analyse en
constituants, on utilise le formalisme des grammaires d’interaction : celui-ci place au coeur de la composi-
tion syntaxique un mécanisme de saturation de polarités qui peut s’interpréter comme la réalisation d’une
relation de dépendance. Formellement, on utilise la notion de motifs de graphes au sens de la réécriture de
graphes pour décrire les conditions nécessaires a la création d’une dépendance.

Abstract. This article describes a method to build syntactical dependencies starting from the phrase
structure parsing process. The goal is to obtain all the information needed for a detailled semantical
analysis. Interaction Grammars are used for parsing; the saturation of polarities which is the core of this
formalism can be mapped to dependency relation. Formally, graph patterns are used to express the set of
constraints which control dependency creations.

M0tS-CléS I Analyse syntaxique, dépendance, grammaires d’interaction, polarité.

Keywords: Syntactic analysis, dependency, interaction grammars, polarity.

Introduction

Quand on envisage l’analyse syntaxique en vue de produire une analyse sémantique complete de la phrase,
il est intéressant de représenter le résultat sous forme de dépendances entre mots. On s’abstrait ainsi de
tous les détails qui ne jouent pas de role dans le calcul de la sémantique aﬁn de ne conserver que l’essentiel.
Mais alors, il est important de déﬁnir des structures en dépendances sufﬁsamment riches pour permettre
un calcul ﬁn et complet des relations sémantiques. La campagne PASSAGE1 d’évaluation des analyseurs
syntaxiques du francais utilise de facon essentielle de telles structures en dépendances. Les analyseurs
participants a la campagne devaient produire a la fois un découpage des phrases en groupes syntaxiques
et une annotation de ces phrases a1’aide de relations entre groupes ou mots 2. Une des difﬁcultés était de
produire toutes les relations déterminées par la syntaxe, en particulier les moins immédiates comme celles
concernant les sujets des inﬁnitifs par exemple. Le guide d’annotation de PASSAGE n’impose aucune
contrainte sur la structure de dépendances obtenue. De fait, la structure en dépendances obtenue est un
graphe qui n’est pas toujours un arbre ; il contient méme parfois des cycles.

l.http://atoll.inria.fr/passage/index.fr.html
2. De fait, toutes les relations pouvaient étre ramenées a des relations entre mots.

J. MARCHAND, B. GUILLAUME ET G. PERRIER

Il existe deux approches pour obtenir des analyses en dépendances. La premiere consiste a les calculer
directement. Or, pour des raisons d’efﬁcacité, les analyseurs qui font cela imposent des contraintes sur
les structures en dépendances produites (Kiibler et al., 2009; Debusmann, 2006). Généralement, ils ne
produisent que des arbres et ne permettent donc pas de retrouver toutes les relations nécessaires a la
construction d’une représentation sémantique. La seconde approche consiste a extraire une analyse en
dépendances a partir d’une analyse en constituants (Rambow & Joshi, 1997; Kucerova & Zabokrtsky,
2002; Candito et al., 2009). Les relations de dépendances sont alors extraites de l’arbre syntagmatique de
la phrase, ce qui n’est pas toujours évident, mais surtout l’information pour produire certaines relations
peut étre manquante.

La méthode que nous proposons s’apparente a la seconde approche dans la mesure ou nous utilisons une
analyse en constituants. Cependant, comme Rambow & Joshi (1997) et Candito & Kahane (1998) l’ont
observé dans le cas des TAG il est souvent utile de ne pas s’appuyer seulement sur le résultat de l’analyse
mais sur le processus d’analyse lui-meme, pour produire des dépendances. Notre méthode utilise le cadre
des Grammaires d’interaction (GI) et en exploite la spéciﬁcité : l’utilisation de polarités pour guider la
composition syntaxique. Nous avions, dans un précédent article (Marchand et al. , 2009), montré comment
obtenir une analyse en dépendances en réalisant une dépendance entre deux mots a chaque fois que des
polarités qui étiquetaient les objets lexicaux correspondants se saturaient. Cette approche nous imposait
d’ajouter une nouvelle polarité au systeme de polarités des GI aﬁn de repérer les saturations qui ne faisaient
que controler le contexte des mots lors de l’analyse et qui provoquaient une sur-génération de relations de
dépendances.

La méthode avait été testée sur une grammaire du francais a relativement large échelle (Perrier, 2007) mais
les principes qui avaient présidé a la construction de cette grammaire n’avaient pas pris en compte l’ob-
jectif d’extraire des dépendances syntaxiques des analyses, dans la mesure ou cet objectif est apparu apres
que la grammaire ait été construite. Récemment, la grammaire a été revue aﬁn d’intégrer des principes ex-
primant les dépendances syntaxiques. Cela a perIr1is de se passer de la nouvelle polarité et a fait apparaitre
des régularités structurelles dans la saturation des polarités donnant lieu a la production de dépendances.
Ces régularités ont été formalisées a l’aide du concept de motif de graphe (pattern en anglais dans l’idée
de pattern matching). Un motif est un ensemble de contraintes qui décrit le contexte structurel dans le-
quel deux polarités qui se saturent réalisent une dépendance syntaxique. Le processus d’analyse avec les
GI étant formalisé sous forme d’un graphe, les dépendances sont alors créées par détection de motifs dans
ce graphe.

La section 1 précise ce qu’on entend par analyse en dépendances syntaxiques complete. La section 2
présente brievement le formalisme des GI et la section 3 décrit les principes de construction de la gram-
maire du francais qui permettent d’exprimer les dépendances syntaxiques. Enﬁn, la section 4 montre com-
ment les motifs de graphe sont utilisés pour produire des dépendances.

1 Analyse en dépendances syntaxiques compléte

La notion d’analyse complete fait appel a la différence entre dépendances dites directes (en noir dans les
ﬁgures) et dépendances indirectes (en rouge dans les ﬁgures), selon qu’elles se réalisent sans ou a l’aide
d’un mot intermédiaire. Dans la proposition “Jean permet a Marie de venir” (ﬁgure 1), “Jean” sujet de
“permet” et “a” complement d’attribution de “permet” correspondent a des dépendances directes (la).
La relation “Marie” sujet de “venir” est quant a elle une dépendance indirecte (lb).

MOTIFS DE GRAPHE POUR LE CALCUL DE DEPENDANCES SYNTAXIQUES COMPLETES

Nous appellerons analyses partielles les analyses uniquement composées de dépendances directes. Dans
nos exemples, les analyses partielles sont inspirées par le guide d’annotation de la French Dependency
Treebank 3. Nous appellerons analyses completes les analyses qui contiennent les dépendances indirectes
utiles pour l’analyse sémantique 4.

obj

  I  lit  1!  It  ll

Jean permet Marie venir Jean permet Marie de venir
np v prep np cpl v np v prep np cpl v

(a) Partielle (b) Complete
FIGURE 1 — Structure en dépendances pour la phrase “Jean permet a Marie de venir”

Souvent, les dépendances indirectes peuvent etre retrouvées a partir des dépendances directes. Toutefois,
ce n’est pas toujours le cas. Dans la phrase “Jean promet a Marie de venir”, la structure en dépendances
partielle est identique a celle de la phrase “Jean permet a Marie de venir” (la). Cependant, dans la
premiere il y a une dépendance indirecte “Jean” sujet de “venir”, et dans la deuxieme cette dépendance
est entre “Marie” et “venir”.

La ﬁgure (lb) montre déja que les dépendances completes ne forment pas un arbre. Dans le syntagme
nominal contenant une relative “la ﬁlle que Jean c0nnaz‘t”, l’analyse complete (ﬁgure 2b) n’utilise plus le
pronom relatif “que ” comme relais pour introduire la relative et rappeler l’objet de “c0nnaz‘t”. La relation
“ﬁlle” objet de “c0nnaz‘t” est une dépendance indirecte qui introduit un cycle dans la structure. De plus,
la structure n’est plus connexe : le pronom relatif “que” qui a servi d’intermédiaire entre la relative et son
antécédent n’a plus d’utilité.

modif modif
obj obj

subj

la fille que Jean connait la fille que Jean connait
det n pro np v det n pro np v
(a) Partielle (b) Complete

FIGURE 2 — Structure en dépendances pour le syntagme nominal “la ﬁlle que Jean connaft”

2 Le formalisme des grammaires d’interaction

Les grammaires d’interaction (Perrier, 2003) sont un formalisme grammatical qui place la notion de pola-
rite’ au coeur du mécanisme de composition syntaxique. Les objets de base d’une grammaire d’interaction
sont des fragments d’arbres syntaxiques sous-spéciﬁés qui sont décorés par des polarités. Ces polarités
expriment l’état de saturation du fragment concerné et sa capacité d’interaction avec d’autres fragments.
La composition syntaxique consiste alors a superposer partiellement ces fragments d’arbres pour saturer
leurs polarités et obtenir un arbre unique completement spéciﬁé ou toutes les polarités auront été saturées.

3. http: //www . linguist . univ—paris—diderot . fr/ ~mcandito/Rech/FTBDeps/
4. Certaines dépendances directes deviennent alors inutiles et sont supprimées.

J. MARCHAND, B. GUILLAUME ET G. PERRIER

On peut voir la composition syntaxique de facon totalement statique. L’ ensemble des fragments d’arbres
servant a construire un arbre syntaxique peut étre vu comme une spéciﬁcation d’une famille d’arbres qui
constituent les modeles de cette spéciﬁcation. C’est pourquoi nous l’appellerons une Description d ’Arbre
Polarisée (DAP). L’ arbre syntaxique ﬁnal représente alors un modéle particulier de cette description. La
composition syntaxique apparait ensuite comme la réalisation d’une fonction d’interprétation associant
chaque noeud d’une DAP a un noeud d’un arbre syntaxique. On peut oublier le processus de composition
pour ne conserver ﬁnalement que le triplet (DAP, arbre syntaxique, interprétation) que nous appellerons
graphe d ’interpre’tati0n, dans la mesure ou il peut se représenter sous forme d’un graphe.

Seules les principales caractéristiques du formalisme des GI nécessaires a la compréhension de la suite de
l’article sont données ici (voir Guillaume & Perrier (2010) pour une présentation complete).

Une DAP est un ensemble de noeuds représentant des syntagmes, structuré par des relations de domination
et de précédence immédiates et sous-spéciﬁées. Les propriétés morpho-syntaxiques de chaque syntagme
sont décrites par une structure de traits attachée a au noeud correspondant. Il existe deux types de traits :

— les traits polarisables qui portent en plus de leur valeur une polarité qui peut étre positzf (—>), négatzf

(<—), virtuel (~) ou sature’ (<—>) ; dans la suite deux traits de ce type seront utilisés : cat et funct ;
— les traits neutres qui ne portent pas de polarités (le symbole = est utilisé pour ces traits).
Dans la suite, les noeuds des modeles sont notés {N} ; ceux des DAP, 

cal ~» np cal ~ 5 cat ~ np cal —» np
funcl 47 7 '33‘ “ 5  funcl 4* 7
—*— * ~ [subn [Obi]
 cat ~ <5>aux 1 v W “D, Hat 47 nb [V"“”‘] > c'ai 47 np °a' ” “'9' '3“ H de‘
w funcl ~ ob] mm‘ A sum. cal «—» v mm‘ *) Db]. funcl 4* det funcl a del

’ cat = np 1 pp
funcl = deobj 1 obj

‘ ~33§335j

 

       

 

[DeObj]
cat .—. pp
funcl 4-? deobj

ref = <4>?

    
 
  
  
 

cat 5
I
(NP?-Obi}

cal np  cal H
func ' funot obj
[Tm ’(cIit}  V ' ~ ~ (DeObj}
cal del
. cal H

MEI‘ ca. pp
1 funct del funct deobj

ref <9>?

ii

    
 

 

 

FIGURE 3 — Graphe d’interprétation de la phrase “Jean en apprécie le g0L‘n,"’

MOTIFS DE GRAPHE POUR LE CALCUL DE DEPENDANCES SYNTAXIQUES COMPLETES

Une interpretation d’une DAP dans un arbre syntaxique est valide si elle préserve les relations de do-
mination et de précédence. Par ailleurs, elle doit préserver les valeurs de traits ainsi que les relations de
co-indexations entre celles-ci 5. Concernant la structure d’arbre ainsi que des traits étiquetant les noeuds,
une interpretation garantit une Ininimalité du modele en un sens déﬁni dans Guillaume & Perrier (2010).

Pour ce qui est des polarités, une interpretation valide doit respecter une des deux propriétés suivantes
pour chaque ensemble de traits polarisés de la DAP de départ interprétés dans le meme trait de l’arbre
syntaxique d’arrivée :

— cas non-linéaire : un seul trait est saturé et tous les autres sont virtuels;

— cas linéaire : un trait est positif, un second négatif et tous les autres virtuels.

Une conséquence des conditions de saturation est que l’on peut déﬁnir, pour un noeud {N} contenant un
trait polarisable f, l’ante’ce’dent principal de {N} relativement a f (noté f‘1({N})) comme l’unique noeud
de l’ensemble I‘1  de la DAP porteur du trait f saturé (dans le cas non-linéaire) ou du trait f positif
(dans le cas linéaire).

Dans la suite, on appellera naeud principal un noeud d’une DAP qui porte un trait cat positif ou saturé (on
notera donc cat —>|<—> ? dans les motifs).

Une grammaire particuliere d’interaction est déﬁnie par l’ensemble de ses DAP élémentaires (DAPE)
utilisées pour composer des arbres syntaxiques.

Illustrons ces notions par l’eXemple de l’analyse syntaxique de la phrase “Jean en apprécie le g012t”
avec la grammaire d’interaction du francais gf (Perrier, 2007). Dans une premiere phase, il s’agit de
sélectionner les DAPE de gf qui vont servir a analyser la phrase. Elles sont réunies en une unique DAP D
représentant le point de départ de l’analyse. Cette DAP est présentée par la ﬁgure 3 dans sa partie haute.
L’ arbre syntaxique T résultant de l’analyse est présenté dans la partie basse de la meme ﬁgure. La fonction
d’interprétation de D dans T est représentée sur la ﬁgure par des arcs orange allant des noeuds de D vers
ceux de T 6. L’ ensemble des deux structures et de la fonction d’interprétation de la ﬁgure 3 constitue le
graphe d’interprétation.

3 Principes de construction de la grammaire du frangais Qf

La grammaire gf a été construite en suivant un certain nombre de regles qui sont l’expression dans le
formalisme des GI de principes linguistiques qui ne sont pas spéciﬁques au francais mais qui valent aussi
pour d’autres langues plus ou moins proches. Voici l’essentiel de ces regles :

1. La grammaire est strictement lexicalisée, ce qui signiﬁe que chaque DAPE est associée a un mot-
forme unique du francais par le biais d’une feuille spéciale de la description, appelée son ancre.
Sur les ﬁgures, les ancres sont représentées en jaune foncé. L’ensemble des ascendants de l’ancre
s’appelle l’épine dorsale de la DAPE.

2. Certains noeuds ont une forme phonologique vide. Ce sont toujours des feuilles qui représentent la
trace d’un argument qui n’est pas dans sa position canonique. Cela peut correspondre a un argument
extrait, un sujet inversé ou encore un clitique comme “en” dans notre exemple. Sur les ﬁgures, les
noeuds vides sont représentés en blanc et les noeuds non vides en jaune ; dans les DAP, un noeud gris

5. A la difference de Guillaume & Perrier (2010), nous considérons que les traits peuvent etre co—indexés non seulement
dans les DAP mais aussi dans les arbres syntaxiques.

6. Elle est en fait partiellement représentée pour alléger la ﬁgure, la fonction d’interprétation étant en fait totale mais il n’est
pas difﬁcile de construire les arcs manquants.

J. MARCHAND, B. GUILLAUME ET G. PERRIER

ne porte pas de contrainte sur la forme phonologique, il peut etre vide ou non vide. Par exemple, sur
la ﬁgure 3, la trace du complement de l’objet du verbe modiﬁé par le clitique “en ” est représentée
par le noeud vide [DeOb j].

. Tous les noeuds de la grammaire portent un trait cat. Pour chaque DAPE, tous les noeuds principaux

non vides sont sur l’épine dorsale. Ces noeuds forment un chemin non vide commencant a un noeud
que l’on appelle la projection maximum de l’ancre et terminant a l’ancre elle-meme. L’ancre est
la téte de tous ces noeuds et de facon duale, ceux-ci représentent ses diverses projections. Pour
une projection différente de l’ancre, on déﬁnit son ﬁls principal comme son ﬁls qui est aussi une
projection de la tete.

Sur la ﬁgure 3, dans la DAPE de “appre’cie”, l’ancre [V] a come projections, outre elle-meme, les
noeuds [Vmax] et  Dans la DAPE de “en ”, l’ancre [Cl it] n’a qu’elle-meme comme projection.

Telles qu’elles viennent d’etre déﬁnies, les notions de téte et de projection sont relatives a une DAPE
mais on peut les transposer a un arbre syntaxique modele d’un ensemble de DAPE a l’aide d’une
interprétation T. Pour tout noeud non vide {N}, cat‘1({N}) est un noeud non vide d’une DAPE D,-
dont la téte est l’ancre [Ai] de D,-. On dit alors que la téte de {N} est I et que {N} est une
projection de I

Par exemple, dans l’arbre syntaxique T de la ﬁgure 3, le noeud {V} est la tete de {Vmax} et 

. Si un noeud d’un arbre syntaxique modele d’une DAP est porteur d’un trait funct avec une valeur

X, cela signiﬁe d’un point de vue linguistique que le syntagme correspondant remplit la fonction
syntaxique X par rapport a un syntagme représenté par un de ses noeuds freres dans l’arbre.

Par exemple dans l’arbre T de la ﬁgure 3, les noeuds {Sub j} et {Obj} remplissent les fonctions
respectives sujet et objet par rapport au noyau verbal représenté par leur frere {Vmax}.

Lorsqu’un noeud d’un arbre syntaxique pourvu d’un trait funct de valeur X a plusieurs freres,
la lecture du modele ne permet pas de déterminer lequel est celui par rapport auquel il remplit la
fonction X. Pour cela, il faut revenir a la DAP correspondante via l’interprétation. Nous devons
distinguer trois cas. Considérons une DAP D composée de n DAPE Di, . . . ,D,, qui est interprétée
dans un modele T via une interprétation T. Considérons dans T un noeud {N} porteur d’un trait
funct de valeur X, le pere de {N} étant noté 

(a) Interaction linéaire prédicat-argument. Le trait funct est 1’image d’un trait positif issu
d’une DAPE D, et d’un trait négatif issue d’une autre DAPE DJ-. Dans D,-, la grammaire assure
que le noeud [Ni] porteur du trait funct positif a toujours un unique frere [Mi] qui est un noeud
principal. Dans l’arbre T, on peut alors dire que {N} remplit la fonction X par rapport a l’image
{M} de ce frere. On parle alors d’ interaction line’aire entre les DAPE Di et 19,-. Cette interaction
est la réalisation d’une relation prédicat-argument.

K“

Par exemple, il y a une interaction linéaire entre les DAPE associées a “go12t” eta appre’cie”
qui a pour résultat de réaliser la fonction objet du noeud [Obj] par rapport au noeud [Vmax].

(b) Interaction non-linéaire modiﬁé-modiﬁcateur. Le trait funct est 1’image d’un trait saturé
issu d’une DAPE D, et l’antécédent du noeud {N} dans Di est un noeud [Ni] qui a come pere
un noeud [Pi] pourvu d’un trait virtuel cat. 11 existe alors une DAPE unique Dj qui contient
le noeud principal [P3] = cat‘1({P}). Le ﬁls principal [M3-] de [P3-] a pour image le frere {M}
de  Dans l’arbre T, on peut alors dire que {N} remplit la fonction X par rapport a 
On parle alors d’interaction non-line’aire entre les DAPE Di et DJ-. Cette interaction est la
réalisation d’une relation de modiﬁcation ou d’adjonction.

MOTIFS DE GRAPHE POUR LE CALCUL DE DEPENDANCES SYNTAXIQUES COMPLETES

Par exemple, il y a une interaction non-lineaire entre les DAPE associees a “g0L‘n,"’ et “en ” qui
a pour resultat de realiser la fonction complement de nom du noeud {DeObj} par rapport au
noeud {Np2 — Obj}.

(c) Relation prédicat-argument non réalisée. Le trait funct est l’image d’un trait sature issu
d’une DAPE Di et l’antecedent du noeud {N} dans Di est un noeud vide [Ni] qui a come pere
un noeud principal [Pi]. [Ni] a come frere le ﬁls principal [Mi] de [Pi]. Dans l’arbre T, {N}
remplit alors la fonction X par rapport a l’image {M} = I de ce frere.
Dans la ﬁgure 3, nous n’avons pas d’illustration de ce troisieme cas que l’on rencontre en
particulier pour representer des relations predicat-argument non realisees phonologiquement,
comme les relations verbe-sujet pour les inﬁnitifs.

5. Si un noeud d’une DAPE porte un trait ref, cela signiﬁe que le syntagme correspondant est associe
a une reference semantique (la valeur du trait peut preciser la qualite de cette reference : animee,
inanimee mais concrete ou encore abstraite). Si dans une meme DAPE, deux noeuds ont des traits
ref co-indexes, cela signiﬁe qu’ils renvoient a la meme entite semantique de reference. Par exemple,
dans la DAPE associee a “en”, les noeuds [Clit] et [DeObj] ont des traits ref co-indexes. Cela
veut dire qu’ils representent la meme entite semantique. De meme, c’est avec la co-indexation de
traits ref que l’on modelise la difference de contrele entre “permet” et “promet” (ce mecanisme
s’apparente aux equations de contrele de LFG).

Cette co-indexation entre traits ref de plusieurs noeuds se propage dans un modele via la fonction
d’interpretation et elle permet de realiser des interactions indirectes entre syntagmes.

4 Des motifs de graphe pour calculer les dépendances

Comme nous l’avons vu plus haut, pour calculer une structure en dependances, il est parfois necessaire
de considerer des informations qui ne sont pas dans l’arbre syntaxique mais plutet dans l’historique de
sa derivation. En grammaire d’interaction, l’historique d’une derivation est decrit par ce que nous avons
appele le graphe d’interpretation et qui represente le triplet (DAP, arbre syntaxique, interpretation). Le
calcul des dependances a partir du graphe d’interpretation peut alors s’exprimer a l’aide de motifs de
graphe.

Les motifs de graphe Un motif de graphe decrit un ensemble de contraintes a satisfaire par le graphe
d’interpretation pour qu’une dependance soit produite. Formellement, un motif de graphe est constitue
d’un ensemble de motifs de noeud et de relations entre ces motifs. Identiﬁer un motif dans une structure
revient a construire une fonction d’appariement (on note l’image de N par la fonction d’appariement N)
qui associe a chaque noeud du motif un noeud du graphe d’interpretation compatible avec les contraintes
exprimees par le motif. Il est important de noter que les motifs font apparaitre des noeuds de la DAP
(rectangles) et des noeuds du modele (coins arrondis).

La ﬁgure 5 decrit les motifs que l’on utilise pour la grammaire gf ; les contraintes portent sur les structures
de trait, notamment sur les traits cat et funct et les polarites associees. Ces contraintes portent egalement
sur le fait qu’un noeud est vide (fond blanc) ou non vide (fond jaune) dans le modele.

Pour les relations, deux types de contraintes sont utilisees. D’une part, on peut contraindre N a etre l’in-
terpretation de M (les motifs de noeuds M et N sont alors relies par une arete orange dans le motif). D’autre
part, on peut contraindre N a etre un sous-constituant immediat de M (M est au-dessus de N et ils sont relies
par un trait noir).

J. MARCHAND, B. GUILLAUME ET G. PERRIER

Chaque motif décrit un ensemble de contraintes a veriﬁer pour qu’une dépendance soit ajoutée. La ﬂeche
rouge ne fait pas partie du motif, elle indique simplement qu’une dépendance doit etre ajoutée quand le
motif est repéré dans le graphe d’interprétation; la dépendance créée relie alors les mots-formes portés
par les ancres des descriptions correspondant aux noeuds G et D.

Par exemple, on peut appliquer le motif représentant le cas linéaire et canonique, en haut et a gauche dans
la ﬁgure 5, au graphe d’interprétation de la ﬁgure 3 par l’appariement : N = {Npl — Sub j }, E = [Sub j] et
5 = [Np 1]. On vériﬁe facilement que toutes les contraintes imposées par le motif sont vériﬁées; on peut
donc ajouter une relation de dépendance portant l’étiquette sub j (valeur du trait funct dans le noeud N)
entre “apprécie” (mot-forme de l’ancre de la DAPE qui contient le noeud 5) et “Jean” (mot-forme de
l’ancre de la DAPE qui contient le noeud 5). Cela correspond a la dépendance verte dans la ﬁgure 4.

deobj

obj
subj det

Jean en apprécie 1e goﬁt
np clit v det n

FIGURE 4 — Structure en dépendance pour la phrase “Jean en apprécie le g012t”

Motifs de graphe pour les dépendances completes Présentons maintenant les quatre motifs qui s’ap-
puient sur les principes de la grammaire pour calculer les dépendances completes d’une phrase. La gram-
maire modélise chaque dépendance par l’utilisation d’un trait funct ; il s’agit donc d’interpréter les
principes décrits dans le point 4 de la section 3 de telle facon que :

si {N} remplit lafonction syntaxique X par rapport a unfrére {M}
alors une dépendance existe entre la téte de {M} et la téte de 

Les quatre regles de la ﬁgure 5 contiennent toutes un motif de noeud N avec le trait funct de valeur X.
Elles correspondent a la combinaison de deux alternatives : la linéarité et le fait que le dependant soit en
position canonique ou pas. Pour chaque noeud {N} du modele portant un trait funct de valeur X, on ﬁxe
N = {N} et on distingue :

Le cas linéaire : ce cas correspond aux deux regles a gauche dans la ﬁgure 5 et il est caractérisé par le
fait que funct‘1({N}) a un trait funct positif. Cela correspond au point 4(a) de la section 3 et
donc, le noeud par rapport auquel {N} remplit la fonction syntaxique X est dans la meme DAPE que
funct‘1({N}) et donc 5 = funct‘1({N}).

Le cas non-linéaire : ce cas (les deux regles de droite) s’applique quand funct‘1({N}) a un trait funct
saturé (4(b) et 4(c) de la section 3). Le noeud {M} par rapport auquel {N} remplit la fonction syn-
taxique X est le ﬁls principal du noeud [Pj] dans le cas 4(b) et du noeud [Pi] dans le cas 4(c). Dans
les deux cas, ce noeud {M} est donc dans la meme DAPE que la tete du pere {P} du noeud 

Le cas canonique : le dependant de la relation de dépendance est la tete du noeud {N} quand elle existe
(c’est-a-dire quand {N} est non-vide) et donc par déﬁnition cette tete est dans la meme DAPE que
cat‘1({N}) c’est le cas pour les deux motifs de graphe en haut de la ﬁgure 5 qui correspondent au
cas ou le dépendant est en position canonique.

MOTIFS DE GRAPHE POUR LE CALCUL DE DEPENDANCES SYNTAXIQUES COMPLETES

linéaire non-linéaire
funct‘1({N}) a un trait funct positif funct‘1({N}) a un trait funct saturé

   
 

Gzgouvereur
cat —» la-v ?

   
    

      
  

G : gouvemeur
funct —» ?

    
   
  

    
   
 
     

  

canonique
. funct : X
   D:dépendant
cat —» la-v ?
D : dépendant
cat —» la-o ?
G:gouvemeur
- cat —» lo-a ?
ftjrﬁcgoivenjur functN: X
. ' ref = <1>
non-canomque X

  

I functN’ X
funct H ? :
ref . <1>

{N} est non-vide

D : dépendam C : co-incléxé

cat—>\-+? ref : <1>

 

D : dépendant
cat —» \-+ ?

  
 

FIGURE 5 — Motifs pour le calcul de dépendances

Le cas non-canonique : si le noeud {N} est vide, on utilise le principe du point 5 de la partie 3 ; ce principe
assure qu’un noeud {C} non-vide dont le trait ref est co-indexé avec celui du noeud {N} renvoie a
la meme entité sémantique, c’est donc ce noeud qui a pour téte le dépendant réel; les deux motifs
de graphe du bas de la ﬁgure 5 s’app1iquent alors avec C = {C} et 5 = cat‘1({C}). L’ existence et
l’unicité d’un tel noeud {C} est assuré par la grammaire.

Par exemple, considérons le trait funct : deob j du noeud {DeOb j} de la ﬁgure 3.

On considere le trait funct : deobj du noeud {DeObj} N = {DeOb j}
funct‘1({Deobj  = [DeObj] qui a un trait funct saturé donc

cas non-linéaire I _ [Deobﬂ

le pere de {DeObj} est {Np2 — Obj} 5 = {Np2 — Ob_]}
cat—1({Np2 — Obj}) = [Np2] E = [Np2]
{DeObj} est vide (cas non-canonique), on considere 1’unique 6 _ {Cl_t}
noeud non-vide avec le meme index (9), il s’agit de {Clit} _ 1
cat‘1({Clit}) = [Clit] B = [Clit]

Le motif de graphe pour le cas non-linéaire non-canonique s’applique donc, ce qui donne la dépendance
(dessinée en bleu sur la ﬁgure 4) deob j entre “g012t” (le mot-forme de l’ancre de C = [Np2]) et “en ” (le
mot-forme de l’ancre de 5 = [Clit]). Sur la ﬁgure 4, les trois autres dépendances sont des applications du
cas linéaire canonique. 7.

7. D’autres exemples de structures de dépendances obtenues par la méthode décrite ci—dessus peuvent étre consultés a
l’adresse http : //leopar . loria . fr/exemples_dep/.

J. MARCHAND, B. GUILLAUME ET G. PERRIER

5 Conclusion

Nous avons présenté une méthode pour calculer les dépendances syntaxiques d’un énoncé a partir du pro-
cessus d’analyse en constituants a l’aide des grammaire d’interaction. Cette méthode a base de motifs de
graphes permet de retranscrire tout l’information de l’analyse en constituants nécessaire a la construction
de la sémantique. Il nous reste maintenant a valider notre méthode sur des corpus a grande échelle, par
exemple dans le cadre d’une campagne d’évaluation comme PASSAGE.

D’autre part, notre méthode de sélection de motifs de graphe peut étre généralisée pour l’analyse sémantique.
Il ne s’agit plus de détecter des motifs de graphes mais d’appliquer des transformations directement sur
les graphes dans le cadre de la réécriture de graphes (Bonfante et al., 2010).

Références

BONFANTE G., GUILLAUME B., MOREY M. & PERRIER G. (2010). Réécriture de graphes de
dépendances pour l’interface syntaxe-sémantique. In Actes de TALN 2010, Montreal.

CANDITO M.-H., CRABBE B., DENIS P. & GUERIN F. (2009). Analyse syntaxique statistique du
frangais : des constituants aux dépendances. In TALN 2009, Senlis, France.

CANDITO M.-H. & KAHANE S. (1998). Can the TAG derivation tree represent a semantic graph ? An
answer in the light of Meaning-T ext Theory. In TAG. Proc+4, p. 21-24, Philadelphie.

DEBUSMANN R. (2006). Extensible Dependency Grammar .' A Modular Grammar Formalism Based On
Multigraph Description. PhD thesis, Saarland University.

GUILLAUME B. & PERRIER G. (2010). Interaction Grammars. Research on Language and Computation
(a paraitre).

KUBLER S., MCDONALD R. T. & NIVRE J. (2009). Dependency Parsing. Synthesis Lectures on
Human Language Technologies. Morgan & Claypool Publishers.

KUGEROVA I. & ZABOKRTSKY Z. (2002). Transforming Penn Treebank Phrase Trees into (Praguian)
Tectogrammatical Dependency Trees. The Prague Bulletin of Mathematical Linguistics, (78), 77-94.

MARCHAND J ., GUILLAUME B. & PERRIER G. (2009). Analyse en dépendances a l’aide des gram-
maires d’interaction. In TALN 2009, Senlis, France.

PERRIER G. (2003). Les grammaires d ’interaction. Habilitation a diriger les recherches, Université
Nancy 2.

PERRIER G. (2007). A French Interaction Grammar. In RANLP 2007, p. 463-467, Borovets Bulgarie.

RAMBOW O. & J OSHI A. (1997). A Formal Look at Dependency Grammars and Phrase-Structure
Grammars, with Special Consideration of Word-Order Phenomena. In Current Issues in Meaning-Text
Theory, London : Pinter.

