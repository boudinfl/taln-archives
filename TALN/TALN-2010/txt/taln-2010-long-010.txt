TALN 2010, Montreal, 19-23 juillet 2010

Convertir des dérivations TAG en dépendances

Eric Villemonte de La Clergerie
Alpage, INRIA / Univ. Paris 7, 30 rue du Chateau-des-rentiers, 75013 Paris

eric.de_la_clergerie@inria.fr

Résumé. Les structures de dépendances syntaxiques sont importantes et bien adaptées comme point
de départ de diverses applications. Dans le cadre de l’analyseur TAG FRMG, nous présentons les détails
d’un processus de conversion de foréts partagées de dérivations en foréts partagées de dépendances. Des
éléments d’information sont fournis sur un algorithme de désambiguisation sur ces foréts de dépendances.

Abstract. Syntactic dependency structures are important and adequate as starting point for various
NLP applications. In the context of the French TAG FRMG parser, we present the details of a conversion
process from shared derivation forests into shared dependency forests. Some information are also provided
about a disambiguisation algorithm for these dependency forests.

M0tS-CléS I dépendances, analyse syntaxique,TAG, forét partagée.

Keywords: dependencies, parsing,TAG,shared forest.

1 Introduction

Les sorties d’analyse syntaxique sont potentiellement tres utiles comme point de départ pour diverses ap-
plications, en particulier d’extraction d’information (Eric de La Clergerie et al., 2009) ou d’acquisition de
connaissances, par exemple en tant que triplets de dépendances, de chemins entre mots ou de conﬁgura-
tions prédicats-arguments. Néanmoins, ces sorties sont parfois complexes et pas directement exploitables,
nécessitant par exemple de convertir une sortie « concrete » en une sortie plus abstraite. Cette tache, un
peu ingrate, est rarement documentée, alors qu’elle nécessite une déﬁnition claire des sorties traitées.

Nous nous intéressons aux traitements des sorties de l’analyseur syntaxique FRMG. Résultant de la com-
pilation par le systeme DYALOG (Villemonte de la Clergerie, 2002) d’une grammaire TAG du francais a
large couverture (Thomasset & Villemonte de La Clergerie, 2005), FRMG retourne, sous forme de forét
partagée, l’ensemble (potentiellement exponentiel) des dérivations TAG couvrant completement ou par-
tiellement une phrase. En pratique, méme si les arbres de dérivations sont plus abstraits que les arbres
d’analyses et plus proches d’un niveau sémantique (Gardent & Kallmeyer, 2003), ils ne sont pas forcé-
ment adaptés pour de traitements ultérieurs, car mettant essentiellement en relation des arbres TAG de la
grammaire sous-jacente. Heureusement, le caractere fortement lexicalisé des arbres TAG permet d’explo-
rer la conversion des arbres de dérivations en arbres de dépendances. Bien que ce fait soit relativement bien
connu (Candito & Kahane, 1998; J oshi & Rambow, 2003), nous précisons ici quelques points concrets de
cette conversion. L’ originalité de notre approche est également de généraliser la conversion de maniere a
obtenir des foréts partagées de dépendances et de proposer une représentation de ces foréts.

Les foréts ambigues sont parfois intéressantes, par exemple pour des expériences d’acquisition (Fernandez
et al., 2007). Néanmoins, les applications s’appuyant sur l’analyse syntaxique requierent généralement une
structure non-ambigue de dépendances, d’o1‘1 la breve présentation d’un algorithme de désambiguisation.

2 Quelques rappels sur les TAG

Les grammaires d’arbres adjoints [TAG (J oshi, 1987)] s’appuient sur la combinaison d’arbres élémentaires
par les opérations de substitution ou d’adjonction pour construire des arbres d’analyse. En particulier,
l’opération d’adj onction, qui ouvre un noeud interne pour y greffer le contenu d’un arbre auxiliaire, permet
la gestion de dépendances a longue distance dans les phrases. Par ailleurs, l’utilisation d’arbres offre la
notion de domaine de localite’ étendu et permet plus directement la lexicalisation des grammaires. Un arbre
peut en effet étre ancré par une téte lexicale, les autres noeuds (éventuellement lexicalisés) formant son
domaine de localité. Typiquement, un arbre ancré par un verbe contient un noeud pour chaque argument
sous-catégorisé par celui-ci.

La ﬁgure 1 montre les arbres élémentaires permettant l’analyse de « Yves donne un joli livre £1 Sabine »,
avec, en particulier, un arbre verbal ancré par donne sous-catégorisant pour un verbe ditransitif et un arbre
ancré par joli venant modiﬁer livre par adjonction. L’ arbre d’analyse obtenu est donné par la ﬁgure 2a.
Mais, classiquement, l’information utile est fournie par l’arbre de dérivation de la ﬁgure 2b qui indique
l’ensemble des opérations de dérivations ayant pris place, en précisant, pour chaque opération, l’arbre
et le noeud d’origine et l’arbre ajouté (par substitution ou adjonction). Ainsi, l’arbre exemple stipule
qu’une substitution prend place sur le noeud NP1 de l’arbre tn lpn2 ancré par donne, introduisant l’arbre
np ancré par Yves. L’ arbre de dérivation est pivot dans le sens ou il permet la reconstruction de l’arbre
d’analyse, tout en se rapprochant d’un niveau de représentation plus sémantique (Candito & Kahane, 1998;
Gardent & Kallmeyer, 2003). Ce modele de base est enrichi dans le cadre de FRMG.

S tn1pn2(donne)

\ VP
JNP/i 9
subst I P / N

NIP npdn(livre)

I
I

subst I V
I
I

*-<

<

CD

:1:

Q}!
U:
C-'
O‘
51‘.

D J’ N NIP np(Sabine)
subst I adj I  I
1 d( a(jo1i)1\’I We Sabine
D ““ / \
I Adj N *
1111 I
joli

FIGURE 1 — Arbres élémentaires pour Yves donne un joli livre £1 Sabine

NP/S\VP
l V/NP/ \PP

Yves / \
donne NP P NP tn1pn2(donne)
D N a Sabine 5%)” I S M
| f \ np(Yves) npdn(livre) np(Sabine)
W Ar“ T SD/aN\
joli livre d(un) a(j oli)
(a) Arbre d’ analyse (b) Arbre de derivation
FIGURE 2 — Arbres d’analyse et de derivation
3 FRMG

L’ analyseur FRMG est issu de la compilation par le systeme DYALOG d’une grammaire TAG large couver-
ture du francais generee par une meta-grammaire (Thomasset & Villemonte de La Clergerie, 2005). Une
de ses principales caracteristique est la gestion d’un petit nombre d’arbres (environ 200) grace a l’emploi
d’operateurs de factorisation sur les noeuds (disjonction, repetition, optionalite, gardes, entrelacement).
Bien que la factorisation ne change ni le pouvoir expressif des TAG ni leur complexite, un arbre factorise
peut representer un nombre exponentiel d’arbres TAG classiques (Villemonte de la Clergerie, 2010).

Au plus un noeud ancre est distingue par arbre correspondant a la tete, ce noeud etant etiquete par une ca-
tegorie syntaxique pre-terminale (ou pan‘-of-speech), comme v (verbe) ou nc (non commun). L’ancrage
d’un arbre 7' par une forme f se fait par uniﬁcation de structures de traits appelees hypertag (Kinyon,
2000), avec un hypertag pour 7' speciﬁant les constructions syntaxiques couvertes par celui-ci et un hy-
pertag pour f indiquant les constructions autorisees pour celle-ci. L’ uniﬁcation des deux hypertags realise
l’ancrage et permet de bloquer certaines traversees dans l’arbre factorise, evitant en autre des phenomenes
de surgeneration. Au ﬁnal, pour etre complet et permettre de reconstruire un arbre d’analyse, l’arbre de
derivation doit non seulement se souvenir du nom des arbres mais egalement des hypertags resultant des
ancrages, de maniere a pouvoir correctement identiﬁer le parcours suivi dans chaque arbre factorise.

En sus des noeuds ancre, FRMG introduit aussi des noeuds co-ancre. Ces noeuds feuilles sont egalement
etiquetes par des categories pre-terminales, mais l’operation de co-ancrage n’utilise pas d’hypertag. De tels
noeuds sont par exemple utilises pour des categories tres simples comme les clitiques (comme il, ﬁgure 5),
les prepositions ou certains pronoms. Sans trop entrer dans les details, un cas plus limite est donne par le
traitement de constructions verbales ﬁgees comme prendre conscience o1‘1 prendre sera l’ancre verbale et
conscience une co-ancre de categorie ncpred, avec un mecanisme ad-hoc permettant de transferer l’hy-
pertag du nom predicatif avec l’hypertag sous-speciﬁe du verbe. Les operations de co-ancrage laissent une
trace dans l’arbre de derivation en speciﬁant non pas un arbre cible mais une forme cible. Les arbres FRMG
admettent aussi des noeuds feuilles lexicaux decores par des formes ou des lemmes (ou des disjonctions
de formes ou lemmes). La lexicalisation de ces noeuds avec des formes de la chaine d’entree se traduit
aussi par des traces dans l’arbre de derivation.

Une autre extension découle du scanner utilisé par FRMG qui permet, a certains endroits, d’ignorer des
portions de la chaine d’entrée considérées comme étant du bruit. Ainsi, le pré-traitement effectué par
l’outil SXPipe (Sagot & Boullier, 2008) assigne la catégorie syntaxique _EPSILON a des mots comme
euh ou a des mots répétés comme le dans « l_e le chat mange ». L’ arbre de dérivation conserve une trace
des opérations de sauts, en les affectant de maniere arbitraire a l’arbre en cours de reconnaissance pour le
pseudo-noeud nommé skip (euh, ﬁgure 5).

Enﬁn, FRMG étant en fait une TAG avec décorations (F-TAG), les noeuds sont décorés par des paires de
structures de traits, celles-ci précisant essentiellement des traits morpho-syntaxiques comme le genre ou
le nombre. Sans rentrer dans le détail des opérations TAG, l’arbre de dérivation associe en conséquence
une décoration bot pour une substitution et une paire de décorations top et bot pour une adjonction.

Le dernier élément d’information concerne l ’empan associé a chaque opération, c’est-a-dire la portion de
la chaine d’entrée couverte par l’arbre ou le mot cible. Dans le cadre d’analyse de treillis ambigus de mots
représentés par des automates a états ﬁnis, ces empans sont généralement donnés par une paire d’états
(start,end) de l’automate et par un quadruplet (start, end, hstart, hend) pour l’adjonction d’un arbre
auxiliaire ,8 couvrant (start, end) avec un noeud pied couvrant un trou (hstart, hend). Pour FRMG, la
quasi-totalité des arbres auxiliaires sont en fait utilisables comme des arbres d’insertion (TIG - (Schabes
& Waters, 1995)) n’adjoinant du matériel que d’un seul coté du noeud d’adjonction, ce qui conduit, en
termes d’empan, a des signatures de la forme (start, end, start, start) ou (start, end, end, end).

En bref, la structure d’arbre de dérivation fournie par FRMG comprend des informations sur une opération
effectuée sur le noeud source d’un arbre source. Une opération se caractérise par son type (substitution,
adjonction, . . .), son empan, une ou deux décorations t op et bot, l’arbre ou la forme cible, et l’hypertag de
l’arbre cible. Les arbres de dérivation correspondent a des structures concretes dans le sens o1‘1 ils essaient
de conserver une trace complete de tout ce qui s’est passé, dont de nombreux détails pas nécessairement
utiles pour des traitements ultérieurs. 1

4 Arbres de dépendances

Les arbres de dérivation TAG se convertissent facilement en arbres de dépendances dans le cas de gram-
maires lexicalisées. L’idée de base est de transformer chaque étape de dérivation (symbolisée par un arc
dans l’arbre de dérivation) en une dépendance : une opération de dérivation entre un arbre source 7'1 et un
arbre cible 7'2 se traduit par une dépendance entre la téte de 7'1 comme gouverneur et la téte de 7'2 comme
gouverné. Ainsi, l’arbre de dérivation de la ﬁgure 2b devient l’arbre de dépendance de la ﬁgure 3, ou l’on
voit que le mot £1 n’est pas, par défaut, rattaché car correspondant a un noeud lexical dans l’arbre tnlpn2
qui n’apparait pas comme opération dans le modele de base des arbres de dérivation.

Dans le cadre de FRMG, la conversion est étendue naturellement aux cas ou la cible est un noeud co-ancre
ou un noeud lexical (traitant ainsi le cas de 61 qui apparait comme une co-ancre de catégorie prep dans
l’arbre FRMG correspondant a tn lpn2 , donnant lieu a la dépendance en pointillé). Les labels des arcs sont
donnés par les labels des noeuds sources. Pour les noeuds feuilles de substitution ou de co-ancrage, le label
utilisé dans FRMG traduit en général leur fonction syntaxique comme sujet, objet ou xcomp (pour
les arguments phrastiques). Pour les noeuds internes sur lesquels sont appliquées des adjonctions, le label

1. Cependant, certains << détails » sont parfois utiles pour certaines applications, par exemple le mode des Verbes ou le
caractére saturé ou non d’un groupe nominal (par un détenninant).

 

FIGURE 3 — arbre simple de dépendance

correspond généralement a la catégorie syntaxique du noeud (plus un index) et n’est malheureusement pas
touj ours tres informatif.

Certains arbres FRMG ne possedent pas de noeud ancre, conduisant a introduire une pseudo-ancre vide de
catégorie syntaxique X positionnée en start pour un tel arbre 7' non ancré, de racine X, et couvrant un
empan démarrant a start.

Par construction, l’ensemble des adjonctions portant sur n’importe quel noeud N d’un arbre 7' sont vues
comme des dépendances ayant comme gouverneur l’ancre lexicale A de 7'. En pratique, ce comportement
n’est pas toujours intuitif car on aimerait parfois prendre une valeur lexicale dominée par N comme
gouverneur. Ainsi, dans le cadre de la phrase « il a pris pleine conscience du probleme », la théorie stipule
une dépendance pris —> pleine mais l’intuition une dépendance conscience —> pleine. II a donc été
décidé qu’une adjonction portant sur un noeud co-ancre est transformée en une dépendance vers celui-ci,
tout en se rappelant le noeud ancre. 2

Enﬁn, rappelons que, du fait des adjonctions, les structures de dépendance obtenus ne sont pas nécessai-
rement projectives. Il est aussi a noter que l’utilisation d’arbres TIG conduit a la possibilité d’adjonctions
multiples sur un noeud en place des adjonctions chainées dans le cas des TAG (Schabes & Shieber, 1994) 3.
En terme de dépendance, on obtient alors directement des dépendances multiples sur le bon gouvemeur
(par exemple pour des adjectifs comme dans le joli petit chat noir) plutot que sur les ancres des arbres
auxiliaires intermédiaires (chainage d’adjectifs).

5 Foréts de dépendances

FRMG retoume l’ensemble de toutes les dérivations possibles pour une phrase, en s’appuyant sur un al-
gorithme d’analyse tabulaire a la Earley conservant des traces de calculs sous forme d’items pour réaliser
du partage de calculs. L’ensemble des arbres de dérivation est retoumé sous forme d’une forét partagée,
extraite de ces items grace a des pointeurs arriere permettant de remonter des items a leurs parents (Billot
& Lang, 1989). En oubliant les décorations, une telle forét est de taille polynomiale en la longueur n de
la phrase (O(n6) en étant efﬁcace) mais peut représenter un nombre exponentiel (voire inﬁni) d’arbres. La
ﬁgure 4 schématise les deux types de partage présents dans ces foréts, a savoir le partage de sous-arbres et
le partage de contextes grace a des graphes ET-OU.

Concretement, le partage par sous-arbre dans les arbres de dérivation se traduit par le fait qu’une meme
opération comme la substitution d’un arbre cible 7' couvrant un certain empan s peut s’effectuer sur dif-

2. On peut envisager d’étendre ce mécanisme pour d’autres cas par un systéme de régles. Par contre, il parait plus difﬁcile
de gérer des changements d’orientation des dépendances, parfois souhaités, par exemple pour des adjonctions prédicatives.
3. L’ ordre des adj onctions est fourni par les empans, ce qui est potentiellement incomplet en cas d’empan Vide.

 

¥g?a

(a) par sous-arbre 0)) par Contexte (c) par sous—arbre et contexte

FIGURE 4 — Type de partage d’arbres

férents noeuds sources. Le partage par contexte se traduit par le fait que, pour un certain arbre source
couvrant un certain empan, plusieurs ensembles alternatifs d’opérations sont possibles. La conversion en
forét partagée de dépendances traite ces deux cas. Le partage de contextes se traduit par le fait qu’un
gouverneur (ancre d’un arbre source) peut étre associé a plusieurs ensembles alternatifs de dépendances,
ces ensembles pouvant partager des dépendances. Le partage de sous-arbres se traduit par plusieurs gou-
vemeurs en compétition pour un gouverné. Ces éléments se retrouvent dans la ﬁgure 5 qui donne une
forme visuelle de la forét de dépendance obtenue par conversion pour la phrase « il observe euh une ma-
man [avec ses jumelles]pp » avec une aInbigu'1'té de rattachement sur maman ou observe pour le groupe
prépositionnel PP et des ambigu'1'tés lexicales surjumelles (incluant la transcatégorisation d’un adjectif).

La ﬁgure 5 correspond a une approximation du format DEP XML de représentation des foréts partagées
de dépendance, format XML qui comprend :

— des éléments cluster (matérialisés par les rectangles extérieurs) associés aux mots de la phrase et carac-
térisés par une paire de positions le ft et right dans l’automate. Du fait des ambigu'1'tés de segmenta-
tion provenant de SXPipe, en particulier sur les mots composés, un mot simple (token) peut se retrouver
dans plusieurs clusters.

— des éléments node (matérialisés par les rectangles intérieurs) pointant vers un cluster et décorés
d’une forme form (rectiﬁée en cas de correction orthographique foumie par SXPipe), d’un lemme
lemma, d’une catégorie syntaxique cat, un arbre ancré tree de catégorie maximale xcat et d’un
ensemble de dérivations deriv. Plusieurs noeuds peuvent étre associés a un meme cluster.

— des éléments op (non matérialisés), historiquement traces des opérations dans la forét de dérivation mais
intuitivement interprétables comme des constituants. Ils portent une catégorie syntaxique non-terminale
cat comme S, un empan span simple ou a trou, et incluent une ou deux décorations top ou bot
introduites par les éléments narg. Un op O est aussi associé a un ensemble de dérivations deriv,
en compétition pour construire O. Chaque dérivation étant aussi associée a un noeud gouverneur, on
constate donc que 0 peut avoir plusieurs noeuds téte en compétition.

— des éléments edges (matérialisés par les arcs) mettant en relation un noeud source gouvemeur s avec
un noeud target gouverné t, également décorés par un label et un type (substitution, adjonction,
...). Plus ﬁnement, un arc e est utilisé (traverse) par un sous-ensemble De des dérivations D, de son
noeud source 3 avec De « partitionné » entre plusieurs sous-éléments deriv de e, chacun portant, en attri-
but name s, un sous-ensemble D C De et permettant de relier un constituant source s ource_op (ancré
par 3) avec un constituant cible target_op (ancré par t) dont l’empan est donné par span. Pour trai-
ter le cas particulier des affectations de dépendances sur les co-ancres, l’attribut re root_s ource est
utilisable sur deriv pour conserver le lien vers le noeud ancre.

— des éléments hypertags (non matéria1isés)portantdes dérivations et incluant une structure de traits. Un
hypertag est associable, au travers des dérivations, a plusieurs constituants et noeuds téte en compétition.

bleu 2 substitution
pointille 2 adjonction
pompre 2 co—ancre
vert 2 skip

  

— — — — _ _ _ _ __
— — — — _ _ __
-.__—
‘n
5

s (2)

   

N2 (1) N2 (1) N2 (1) N2 (1) N2 (1)

det (1) de1(1) det (1
jumelles

        

FIGURE 5 — Forét partagee de dependances pour « il observe euh une maman avec ses jumelles. »

Les pseudo-ancres mentionnees precedemment donnent lieu a des elements cluster lexicalement vides as-
socies a des elements node egalement lexicalement vides (cas de Wed: 1 6 5 et de S : 2 3 dans la ﬁgure 5),
mais neanmoins porteurs d’un arbre, d’une categorie maximale et d’un ensemble de derivations.

Le format DEP XML ne materialise pas explicitement les derivations (en tant qu’elements) mais celles-
ci forment le liant de l’ensemble des composants (noeuds, arcs, op et hypertags). Il est aussi interessant
de remarquer que les foréts de dependances partagent moins bien que les foréts de derivations. En effet,
la conversion tend a ouvrir la forét de derivation du fait qu’un constituant (symbolise par un element
op) peut avoir plusieurs noeud tetes. Ainsi, supposons un arbre 7' ancre par h sur lequel les operations
opl, . . . , opm ont ete effectuees (correspondant a une derivation de 7'), chaque operation op) etant associees
a 11,- tetes hm differentes. Alors, nous aurons toutes les dependances h —> hij regroupables en n1. - - - .nm
derivations potentielles pour h. Le nombre de derivations associees a un noeud gouvemeur peut donc
croitre de maniere exponentielle. Ceci est particulierement vrai suite a l’utilisation de l’adj onction multiple
des TIG qui peut fait croitre le parametre m. De longues sequences d’attachements prepositionnels sont
ainsi parfois susceptibles de conduire a de tres grosses foréts de dependances.

La vue graphique fournie par la ﬁgure 5 permet de facilement reperer les points d’ambiguite, sur avec (en
relation avec l’attachement sur maman ou observe) et surjumelles. Le niveau d’ambiguite est precise grace

aux nombres entre parentheses portés par les noeuds et les dépendances. Sur un noeud, ce nombre indique
combien de dérivations partent de celui-ci en tant que noeud gouverneur. Sur une dépendance d, il indique
combien de dérivations du gouverneur de d transitent par d. Ainsi, 2 dérivations partent de observe, les 2
deux utilisant les arcs object et subject, mais une seule utilisant l’arc vmod.

Ces nombres permettent d’estimer le taux d’ ambigu'1'té d’une phrase ramené au niveau du mot. La premiere

mesure est le taux d’ambigu'1'té moyen par mot déﬁni par 04 = §#—:1  — 1. Ce taux indique le nombre

moyen d’arcs entrants en surnombre par mot, en considérant qu’en cas de non-ambigu'1'té, on a un et un
seul arc entrant par mot d’o1‘1 oz = 0. Un taux de 1 indique 2 arcs entrants en moyenne par mots, donnant
normalement de l’ordre de 2” analyses pour une phrase de longueur n. Néanmoins, cette mesure tres
simple qui reﬂete la structure graphique des dépendances ne prend pas en compte les interactions entre

arcs données par les dérivations et a tendance a sous-estimer le niveau réel d’ambigu'1'té. Une mesure
_ I I _ _ 2 nOdeS|deriv,,|
alternative est donnee par le nombre moyen de derivations par mot ,8 =  . Pour la ﬁgure 5,

nous obtenons ainsi 04 = 0,7 et ,8 = 1, 2.

6 Désambiguisation

Dans un contexte applicatif, il est souvent nécessaire de ne considérer qu’une analyse par phrase (si pos-
sible la bonne !). Un désambiguisateur, écrit en DYALOG, existe et s’appuie sur un algorithme en pro-
grammation dynamique de recherche de l’analyse A de plus fort poids donné par la somme des poids des
arcs (et, dans une bien moindre mesure, des noeuds) participant a A. Le poids d’un arc s’exprime come
some des poids donnés par des regles élémentaires exprimées sous forme de motifs prenant en compte
les composant de l’arc courant (noeuds source et cible, type, label) et éventuellement des arcs freres, ﬁls ou
parents, voire des arcs en compétition. Les poids sont choisis de maniere heuristique et donnent, pour l’ins-
tant, de meilleurs résultats que ceux obtenus par apprentissage. A ce jour, le désambiguisateur comporte
environ 150 regles élémentaires. Par exemple, citons l’existence de regles favorisant les arcs remplissant
la valence d’un verbe (sujet, objet, ...), la présence d’un sujet avant son verbe, l’inversion du sujet si
certaines conditions sont remplies, etc. D’autres regles pénalisent les dépendances a longue distance, les
transcatégorisations non nécessaires, certaines constructions possibles mais improbables, etc.
edge_cost_e1en1( Nanw::’+ATTR’,

edge{ label => cmnp, source => node{ cat => V}, target => n0de{ cat => adj } },
100 y

La notion de dépendance se préte naturellement bien a la déﬁnition de ces regles de désambiguisation
(comme la regle ci-dessus favorisant légerement (+100) les attributs adjectivaux par rapport a d’autres
catégories syntaxique). Elle permet aussi de prendre en compte des préférences bi-lexicalisées et méme
tri-lexicalisées pour des restrictions de sélection (obtenues sur comptage de dépendances sur de larges
corpus). Par contre, l’algorithme de désambiguisation travaille sur une approximation de la forét dans le
sens o1‘1 les poids sont calculés sur les dépendances indépendemment des dérivations associées. En toute
logique, ce n’est pas correct dans le cas de regles consultant une dépendance mais aussi des dépendances
soeurs, parentes ou ﬁlles, éventuellement non présentes pour certaines dérivations. Néanmoins, le coﬁt de
l’algorithme (table 1), est déja relativement élevé et parfois tres long sur certaines phrases tres ambigues.

L’ algorithme de désambiguisation retourne un arbre de dépendance toujours représentable en format DEP
XML. 11 est également possible de convertir le résultat dans les formats EASy ou PASSAGE (Paroubek

et al., 2009) utilisés par les campagnes d’évaluation syntaxique du francais.

7 Evaluation

La table 1 donne les valeurs moyennes, médianes, et maximales des mesures d’ambigu'1'té 04 et ,8 sur en-
viron 4000 phrases du corpus de référence EASy (Paroubek et al., 2008) couvrant divers styles (littéraire,
joumalistique, médical, oral, ...). On observe un net décalage entre les évolutions de 04 et ,8. Ces valeurs
peuvent aussi étre contrastées avec les distributions correspondantes pour les longueurs des phrases et les
temps d’analyse et de désambiguisation (avec un timout de 110s). La table 2, calculée sur 2,9 millions de
phrases de Wikisource avec des analyses completes et des longueurs n entre 1 et 231 (moyenne de 12, 74),
suggere que la mesure ,8 est légerement mieux corrélée pour les temps d’analyse, de conversion vers DEP
XML et de désambiguisation (vers Passage), avec une excellente corrélation pour DEP XML (R2 = 0, 91).
Notons également que la complexité de l’analyse par rapport a la longueur n semble en moyenne moindre
que O(n2) et celle de la désambiguisation moindre que linéaire, ce qui semble indiquer que le coﬁt élevé
de la désambiguisation (table 1) est du a un mauvais facteur constant peut-étre réductible.

type 11 avg median %90 %99 max
longueur 3879 19,30 16,00 40,00 69,00 136,00
04 3869 1,06 0,90 2,00 4,00 9,10
ﬂ 3869 7,32 2,30 11,90 101,00 967,40
t. analyse (s) 3879 0,58 0,14 0,95 5,26 110,00
t. désamb (s) 3869 0,92 0,24 1,23 11,35 110,00

TABLE 1 — Quelques statistiques sur les niveaux d’ambiguité et les temps d’analyse et de désambiguisation

analyse xmldep desamb

n“ R2=0,77 a=1,61 R2=0,77 a=1,10 R2=0,62 a=0,80

(2n|derivn|)“ R2=0,76 a=0,81 R2=0,91 a=0,60 R2=0,85 a=0,47
n“(1 + 0z)b R2=0,80 a=1,46 b=0,91 R2=0,90 a=0,92 b=1,12 R2=0,76 a=0,64 b=0,94
naﬁb R2=0,82 a=1,19 b=0,54 R2=0,91 a=0,68 b=0,54 R2=0,83 a=0,37 b=0,55

TABLE 2 — Indication de corrélation (sur 2.9Mphrases de Wikisource)

8 Conclusion

Nous avons repris et approfondi les relations existant entre arbres de dérivations TAG et arbres de de-
pendances, en les transposant en particulier au niveau de foréts partagées. 11 en résulte une description
associée a une représentation )ﬂV[L qui permet la conception d’applications exploitant des structures de
dépendances riches en information. La représentation proposée s’applique par construction aux foréts de
dépendances issue d’analyses TAG, mais est aussi utilisable pour de simples arbres apres désambiguisa-
tion. Nous pensons qu’elle est adaptable a toute sorte de foréts de dépendances, permettant de combiner a
la fois des informations strictement de dépendance mais aussi des informations de constituance. Ce choix
va dans le sens d’autres formats émergeants comme TIGER (Brants & Hansen, 2002) ou la proposition de
norme ISO SynAF (Declerck, 2008), qui, eux, ne prennent cependant pas en compte la notion d’ambiguité.

Références

BILLOT S. & LANG B. (1989). The structure of shared forests in ambiguous parsing. In Proc. of the 27
Annual Meeting of the Association for Computational Linguistics.

BRANTS S. & HANSEN S. (2002). Developments in the TIGER annotation scheme and their realization

in the corpus. In Proceedings of the Third Conference on Language Resources and Evaluation (LREC
2002), p. 1643-1649, Las Palmas.

CANDITO M.-H. & KAHANE S. (1998). Can the derivation tree represent a semantic graph ? an answer
in the light of meaning-text theory. In In Proc. of TAG+4, Philadelphia.

DECLERCK T. (2008). A framework for standardized syntactic annotation. In Proceedings of the Sixth

Conference on International Language Resources and Evaluation : European Language Resources As-
sociation (ELRA) ELRA/ELDA.

FERNANDEZ M., VILLEMONTE DE LA CLERGERIE E. & VILARES M. (2007). From text to knowledge.
In Proc. of E UROCAS T’07 (Eleven international conference on Computer Aided Systems theory).

GARDENT C. & KALLMEYER L. (2003). Semantic construction in feature-based tree-adjoining gram-
mars. In Proc. of the I 0th Conference of the European Chapter of ACL.

J OSHI A. & RAMB OW O. (2003). A formalism for dependency grammar based on tree adjoining gram-
mar. In Proceedings of the Conference on Meaning-Text Theory (M IT), Paris.

J OSHI A. K. (1987). An introduction to tree adjoining grammars. In A. MANASTER-RAMER, Ed.,
Mathematics of Language, p. 87-115. Amsterdam/Philadelphia : John Benjamins Publishing Co.

KINYON A. (2000). Hypertags. In Proc. of COLING, p. 446-452.

PAROUBEK P., ROBBA I., VILNAT A. & AYACHE C. (2008). Easy, evaluation of parsers of french : what
are the results ? In Proceedings of the 6th International Conference on Language Resources and Evalua-
tion (LREC), Marrakech, Morroco.

PAROUBEK P., VILLEMONTE DE LA CLERGERIE  LOISEAU S., VILNAT A. & FRANCOPOULO
G. (2009). The PASSAGE syntactic representation. In 7th International Workshop on Treebanks and
Linguistic Theories (TLT7), Groningen.

SAGOT B. & BOULLIER P. (2008). SxPipe 2 : architecture pour le traitement pré-syntaxique de corpus
bruts. Traitement Automatique des Langues, 49(2).

SCHABES Y. & SHIEBER S. M. (1994). An alternative conception of tree-adjoining derivation. Compu-
tational Linguistics, 20(1), 91-124.

SCHABES Y. & WATERS R. C. (1995). Tree insertion grammar : a cubic-time, parsable formalism that
lexicalizes context-free grammar without changing the trees produced. Fuzzy Sets Syst., 76(3), 309-317.

THOMASSET F. & VILLEMONTE DE LA CLERGERIE E. (2005). Comment obtenir plus des meta-
grammaires. In Proceedings of TALN’05, Dourdan, France : ATALA.

VILLEMONTE DE LA CLERGERIE E. (2002). Construire des analyseurs avec DyALog. In Proc. of
TALN’02.

VILLEMONTE DE LA CLERGERIE E. (2010). Building factorized tags with meta-grammars. In Proc. of
TAG+I0, Yale University. To appear.

ERIC DE LA CLERGERIE, SAGOT B., STERN R., DENIS P., RECOURCE G. & MIGNOT V. (2009).
Extracting and visualizing quotations from news wires. In Proceedings of LTC 2009, Poznan, Pologne.

