Raffinement du
Lexique des Verbes Francais

Paul Bédaride
Université de Stuttgart
pau1.bedaride@gmai1.com

RESUME
Nous présentons dans cet article les améliorations apportées a la ressource « Les Verbes Francais »
aﬁn de la rendre plus formelle et utilisable pour le traitement automatique des langues naturelles.
Les inforrnations syntaxiques et sémantiques ont été corrigées, restructurées, unifiées puis
intégrées ‘a la version XML de cette ressource, aﬁn de pouvoir étre utilisée par un systeme
d’étiquetage de roles sémantiques.

ABSTRACT
Resource Reﬁning : « Les Verbes Francais »

This paper introduce the impovements we made to the resource « Les Verbes Francais » in order
to make it more usable in the ﬁeld of natural language processing. Syntactic and semantic
information is corrected, restructured, unified and then integrated to the XML version of this
resource, in order to be used by a semantic role labelling system.

MOTS-CLES : ressource, lexique, Verbes, rafﬁnement, étiquetage de roles sémantiques.

KEYWORDS: resource, lexicon, verbs, reﬁnement, semantic roles labeling.

1 Introduction

Le domaine du traitement automatique des langues naturelles nécessite a la fois des ressources
représentant les particularités des langues et de leurs sémantiques, ainsi que des théories d’analyse
utilisant ces ressources. Si les théories sont la plupart du temps rapidement adaptables d’une
langue ‘a l’autre, il n’en est pas de méme pour les ressources. En effet, les ressources devant
représenter la richesse d’une langue, il est nécessaire de réaliser une nouvelle analyse des cas
problématiques ou une nouvelle annotation de corpus. Si l’on peut dire que l’anglais est une
langue riche en ressources linguistiques (e.g. : PropBank, FrameNet, WordNet, ...), il n’en est
pas de méme pour le francais. I1 existe des équivalents pour certains types de ressources (e.g. :
FrenchTreeBank, EuroWordNet, Wolf, ...), mais ils ont souvent une moins grande couverture
et une moins bonne qualité. Si les ressources linguistiques ne sont pas tres développées, c’est
parce qu’elles exigent des analyses d’experts du domaine et des annotations nécessitant une
quantité considérable de temps et de travail, qui engendre un fort coﬁt de production. D’un
autre coté, il existe des ressources linguistiques méconnues et sous-utilisées car nécessitant des
efforts conséquents pour étre adaptées au traitement automatique des langues. Plutét que de
laisser stagner ces ressources et de créer de nouvelles ressources a partir de rien, nous avons
choisi d’améliorer l’une d’entre elles — « Les Verbes francais » (Dubois et Dubois-Charlier, 1997),

Actes de la con_fe'rence onjointe JEP-TALN-RECITAL 2012, volume 2: TALN, pages 155-168,
Grenoble, 4 au 8 juin 2012. ©2012 ATAI.A 8: AFCP

155

avec pour objectif de la rendre utilisable pour la tache d’étiquetage de roles sémantiques. Nous
allons maintenant introduire cette ressource en évoquant ses qualités et faiblesses, ainsi que
les améliorations déja réalisées, puis nous expliquerons pourquoi cette ressource nous semble
étre un bon choix pour l’ét1'quetage de réles sémantiques. Dans les sections suivantes nous
présenterons notre objectif de ressource, les traitements réalisés pour atteindre cet objectif, ainsi
qu’une évaluation de ces améliorations. Nous conclurons cet article en résumant les gains que
nos travaux ont apportés a cette ressource.

2 Les Verbes Francais

2.1 Historique

Le LVF, << Les Verbes Frangais », est une ressource lexicale réalisée par Jean Dubois et Francoise
Dubois-Charlier, dont l’objectif est de fournir une description linguistique des Verbes, basée
sur l’adéquation entre schemes syntaxiques et interprétation sémantique (Ievin, 1993). Cette
ressource a été conﬁée dans un premier temps a un industriel qui n’a pas su l’utiliser, ainsi qu’a
un éditeur qui ne l’a pas publié (elle fut distribuée sous la forme de photocopies). Comme ces
deux entreprises détenaient les droits d’utilisation, cette ressource ne pouvait pas étre diffusée
aﬁn d’étre largement uﬁlisée et améliorée. Ils ont cependant accepté aprés un certain temps, de
restituer aux auteurs le droit de diffuser leur ressource comme ils le souhaitaient.

Depuis sa libération en 2007 sous la forme d’un ﬁchier Excel (eLVF), un nombre croissant de
personnes se sont intéressées ‘a cette ressource. Un des premiers constats réalisé fut que Jean
Dubois et Francoise Dubois-Charlier ont développé le eLVF sans se soucier des problémes que les
informaticiens pourraient avoir pour utiliser leur ressource dans le traitement automatique de la
langue francaise. Une grande partie des problemes est cependant due aux limites d’espace de
stockage existantes lors de la création du LVF. Un grand nombre de mots ont ainsi été tronqués ou
abrégés. Ia représentation de la ressource sous la forme d’un tableau limite sa structuration, et
les formats utilisés pour certains champs ne sont pas assez formels. Enﬁn, l’ouvrage « Les Verbes
francais » est obligatoire pour comprendre tous les codes et formats utilisés dans la version Excel
du LVF(eLVF).

2.2 Description

Le eLVF est composé de 25 609 entrées représentant les différents sens de 12 310 Verbes. Il y a
4 188 verbes ‘a plusieurs entrées et un verbe peut avoir jusqu"a 61 entrées (e.g. :pour le verbe
«passer »). Une entrée est composée des onze champs suivants :

— MOT : entrée du verbe a l’inﬁnitif

— DOMAINE : code donnant l’emploi principal (géologie, psychologie, ...)
et le niveau de langue (familier, vieux, littéraire, .. .)

— CLASSE : code déﬁnissant la classe syntactico-sémantique (appartenant a une hiérarchie)
— OPERATEUR : déﬁnition syntactico-semantique de l’entrée

— SENS : synonymes et déﬁnitions abrégées

— PHRASE : exemples d’utilisau'on de ce sens

156

Sens

expirer 04

((
l’air de soi »

préoccuper 03 « étre inquiet »

accoucher 01 « enfanter »

« On
« se
zrien, zhumain, 3 zchose, moyen, zpréposition « de »
T : factitif, * : pronominal réﬂechi

libérer 04 « affranchir »

      

TABLE 4 — Exemples de CONSTRUCTIONS

% _ sujet
b T humam Ob)-et Transitif
f.eX ° 0 faire sortir 0 prép. en « de »
qn 1 humain sujet _
_, _ I Pronorrunal
D sujétion 8 P S11Jet10T1 Prep’ en « de »
0

FIGURE 5 — Alignement et redistribution des champs OPERATEUR et CONSTRUCTIONS de « Zibérer 04 »

perrnettent d’associer le sujet de l’oPﬁRA'rEUR avec le sujet de la premiere CONSTRUCTION. Enﬁn,
le demier type de régle est basé sur la sémantique et permet ‘a des contraintes sémantiques
similaires d’étre liées. Si un argument d’une CONSTRUCTION ne peut étre lié a aucun argument de
l’o1>ﬁRArEUR (e.g. : si l’o1>ﬁRArEUR n’a pas de sujet), un argument factice est créé. La partie gauche
de la ﬁgure 5 nous donne un exemple d’alignement, montrant les projections des constructions
syntaxiques transitive et pronominale réﬂéchie de l’entrée « libérer 04 » sur son opérateur.

L’étape ﬁnale consiste a redistribuer les informations sémantiques et syntaxiques aﬁn d’atteindre
l’objectif déﬁni dans la section 3. L’o1=ﬁRArEUR est utilisé comme base pour le cadre sémantique et
les CONSTRUCTIONS comme base pour les cadres syntaxiques. Les informations syntaxiques des
contraintes de l’oPERA'rEUR ont été transférées au niveau des CONSTRUCTIONS et les contraintes
sémantiques des CONSTRUCTIONS ont été transférées au niveau de l’oPﬁRA'rEUR. Les arguments
sémantiques de l’oPﬁRA'rEUR ont été laissés tel quel. La par11'e droite de la ﬁgure 5 nous montre
la redistribution et la transformation des codes pour l’entrée « libe’rer 04 ». Le résultat ﬁnal
correspond bien a l’objectif de la ﬁgure 3.

Pour la création du corpus d’exemples, nous avons utilisé les PHRASES associées aux différentes
entrées. Le premier probléme est que ces exemples peuvent représenter plusieurs phrases (e.g. :
« On a~des documents,des livres. », « amasser »). Nous avons donc dﬁ décomposer ces exemples
en phrases canonique a l’aide d’outils d’analyse de surface. La décomposition n’est pas toujours
possible comme pour certains verbes avec des sujets pluriel et singulier (e.g. : « Ses forces, la
chance ont a~ Pierre. », « abandonner »). Le second probleme est que le verbe est représenté par
son initiale suivie du symbole ~, et donc un analyseur syntaxique normal ne pourra pas analyser

165

correctement ces exemples. Pour résoudre ce probléme, nous avons entrainé un analyseur
syntaxique (Bohnet et al., 2010) sur une version modiﬁée du FrenchTreeBank(Abeillé et al.,
2000). Nous avons remplacé tous les verbes en téte de phrase par leur initiale suivie du symbole
~. Nous n’avons pas remplacé tous les verbes car il existe des entrées avec des compléments
syntagmaﬁques ou le verbe est conjugué (i.e. : « On v~qu’il soit heureux. », « vouloir »). L’autre
intérét d’avoir uniquement transformé les verbes en téte de phrase est que cela pousse l’analyseur
syntaxique a prendre le verbe abrégé comme téte de la phrase. L’association des r6les sémantiques
aux arguments syntaxiques a été effectuée a l’aide de regles de réécriture permettant d’identiﬁer
les types de constructions syntaxiques utilisées. Les inforrnations sémantiques n’ont pas été
nécessaires car nous connaissions le sens du verbe et les réalisations syntaxiques utilisées dans le
xLVF sont assez limitées.

5 Evaluation

L’évaluation de la qualité des améliorations réalisées a été effectuée al’a1'de de scripts permettant
de vériﬁer la cohérence de la ressource obtenue, ainsi que par une analyse manuelle d’un
échantillon représentatif.

La vérification automatisée de la cohérence de la ressource est importante car elle est peu
couteuse et permet d’éviter nombre d’erreurs. Ce contr6le a été fait a l’aide de scripts vériﬁant
que :

— un OPERATEUR a un sujet, un prédicat et un certain nombre d’arguments complémentaires,

— le xoLVF contient le bon nombre d’entrées pour chaque classe et sous-classe,

— les arguments du CONSTRUCTEUR sont tous liés a ceux de l’o1=ERA'rEUR

Pour l’évaluation manuelle, un échantillon représentatif de 100 entrées a été extrait puis examiné
aﬁn de vériﬁer si le résultat obtenu était celui souhaité. Chaque entrée a été controlée sur la
correction des abréviaﬁons, la structuration de l’o1=ﬁRA'rEUR, la liaison des CONSTRUCTEURS, et la
liaison de l’oPERA'rEUR avec les CONSTRUCTEURS. Sur les 100 entrées analysées 84 sont bonnes,
13 ont des erreurs dues a notre analyses et 3 ont des erreurs dues au xLVF. Parmi les erreurs de
nos analyses, il y en a 3 de structuration de l’o1=1éRA'rEUR, 1 de liaison des CONSTRUCTEURS et 9 de
liaison OPERATEUR-CONSTRUCTEUR. Les erreurs sont dues a certaines entrées rnanquantes dans les
lexiques. Par exemple, org mvs (i.e. : un mauvais organe) n’est pas regroupé en un seul terme lors
de la structuration de l’o1=ﬁRA'rEUR, et les contraintes du CONTRUCTEUR sur le domaine des chases
ne sont pas liées avec les arguments coup et viande des OPERATEURS (car ces deux mots ne sont
pas considérés comme des choses). La plupart des erreurs sont donc facilement corrigibles en
ajoutant des entrées aux lexiques. Les erreurs dues au xLVF sont dues a certaines prépositions qui
ne sont pas mises en majuscules et qui sont donc considérés comme des arguments uniquement
sémantiques, comme pour l’entrée « ressaisir 01 » ou l’argument P soM de l’o1>ﬁRArEUR GRP+RE QN
P SOM () devrait étre associé au circonstant de maniére du CONSTRUCTEUR P1108.

Nous avons analysé 100 phrases annotées aﬁn de vériﬁer si les différentes étapes de l’annotation
se sont bien déroulées. Cette analyse indique que 70 phrases ont été bien annotées, et possedent
les bons roles sémantiques. Les problémes rencontrés dans les 30 autres phrases sont de natures
diverses. Le probleme le plus apparent est le mauvais ﬁltrage des structures en dépendances (15
phrases). En effet, les tournures ne correspondant pas a celles que nous avions identifié n’ont
pas été étiquetées. Cela est toutefois facilement corrigible en intégrant ces nouvelles tournures a

166

nos regles de ﬁltrage. Le second probleme rencontré est la mauvaise analyse des exemples par
l’analyseur syntaxique (6 phrases). Par exemple, il arrive que des groupes prépositionnels soient
rattachés a un argument plutét qu’au verbe. Un autre probléme provient de la mauvaise liaison
entre les constructions et les opérateurs. Nous nous retrouvons donc ‘a associer les arguments
syntaxiques aux mauvais arguments sémantiques. Le dernier probléme est la mauvaise séparation
des différents exemples (3 phrases). I1 arrive ainsi d’avoir une phrase avec plusieurs occurrences
du verbe ou d’un de ses arguments. Les résultats de cette analyse sont donc positifs étant
donné que la plupart des phrases ont été bien annotées et qu’une grande panies des erreurs est
corrigible.

6 Conclusion

Nous avons présenté des améliorations du xLVF qui donnent ‘a cette ressource une nouvelle
dimension. Les informations son structurées, moins ambigiies et plus uniformes, permettant ainsi
l’utilisation du xLVF pour faire de l’étiquetage de r6les sémantiques. Ces améliorations vont aussi
permettre de nouvelles améliorations du xLVF comme identifier quelles sont les entrées d’un
verbe qui sont SYNONYMES d’une entrée (pour le moment les SYNONYMES sont des verbes et non des
entrées). Ainsi, on sait que l’entrée « humilier 01 » a pour SYNONYME le verbe « abaisser », mais on
ne sait pas si c’est l’entrée « abaisser 01 » (« On abaisse le rideau. ») ou l’entrée « abaisser 06 » (« On
abaisse Pierre. ») qui est SYNONYME. Cette nouvelle version pourra aussi étre utilisée pour effectuer
des recherches plus précises sur le xLVF, permettant par exemple a des linguistes d’idenu'ﬁer des
verbes ayant certaines caractéristiques syntaxiques et sémantiques. Les deux ﬁchiers XML obtenus
sont en libre acces sur notre wiki http : / /margaux.phi1osophie.uni-stuttgart . de/ 1vf/ .
Nous pensons prochainement associer cette ressource avec Disco et Wolf pour annoter le French
TreeBank.

Références

ABEILLB, A., CLEMENT, L. et KINYON, A. (2000). Building a treebank for french. In In Proceedings
of the LREC 2000.

BAKER, C. F., FILLMORE, C. J. et LowE, J. B. (1998). The berkeley framenet project. In Proceedings
of the COLING-ACL, Montreal, Canada.

BOHNET, B., WANNER, L., MILLE, S. et BURGA, A. (2010). Broad coverage multilingual deep
sentence generation with a stochastic multi-level realizer. In Proceedings of the 23rd International
Conference on Computational Linguistics, COLING ’10, pages 98-106, Stroudsburg, PA, USA.
Association for Computational Linguistics.

DUBOIS, J. et DUBOIS-CHARLIER, F. (1997). Les verbesfrancais. Larousse-Bordas.

FELLBAUM, C., éditeur (1998). WordNetAn Electronic Lexical Database. The MIT Press, Cambridge,
MA; London.

FRANCOIS, J ., PESANT, D. et LEEMAN, D. (2007). Le classement syntactico-sémantique des verbes
frangzais. Iangue frangaise. Larousse.

167

HADOUCHE, E et LAPALME, G. (2010). Une version électronique du LV'F comparée avec d’autres
ressources lexicales. Langages, 10(179-180):193—220. Mise en page différente que celle parue
dans la revue.

KINGSBURY, 1? et PALMER, M. (2003). Propbank : The next level of treebank. In Proceedings of
Treebanks and Lexical Theories, Vaxjo, Sweden.

KOLB, P. (May 2009). Experiments on the difference between semantic similarity and relatedness.
In Proceedings of the 17th Nordic Conference on Computational Linguistics - NODALIDA ’09,
Odense, Denmark.

LEVIN, B. (1993). English verb classes and alternations : a preliminary investigation. University of
Chicago Press.

MERTENS, P. (2010). Restrictions de sélection et réalisations syntagmatiques dans dicovalence.
In Actes TALN 2010, Montreal, Canada.

ROMARY, L., SALMON-ALT, S. et FRANCOPOULO, G. (2004). Standards going concrete : from LMF
to Morphalou. In Workshop Enhancing and Using Electronic Dictionaries, page 7 p, Geneva,
Switzerland. none. Colloque avec actes et comité de lecture. internationale.

SAGOT, B. et FISER, D. (2008). Building a free French wordnet from multilingual resources. In
OntoLex, Marrakech, Morocco.

SCHULER, K. K. (2005). Verbnet: a broad-coverage, comprehensive verb lexicon. These de doctorat,
, Philadelphia, PA, USA. AAI3179808.

168

M PHRASE
311135561‘

Les s’a~contre E

amasser a
On a-sans s’a~

 

311135561‘ se

TABLE 1 — Entrées du eLVF pour le verbe « amasser »

— CONJUGAISON : codes permettant de conjuguer le verbe

— CONSTRUCTIONS : codes pour obtenir les schemes de construction syntaxique

— DERIVATIONS : codes pour produire les adjectifs verbaux et les dérivés nominaux
— NOM : code pour produire le mot dont le verbe est dérivé

— LEXIQUE : code pour obtenir le type de dictionnaire o1‘1l’entrée est répertoriée

La table 1 recense les entrées du eLVF représentant les différents sens du verbe « amasser » (i.e. :
« accumuler des objets », « accumuler de l’argent », « se grouper quelque part »). Ie eLVF donne
les informations suivantes sur le premier sens de ce verbe : il est utilisé dans le DOMAINE des
objets; sa CLASSE sémantique est mettre quelque chose quelque part, dans/sur un lieu, autour de
quelque chose; son OPERATEUR signiﬁe étre ou mettre quelque part plusieurs choses en amas; il a
pour synonyme le verbe « accumuler », il est réalisé dans les PHRASES d’exemple « On amasse
des documents. » et « Les preuves s’amassent contre Pierre. » ; il fait partie des verbes du premier
groupe avec un auxiliaire « avoir » pour le transitif et « étre » pour le pronominal; il se réalise
dans un cadre transitif avec un sujet humain, un objet choses, et un circonstant locatif (oil on
est) ainsi que dans un cadre pronominal avec sujet choses et un circonstant locatif; l’adjectif
« amassable » et le déverbal « amas » en sont des dérivés; et il provient d’un dictionnaire de base
de 15 000 mots. Une bonne connaissance des encodages est clairement nécessaire pour dériver
ces informations a partir de l’entrée du eLVF. Nous n’allons pas décrire plus précisément tous les
champs ,1 car cela serait trop long, mais nous allons nous focaliser sur les champs les plus utiles
pour la tache d’ét1'quetage de role sémantiques : les champs opérateur et constructions.

Le champ OPERATEURlI‘lteI‘p1”éte sémantiquement les schemes syntaxiques. Il est composé d’un
prédicat (le premier token qui n’est pas entre parentheses), et d’un certain nombre d’arguments.
Les déﬁnitions des prédicats et de certaines abréviations sont accessibles dans la version papier
du LVF. Le sujet du prédicat, qui est optionnel, est déﬁni entre parentheses juste avant le prédicat.
Les autres arguments suivent le prédicat et peuvent étre formés d’un ou plusieurs mots. Les
limites des arguments n’étant pas déﬁnies, c’est 5 l’utilisateur d’identiﬁer les différents arguments
‘a l’aide de ses connaissances de la langue et de ses capacités de raisonnement. Il existe deux
types d’arguments : les contraintes syntaxico-sémantiques pouvant étre réalisés syntaxiquement
et les spécifications sémantiques précisant la sémantique du prédicat. Un argument est une
contrainte syntaxico-sémantique s’il est le sujet du prédicat, s’il appaxtient a un certain ensemble
d’abréviations (e.g. : qc, qn, .. .) ou s’il est composé d’une préposition en capitales; et est une
spécification sémantique dans le reste des cas. Par exemple, dans la premiere entrée du verbe
« amasser », qc+pl représente une contrainte alors que e amas représente une spéciﬁcation. Des
opérateurs de disjonction (i.e. : / ,) permettent d’associer plusieurs contraintes ‘a un méme
emplacement sémantique.

Le champ CONSTRUCTIONS liste les différents schémas syntaxiques pouvant étre réalisés. Un
schéma syntaxique commence par une lettre en capitale, qui définit son type et celui de ses

1. Pour une description complete de la ressource : http://margaux.ph:i1osoph:ie.u.n:i— stuttgart . de/1vf/

157

+ circonstant
+

+ + + circonstant
+ + + circonstant

 

TABLE 2 — Type de CONSTRUCTION avec arguments associés

arguments. La table 2 donne les quatre types de schemes existant dans le LVF avec le type de leurs
arguments. Chaque argument encode une contrainte syntaxique ou sémantique par un chiffre ou
une lettre. Un sujet ou un objet ayant pour valeur 1 représente une contrainte sémantique sur le
domaine de l’humain, un circonstant avec la valeur 1 représente une contrainte sémantique sur
le domaine locatif (oil on est) et un complément prépositionnel ayant pour valeur b représente
une contrainte syntaxique sur un complément prépositionnel avec la préposition « de ». Nous
donnerons uniquement la signiﬁcation des codes que nous utiliserons dans cet arﬁcle, et nous
vous renvoyons a la version papier de LVF ou a notre wi.ki 1 si vous souhaitez étudier les autres
codes.

L’espace de stockage étant nettement moins problématique de nos jours, il serait intéressant
de décoder la ressource pour la rendre plus lisible et utilisable. C’est ce qu’ont commencé ‘a
faire Hadouche et Lapalme (Hadouche et Lapalme, 2010) en transformant le eLVF au format
XML ainsi qu’une interface de consultation 2, comme nous allons le voir dans la sous-section
suivante. Dans leur ar11'cle présentant la version XML du eLVF (xLVF), ils ont comparé le eLVF
avec des ressources existantes pour l’anglais (VerbNet(Schu1er, 2005), FrameNet(Baker et al.,
1998), WordNet(Fellbaum, 1998)) et le francais (Dicovalence(Mertens, 2010)). Pour résumer
ce comparatif, nous pouvons dire que les approches utilisées par les ressources sont variées
(pronominale pour Dicovalence, distributionnelle et transformationnelle pour le LVF, a base de
cadres sémantique pour FrameNet, et d’ensembles de synonymes pour WordNet), mais qu’elles
ont toutefois un certain nombre de points communs dans leur représentation de la description
des unités lexicales, et de la hiérarchisation des données. D’aprés cette comparaison le eLVF est
une bonne ressource linguistique car il intégre une grande parﬁe des informations contenues
dans les autres ressources, comme la hiérarchisation du sens des verbes avec les CLASSES, la
description de la sémantique avec le champ OPERATEUR, et une liste de SYNONYMES pour chaque
entrée. I1 manque cependant certaines informations comme la gestion des réles thématiques,
mais le eLVF propose des informations que les autres ressources ne contiennent pas comme la
gestion du sens ﬁguré des verbes.

2.3 La version XML

Nous allons maintenant parler de la version XML du eLVF développée par Hadouche et Lapalme.
Cette version du eLVF a pour objectif de rendre la ressource plus accessible, utilisable et extensible.
Pour cela ils ont informatisé la description des différents codes contenus dans la version papier
du LVF sous la forme de ﬁchiers XML (voir ﬁgure 1). Ils ont ensuite généré un ﬁchier XML
représentant les données du eLVF décompressées. Ia ﬁgure 2 nous montre la version XML du
verbe « amasser ». Les informations d’origine ont été conservées dans le ﬁchier ‘a l’intérieur des
balises et les codes décompressés sont représentés par des attributs associés a ces balises. Toutes
les informations n’ont pas été complétement décompressées, comme pour le code de CLASSE L3b
dont nous savons qu’il représente la classe générique Locatif avec un sujet non-animé propre

2. http://rali.iro.umontrea1.ca/Dubo:is/

158

<c1asses>
<generique code="C" des&="r:orrImunication">
<semantioo-syntaxique oode="C1" desL.="s’exprimer par un son, une parcle">
<sous-classe-syntaxique cod Cla" desL.="émettre un cr-i, humain cu animal"/>
<sous-dasse-syntaxique code="C1b" desL.="émettre un chant, humain"/>

 

< /semantico-syntaxique>

<semantioo-syntaxique code="C2" desL="diI'e/demander qc">
<sous-dasse-syntaxique cod ="C2a" des4.="dir-e que, dire qc a qn"/>
<sous-dasse-syntaxique code="C2b" des4.="dire que, dormer un or-d.r-e a qn"/>

 

< /semantico-syntaxique>
</gene;-ique>
< /c1asses>

FIGURE 1 — Codes du xLVF pour les CLASSES

mais pas qu’i1 représente mettre quelque chose quelque part, dans/sur un lieu, autour de quelque
chose. Certains champs ont aussi été restructurés comme les PHRASES, les CONSTRUCTIONS et les
DERIVATIONS o1‘11es informations ont été séparées. Il est dommage que Hadouche et Lapalme aient
uniquement intégré 1a description des codes au XML, car des traitements comme 1a dérivation
des adjectifs, des adverbes et des r1on1s auraient aussi pu étre intégrés a cette nouvelle version.

2.4 Le LVF pour l’étiquetage de réles sémantiques

Le LVF n’a pas été congu pour 1’étiquetage de roles sémantiques, mais i1 conﬁent néanmoins des
informations pertinentes pour cette tache. Les champs OPERATEUR, CONSTRUCTIONS et DOMAINE
donnent des informations sur la syntaxe, la sémantique et1’uti1isation des différentes entrées
associées ‘a un verbe. L’exp1oitation de ces informations devrait perrnettre 1’identiﬁcau'on du
sens utilisé et de projeter les arguments syntaxiques sur une représentation sémantique (i.e. : 1e
champ opérateur). Un systeme utilisant cette ressource serait différent de ceux existants, basés
essentiellement sur de1’apprentissage automatique appliqué ‘a de grand corpus annotés, car i1
utiliserait les contraintes syntaxiques et sémantiques déﬁnies manuellement par Jean Dubois
et Francoise Dubois-Charlier. Le champ PHRASE pourrait étre utilisé comme corpus d’exemp1es
perrnettant une premiere évaluation d’un systeme d’étiquetage de r61es sémantiques. Dans
un premier temps, nous allons déﬁnir notre objectif de restructuration de la ressource, puis
nous décrirons les différents traitements effectués pour 1’atteindre et nous terminerons sur une
évaluation de la ressource obtenue.

3 Objectif

Pour qu’un systéme puisse utiliser 1e xLVF pour faire de 1’étiquetage de roles sémantiques, i1 doit
étre capable d’en extraire les informations nécessaires. 11 est aussi important de pouvoir faire
le lien entre les différents types d’inforrnation de la ressource, ainsi qu’avec des informations
contenues dans d’autIes ressources (e.g. : Wolf, Disco, French TreeBank). I1 est donc nécessaire
de restructurer et d’uniforrniser un certain nombre d’inforrnations du xLVF. De plus, i1 serait
intéressant d’uti1iser les phrases d’exemp1e aﬁn de concevoir un corpus annoté, méme si celui-ci
n’est pas forcément représentatif. La ﬁgure 3 montre ce que l’on souhaite obtenir pour la premiere

159

<verbe mot="amasser" nb="3" id="amasser">
<entree>
<mot no="1">amasser 1</mot>
<domaine nom="objet">oB:I</domaine>
<c1asse generique="locatif" semantico-syntaxique="ncn-animé propre"
construction-syntaxique="b">L3b</c1asse>
<operateur>lc.qp qc+pl e amas</operateur>
<sens>accumuler</sens>
<phrases>
<phnlse>On <1exie-ref>a~</lexie-ref> des documents,des livres.</phrase>
<phrase>Les preuves s’<1exie-ref>a~</lexie-ref> centre P.</phrase>
</phrases>
<oonjugaisonau)d1iaire="avoir (sauf si pronominal cu entrée en etre)"
g1-oupe=" 1" sousng-A-oupe="chanter"> 1a2</conjugaison>
<oonstruction>
<scheme type="transitif direct" sujet="humain" objet="plu.t'iel chose"
circonstant="locatif (cu on est)">T181</scheme>
<scheme type="pronominal" sujet="plu.t-iel chose"
circonstant="locatif (cu on est)">P81</scheme>
</construction>
<derivation der-e="positif seul"
dersment="il n’y a pas de um en -ment mais il y a un déverbal">
-1- _D ____ __
</derivation>
<nom nb="3">3*</nom>
<1exique desL.="dictionnaire de base" nbmots="15
</entree>

 

>2 < /1exique>

< /it-ei-be>

FIGURE 2 — Entrée du xI.VF pour le verbe « amasser »

entrée du verbe « amasser ».

11 est nécessaire d’uniformiser la ressource pour deux raisons. Premierement pour qu’un systeme
utilisant la ressource ne traite pas différemment une information qui aurait deux représentations
distinctes, comme les abréviations lgt et lgts pour « longtemps » ou poissons et poisson+pl pour
représenter 1e pluriel de « poisson ». La seconde raison est de rendre 1a ressource plus interopérable
avec d’autres ressources. Pour identiﬁer les arguments d’un prédicat, les contraintes sémantiques
du xLVF peuvent étre exploitées, mais il est nécessaire d’uti1iser des ressources comme Wolf
(Sagot et Fiser, 2008) ou Disco (Kolb, 2009) pour associer un type sémantique aux arguments
(e.g. : humain, chose, ...). Ces ressources n’ayant pas connaissance des abréviations utilisées par
le xLVF, il est nécessaire de remplacer les abréviations et les mots tronqués par les lemmes les
représentant et de préférer la représentaﬁon du pluriel par 1’uti1isau'on de 1’attribut « +pl ».

L’étiquetage de réles sémantiques a pour but d’identiﬁer les arguments du prédicat et leur
associer des roles sémantiques. L’uti1isation de contraintes syntaxiques et sémantiques est une
des solutions envisageables pour réaliser cette tache. Pour cela, il est important d’avoir des
informations syntaxiques et sémantiques structurées et inter-connectées pour chaque sens de
chaque verbe. Ces informations doivent permettre de projeter la syntaxe sur la sémantique et
inversement. 11 est aussi important de bien séparer les informations syntaxiques et sémantiques,
aﬁn de permettre une meilleure cohérence de la ressource. Dans le xLVF, ces informations sont
mélangées, et le méme type d’information peut se retrouver ‘a différents endroits, ce qui peut
mener a des incohérences. Le champ OPERATEUR sera utilisé comme base pour la sémantique et le
champ CONSTRUCTEUR comme base pour la syntaxe.

Le cadre sémantique est déﬁni comme un prédicat auquel sont associés des arguments et des
contraintes sémantiques. Les contraintes sémantiques ont des identiﬁants permettant d’associer

160

ses arguments a ceux des cadres syntaxiques. Le prédicat a pour valeur un des différents prédicats
du champ OPERATEUR (e.g. : r.d : rendre/devenir tel). Les arguments sémantiques précisent
la sémantique du prédicat et ne peuvent pas étre réalisés syntaxiquement. Les contraintes
sémantiques permettront de définir le type des différents arguments du prédicat (e.g. : un
humain, une chose, un animal) qui pourront étre réalisés syntaxiquement.

Les cadres syntaxiques sont ceux utilisés par le champ CONSCRUCTIONS (i.e. : intransitif, transitif
indirect, transitif direct, pronominal). Les arguments sont déﬁnis par un type, un complément
selon le cas (e.g. : une préposition) ainsi que des liens vers les arguments sémantiques réalisés.
Un argument syntaxique peut réaliser plusieurs arguments sémantiques. Ainsi, dans la phrase
« Marie se maquille », on a une variation syntaxique pronominale réﬂéchie et Marie endosse les
roles d’agent et d’expérient.

Le corpus d’exemples sera composé de phrases simples mettant en avant les différentes facons
de réaliser les différents sens de chaque verbe. Ces phrases seront analysées en dépendances,
et posséderont des annotations permettant de savoir quel cadre syntaxique leur est associé et a
quels arguments sémantiques correspondent leurs arguments syntaxiques.

4 'I'ransformation

Nous allons maintenant décrire les différents traitements appliqués au xLVF pour atteindre notre
objectif. La production de cette nouvelle ressource est composée de sept étapes : l’uniformisation
du champ OPERATEUR, sa structuration, la récupération de données a partir de la version papier
du LVF, l’alignement des CONSTRUCTIONS, la liaison des champs OPERATEUR et CONSTRUCTIONS, la
réparﬁtion de l’information et enﬁn la construction du corpus d’exemples.

L’étape d’uniformisation du champ OPERATEUR permet de corriger les abréviations et les mots
tronqués. Un ensemble de mots suspects n’apparaissant pas dans les noms et adjectifs de
Morphalou (Romary et al., 2004) a été récupéré automatiquement (947 mots). Les occurrences
de chaque mot ont été examinées manuellement aﬁn d’iden11'ﬁer s’il s’agissait d’une abréviaﬁon,
d’un mot tronqué ou mal orthographié, ou encore d’un mot technique n’existant pas dans
Morphalou. Une déﬁnition ou une correction a ensuite été associée a chaque mot. Les différentes
orthographes d’un mot ont été homogénéisées dans la déﬁnition aﬁn qu’i1 y ait une représentation
unique par sens. La déﬁnition longtemps a ainsi été associée aux abréviations lgt et lgts. Les
mots ayant plusieurs orthographes (e.g. : acuponcture, acupuncture) ont été unifiés a l’aide
de Morphalou et du Wiktionnaire, pour que les verbes ayant des orthographes différentes aient
l‘a méme sémantique (e.g. : « acuponcturer » et « acupuncturer »). La gestion du pluriel a été
uniformisée en prenant le singulier des mots et en leur ajoutant l’attribut +pl. Le mot plantes est
ainsi devenu plante +pl.

La seconde étape consiste a traiter le champ OPERATEUR aﬁn d’obtenir une structure proche
de celle du cadre sémantique déﬁni précédemment. Pour cela, nous avons dﬁ identifier le
prédicat et ses arguments, déterminer pour chaque argument s’il représentait une contrainte
syntaxico-sémantique ou une spécification sémantique, et discemer la portée des disjonctions.
Nous avons choisi d’utiliser des méthodes d’analyse de surface car elles sont robuste et facilement
maintenable. Ces aspects sont importants, car le champ OPERATEUR comporte un grand nombre
de cas particuliers que nous avons dﬁ gérer au fur et a mesure de leur rencontre. Dans un premier

161

<CadreSemantique>
<Contrainte  desL="humain" />
<Predicat desL="etre cu mettre quelque part" />
<Co1m-ainte cidx-"1" p1urie1="True" desL.="chose" />
<Semantique sidx= " prep="en" des&="amas" />
<Co1m-ainte cidx= 2" desL="lccatif (all on est)" />
</Cad:-eSemantique>

<CadresSyntaxiques>
<Cad1-esyntaxique type="tI'ansitif direct">
<Arg-ument type="sujet">
<I..iensemantique cidx="" />
< /Arg'ument>
<Arg-ument type="cbjet">
<1.ienSemantique cidx=" 1" />
< /Arg'ument>
<Arg-ument type="circonstant">
<1.ienSemantique cidx="2 " />
< /Arg'ument>
</ Cad:-eSyntaxique>
<Cad1-esyntaxique type="pronom.inal">
<Arg-ument type="sujet">
<1.ienSemantique cidx=" 1" />
< /Arg'ument>
<Arg-ument type="circonstant">
<1.ienSemantique cidx="2 " />
< /Arg'ument>
</ Cad:-eSyntaxique>
</CadresSyntaxiques>

<Phrases>
<Ph1-use text="0n a~ des dccuments.">
<Dep dep="root" wid-' " ~" 1emma='
<Dep dep="suj" wi ' form: On" lemma:
<Dep dep="obj" w1 ocuments" lemm document" pos="N" cidx="1">
<Dep dep="det" w1 — ' form="des" 1emma="un" pos="D" />
</Dep>
<Dep dep="pcnct" wid="5" fom1="." 1emma="." pos="PONCT" />
</Dep>
</Phrase>
<Phn1se text="0n a~ des livres.">

    

~" pos="V" sr1="t sitif direct" >

 
   
 
 

  
 

   

   

 
  

/>
ivre" pos="N" cidx="1">
<Dep dep="det" w1 —

</Dep>
<Dep dep="ponct" wid="5" form="." 1emma="." p0s="PONCT" />
</Dep>
</Phrase>
<Ph1-use text="Les preuves s’ a~ centre P.">

form="a~" 1emma="a~" pos="V" sr1="pronom.inal">
reuves" lemm "preuve" pos="N" cidx= 1">
'1" form="Les" 1emma="le" pos="D" />

  
 

   

<Dep dep="det" w1
</Dep>
<Dep dep="aff" wi
<Dep dep="mcd" w1
<Dep dep="obj" w1
</Dep>
<Dep dep="ponct" wid="7" form="." 1emma="." pos="PONCT" />
</Dep>
</Phrase>
</Phrases>

 
  
 

..3.. fm,m=..s... 1emma=..il.. P0s=..cL.. />
' fom1="ccntre" 1emma="contre" pos="P" cidx="">
' form="Pierre" lemma="pierre" pos="N" />

FIGURE 3 — Objectif d’amé1ioration

162

1 f.ixe/PRD abs/AER V/13']? faire aller quelque chose d’abstra1't sur focaliser Pattenﬁon sur
2 abda/PRD chemin/MOT abs/AER A/PP qn/AER enlever chemin abstrait E1 quelqu’un couper la route du succés
3 ict/PRD  soi/AER abs/AER frapper ‘ soi abstrait se suicider

4 abda/PRD  abs/AER obtenir pour soi ‘ chose d’abstra1't acquérir de Pexpérience
5 loq/PRD AV/PP qn/AER D/PP //DIS SR/PP prix/ parler avec quelqu’un de prix, sur le prix m ‘ ’

6 dat/PRD A/PP qc/AER ,/DIS A/PP +inf/ATT contribuer

 

contrainte syntzxico-sémanﬁque argument sémamique d.1S_]0IlCtl0I1

TABLE 3 — Structuration du champ OPERATEUR

temps nous avons étiqueté les tokens pour abstraire les regles de l’analyse de surface. L’étiquette
utilisée par défaut représente un mot (MOT). Les autres étiquettes déﬁnissent les prédicats (PRD),
les prépositions (PP), les abréviations (ABR), les attributs (MT), et les différents symboles (e.g :
(),/-). L’étiquetage a été réalisé grace ‘a des lexiques déﬁnis manuellement et en fonction de
l’emplacement des tokens. I.’analyse de surface a ensuite été réalisée a partir d’un ensemble de
régles générales, basées sur les étiquettes, et d’un ensemble de régles spéciﬁques, basées sur les
mots. Les trois gros problémes de la structuration de ce champ furent le regroupement de tokens
pour former les arguments, la gestion de la portée des disjonctions, et le typage des arguments.
Des régles générales permettent de regrouper des suites de mots et des prépositions avec le
groupe ‘a leur droite. Il existe cependant des cas o1‘1 les abréviations et les mots peuvent étre
regroupés entre eux comme les exemples 2 et 3 de la table 3. La tache n’est pas triviale car le
regroupement de certains tokens est dépendant du contexte. L’abréviation abs peut étre reconnue
comme un argument canonique désignant un concept abstrait (e.g. : exemple 1, « une idée »),
o1‘1 étre associée a un autre token pour l’abstraire (e.g. : exemple 2, « le chemin du sucoés ». Son
association dépend de son emplacement, du prédicat de POPERATEUR, et du token auquel elle
peut se lier. Des régles spéciﬁques utilisant des lexiques ont été mises en oeuvre pour gérer ces
cas particuliers. Les exemples 5 et 6 montrent que les disjonctions peuvent avoir des portées plus
ou moins grandes. Le choix de la portée des arguments se fait en fonction des étiquettes des
groupes adjacents a la disjonction. Ia portée courte se fait en priorité sur les disjonctions ayant
des tokens adjacents avec les mémes étiquettes (e.g. : exemple 5). la portée longue se fait a la
ﬁn en prenant les groupes adjacent ‘a la disjonction (e.g. : exemple 6). Pour la derniére étape,
consistant a typer les arguments, nous avons utilisé la casse des préposition, les étiquettes des
tokens, ainsi que le prédicat et l’emplacement de l’argument par rapport ‘a celui-ci. La table 3
nous montre différents exemples d’identiﬁcation du type des arguments.

Un premier essai d’alignement des CONSTRUCTIONS nous a révélé que les informations contenues
dans le xLVF n’étaient pas sufﬁsantes. Il est nécessaire, entre autre, de savoir si le verbe est factitif
et de connaitre le type des constructions pronominales (i.e. : subjectif, réﬂéchi, réciproque, passif)
pour lever les ambigiiités existantes. Ces informations apparaissant dans la version papier du LVF,
nous avons entrepris de les extraire a partir d’une version PDF du LVF. Le PDF a tout d’abord été
converti en HTML3 pour avoir un format plus facilement analysable. Des expression régulieres
basées sur les balises HTML et sur différents mots-clés ont permis d’identiﬁer les données utiles.
Une analyse de surface a été effectuée pour donner du volume ‘a cette suite d’éléments aﬁn de
générer un ﬁchier XML (le xoLVF, voir ﬁgure 4) contenant les informations de la version papier du
LVF dans un format univoque et structuré. En plus de ces informations, la description complete
de la classiﬁcation des verbes a été récupérée, ajoutant deux nouveaux niveaux de classiﬁcation.

3. grace £1 pdftohtrnl

163

<DV'F>
<C1asseGenerique nom="C" nombre="239" des4="de communication">
<C1asseSemantique nom="C1" nombre="159" des&="exprimer par cri, parole, son">
<C1asse nom="C1a" nombre="232" desL="émettre un cri, humain cu animal">
<SousC1asse nom="1" des4.="émettre le cri spécifique de l’espéce animale">
<Const nom="A2" des4="intransitifs" int:-an="True">
<Ent1-ee nom="aboyer 1" oper="(canis)f.cri espéce"
sens="émettre aboiement" phrase=" Le chien a~ .
deriv="aboi , -">

</Const>- I I

</SousC1asse>
<SousC1asse nom="2" desL.="émettre une des diverses formes de parler cu
d’écrit spécifiques a l’humain">
<Const nom "A1 " des4="intransitifs" intran="True">...</Const>
<Const nom="P1 ' des4.="pronom.inaux" prono="subjectif">. . .</Const>

 

< /-S-o-usC1asse>
</-C-12-1sse>
</-C-1asseSemantique>
</-C:1asseGenerique>

</-Ll!-1=>
FIGURE 4 — Extrait du xoLVF, la version structurée de l’ouvrage LVF accessible sur notre wi.ki1

A l’aide des informations complémentaires extraites du LVF, l’alignement des CONSTRUCTIONS
associées a une entrée a pu étre effectué. Les contraintes syntaxico-sémantiques des constructions
ont été utilisées aﬁn d’identiﬁer les arguments compatibles. Un ensemble de contraintes limitant
les associations possibles entre les arguments des différentes constructions a été déﬁni. Une
premiere contrainte, gérant l’identité, permet d’associer des arguments ayant des codes identiques
(e.g. : sujet humain et objet humain). Une autre contrainte permet d’aligner un argument pluriel
avec deux arguments singuliers du méme type (e.g. : sujet humain pluriel). Les informations
extraites du LVF interdisent les associations entre certains emplacements (e.g. : le sujet d’un
transitif et le sujet d’un pronominal passif), empéchent l’alignement de certains emplacements
(e.g. : sujet des factitifs), et permettent de lier un élément ‘a plusieurs du méme type (e.g. :
pronominaux réciproques et réﬂéchis). D’autres contraintes plus spéciﬁques ont été rajoutées
aprés une analyse des premiers résultats, comme celle permettant de lier un argument de type
humain pluriel avec un argument de type humain et un argument prépositionnel en « ‘a ». Cet
ensemble de contraintes ne permettant pas de lever toutes les ambigiiités, l’alignement donne la
priorité aux premiers arguments. Ainsi, pour les CONSTRUCTIONS T1100 et A10 (« applaudir »), le
sujet de l’intransitif est lié au sujet du transitif (et pas a son objet direct).

La liaison des champs OPERATEUR et CONSTRUCTIONS peut étre accomplie maintenant qu’ils ont
été uniformisés et structurés. Pour cela, la redondance des informations contenue dans ces deux
champs est utilisée. Les arguments des différentes CONSTRUCTIONS sont liées aux arguments
de POPERATEUR en prenant soin de lier les arguments des CONSTRUCTIONS ayant été associés
précédemment, au méme argument de l’o1=ﬁRA'rEUR. L’opéra11'on est similaire a l’étape de liaison
des CONSTRUCTEURS, mais est plus complexe car l’o1=1éRATEUR a un vocabulaire plus varié. Comme
précédemment, des régles avec différentes priorités permettant de lier les éléments entre eux ont
été utilisées. Des régles basées sur les informations syntaxiques permettent de lier les contraintes
similaires, comme celles ayant des prépositions identiques. Des régles basées sur l’emp1acement

164

