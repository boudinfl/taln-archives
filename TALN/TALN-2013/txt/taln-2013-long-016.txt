TALN-RECITAL 2013, 17-21 Iuin, Les Sables d’Olonne

Traitements d’ellipses : deux approches par les grammaires
catégorielles abstraites

Pierre Bourreau-1 *
(1) SFB 991
Institut fur Sprache und Information
Université Heinrich-Heine, 40225 Diisseldorf

bourreau@hhu . de

RESUME
L’étude de phénoménes d’ellipses dans les modéles de l’interface syntaxe—sémantique pose
certains problémes du fait que le matériel linguistique effacé au niveau phonologique est
néanmoins présent au niveau sémantique. Tel est le cas d’une ellipse verbale ou d’une élision
du sujet, par exemple, phénoménes qui interviennent lorsque deux phrases reliées par une
conjonction partagent le méme verbe, ou le méme sujet. Nous proposons un traitement de
ces phénoménes dans le formalisme des grammaires catégorielles abstraites selon un patron
que nous intitulons extraction/instanciation et que nous implémentons de deux maniéres
différentes dans les ACGs.

ABSTRACT
'I‘reating ellipsis : two abstract categorial grammar perspectives

The treatment of ellipsis in models of the syntax—semantics interface is troublesome as
the linguistic material removed in the phonologic interpretation is still necessary in the
semantics. Examples are particular cases of coordination, especially the ones involving verbal
phrase ellipsis or subject elision. We show a way to use abstract categorial grammars so as to
implement a pattern we call extraction/ instantiation in order to deal with some of these
phenomena; we exhibit two different constructions of this principle into ACGs.

MOTS—CLI§1S : ellipse, coordination, interface syntaxe—sémantique, grammaires catégorielles
abstraites, grammaires d’arbres adjoints, grammaires IO d’arbres.

KEYWORDS: ellipsis, coordination, syntax—semantics interface, abstract categorial grammars,
tree-adjoining grammars, IO tree-grammars.

*. Ce travail a été financé par la DFG, dans le cadre du projet SFB 991 “Die Struktur Von Reprasentaﬁonen in
Sprache, Kognition und Wissenschaft”.

215 © ATALA

TALN-RECITAL 2013, 17-21 Iuin, Les Sables d’Olonne
1 Introduction

La description de la syntaxe du langage naturel par le biais de formalismes symboliques a
donné lieu a la création de nombreux modeles tels que les grammaires non-contextuelles,
comme premiere approximation, et plus récemment les grammaires catégorielles combina-
toires (CCGs pour combinatory categorial grammars) (Steedman, 1987) ou les grammaires
d’arbres adjoints (Joshi et al., 1975; Joshi, 1985) (TAGs pour tree—adjoining grammars).
Tous ces formalismes partagent la propriété de ne pas effacer, et de ne pas copier de ma-
tériel syntaxique ou phonologique : nous parlerons de propriété de linéarité. Cependant,
certains phénoménes syntaxiques usuels semblent nécessiter des mécanismes de copie et/ou
d’effacement :

(1) Marie mange une pizza, et Pierre 6 des pates.
(2) Jean fait un footing et 6 rattrape Marie.
(3) Jean prépare 6 et Marie vend des crépes.

Sur les exemples ci-dessus, des éléments phonologiques sont absents par économie de lan-
gage : le verbe “mange” en (1), et les syntagmes ‘iIean” en (2) et “des crépes” en (3). Tous
ces éléments sont néanmoins présents au niveau de l’arbre syntaxique (pour la correction
grammaticale) ou de la sémantique. Par ailleurs, ces trois exemples partagent la présence de
la conjonction de coordination “et” reliant deux phrases. Nous nous intéressons au traitement
de ces phénoménes d’ellipse sous la présence de marqueurs de coordination.

Plusieurs solutions a ce probléme ont été proposées aﬁn d’étendre les formalismes grammati-
caux cités ci—dessus. Ainsi, (Steedman, 1990) montre comment traiter de telles coordinations
dans les CCGs; ces idées ont ensuite été implémentées par (Sarkar et Joshi, 1996) dans les
TAGS, en étendant le formalisme initial aﬁn d’enrichir les arbres de dérivation par une notion
de partage de noeuds, idée ensuite reprise dans (Seddah, 2008; Seddah et al., 2010). Enﬁn,
(Kobele, 2007) propose l’utilisation de grammaires non-contextuelles d’arbres avec copie IO
(notées IO-CFTGs pour IO context—free tree grammars).

Nous proposons d’utiliser un formalisme plus expressif que les précédents, a savoir les
grammaires catégorielles abstraites (ACGs pour abstract categorial grammars) (de Groote,
2001; Muskens, 2001). Il est en effet possible d’encoder des grammaires de chaines ou des
grammaires d’arbres dans les ACGs. Qui plus est, la notion de dérivation y est également
relativement ﬂexible puisqu’il est possible de considérer non seulement des arbres mais aussi
des }L—termes comme structures de dérivation. En utilisant ces avantages, nous implémentons
le principe suivant : une phrase ou une ellipse intervient est d’abord partiellement construite,
en omettant le constituant commun, qui est rajouté lors de l’étape suivante. Ce principe peut
étre naturellement réalisé dans le }L—calcul par le biais de la substitution de termes. En suivant
ce principe, nous présentons deux méthodes, la premiere faisant intervenir la substitution au
niveau des structures de dérivation (ou tectogrammaire), la seconde au niveau de la syntaxe
(ou phénogrammaire). Nous discutons des avantages de chacune des deux méthodes, et
en particulier de l’existence d’algorithmes d’analyse s’exécutant en temps polynomial pour
chacune d’elles.

Le reste de cet article est structuré comme suit : en section 2, nous présentons les ACGs. En
section 3, les deux approches que nous proposons seront détaillées et discutées. Enﬁn, en
section 4, nous comparerons notre solution a celles existantes dans la littérature.

216 © ATALA

TALN-RECITAL 2013, 17-21 Iuin, Les Sables d’Olonne
4 Méthodes existantes

Une premiere possibilité de traitement de certains phénomenes d’ellipse consiste a reprendre
les idées de (Steedman, 1990) pour les grammaires catégorielles combinatoires, et a implémen—
ter ces idées dans les ACGs. Steedman suggére, en particulier, l’utilisation d’un combinateur
T de “type raising” aﬁn de traiter des phénomenes d’élision du sujet ou de l’objet; de plus, les
ellipses verbales nécessitent l’introduction d’un combinateur supplémentaire Bx qui permet de
rompre avec la directionnalité du calcul logique sous—jacent, et un opérateur de décomposition
de type, permettant d’extraire le verbe d’une phrase.

Dans le cadre des ACGs, l’opérateur Bx n’est pas nécessaires, puisque les types ne sont pas
dirigés. l’utilisation du combinateur T revient a modiﬁer les types assignés aux constantes
de la signature des structures de dérivation. Sur un exemple, nous pouvons décrire une
signature des dérivations faite des constantes c Jean,CMarie : (np —> s) —> s, cm“ : np —> s,
cmmape : np —> np —> s et cet : (np —> s) —> (np —> s) —> (np —> s). Cette signature permet
de dériver un terme cMm~e(}Ly”P.cJm,,(cetcwurt(c,mmpey))). Grace au morphisme 32;“, ci-
dessous, il est ensuite possible d’assoc1erlaforme sémantique souhaitée pour la phrase ‘fJean
court et rattrape Marie” :

np := e s := t
_ 320 = chm := }LP°"‘.PJ cMm~e := }LP“"‘.PM
Sam Crattrape := Axeye-Rxy Ccourt := A-xe'Cx

ce, := }LPf""P§"‘x“. A (P1x)(P2x)

Nous remar uerons néanmoins que, la signature des dérivations que nous décrivons ci—dessus
est d’ordre supérieur a 2. Par ailleurs, il ne semble pas souhaitable, dans le cas des ACGs, de
typer tous les syntagmes nominaux par un type (np —> s) —> s, ce qui revient a considérer
des ACGs d’ordre supérieur a 2 pour des cas trés simples, sans phénoménes d’ellipses. Enﬁn,
l’opérateur de décomposition est nécessaire dans le cas d’ellipses verbales pour les langues de
type SVO, car il permet d’extraire le verbe de la phrase en partie gauche de la conjonction.
Cet opérateur permet en fait d’effectuer le méme traitement que nous réalisons, c.a.d. de
construire des constituants incomplets puis de les composer avec le constituant commun.
Qui plus est, cet opérateur de décomposition semble poser un probléme du point de vue
calculatoire car il introduit deux nouvelles formules, ce qui Va a l’encontre de la propriété de
la sous—formule. Enﬁn, notons que les ACGs permettent l’implémentation du méme principe
de maniere plus élégante puisque, de par l’indépendance entre dérivations et ordre des mots,
nous n’avons pas eu besoin d’enrichir le formalisme initial de nouveaux opérateurs.

Des extensions des TAGs ont également été proposées, tout d’abord dans (Sarkar et Joshi,
1996) qui proposent une implémentation des idées de (Steedman, 1990) dans les grammaires
d’arbres adjoints, en y rajoutant une opération de conjonction. Par ailleurs, l’objectif des
auteurs est de construire des structures dérivées qui sont des arbres avec partage de noeud.
Qui plus est, ils rendent compte de ce partage de matériel syntaxique au niveau des dérivations,
les structures de dérivation étant également des arbres avec partage de noeuds. Ceci est dﬁ au
fait que les structures de dérivation dans les TAGs sont censés étre plus proches de la structure
prédicat/ argument de représentation sémantique d’une phrase. D’autres propositions sont
celles de (Seddah, 2008) ou (Seddah et al., 2010), qui considerent des grammaires de tuples
d’arbres et requiérent des opérations plus complexes; par exemple, le traitement d’ellipses
multiples se fait en ajoutant un nombre arbitraire d’arbres non—lexicalisés (appelés “ghost trees”

25 © ATALA

TALN-RECITAL 2013, 17-21 Iuin, Les Sables d’Olonne

par les auteurs). L’originalité de notre méthode, par rapport a celles—ci, est de pouvoir traiter
les phénomenes d’ellipses que nous avons étudiés sans modiﬁer le formalisme des grammaires
catégorielles abstraites. Par ailleurs, le modele de l’interface syntaxe sémantique dans les ACGs
permet de séparer explicitement les structures de dérivation, de la représentation sémantique.
Le partage d’inforrnation nécessaire au niveau des dérivations dans les TAGS, est donné au
niveau de la signature >356,“ dans notre cas.

Enﬁn, (Kobele, 2007) décrit plusieurs méthodes possibles dont les deux suivantes : la pre-
miere consiste a construire des contextes d’arbres, car du matériel syntaxique est absent aux
emplacements ou une ellipse a été réalisée ; l’information manquante doit alors étre retrouvée
dans l’arbre (dans le cas d’une ellipse verbale, dans le premier constituant dominé par une
conjonction de coordination). La deuxieme approche de (Kobele, 2007) consiste a utiliser
des grammaires non-contextuelles d’arbres avec copie 10.

Les deux approches que nous proposons semblent assez proches des propositions de Kobele,
a la différence que, plutot que de rechercher le matériel effacé dans l’arbre, nous mettons en
place un mécanisme permettant de le copier Par ailleurs, les ACGs de notre seconde approche
peuvent étre réduites a des grammaires IO-CFTGs. Bien que le patron de dérivation ne soit
pas le méme que celui utilisé par Kobele, il semblerait que nous ne puissions pas traiter plus
de phénomenes que dans son approche. En particulier, Kobele montre qu’une des limites de
l’approche par des IO-CFTGs est de ne pas pouvoir traiter des phénomenes tels que :
(5). ‘(John wants to climb Mt. Kilimanjaro and Mary to sail around the World, and While I
know that John will 61 and Mary won’t 62, Bill doesn’t 63”
John veut grimper le Kilimanjaro et Marie naviguer autour du monde, et alors que je sais
que John le fera et pas Marie, Bill ne le sait pas

D’apres cette construction, il serait nécessaire de garder l’ensemble des verbes utilisés dans le
constituant a gauche d’une conjonction aﬁn de pouvoir le réutiliser dans les constituants en
partie droite; qui plus est, ce nombre de verbes est potentiellement inﬁni, ce qui, dans notre
premiere approche nous amene a considérer un nombre de constantes inﬁnies cgt, n E N;
dans notre seconde approche, il nous faudrait considérer un nombre de types inﬁni dans
la signature des dérivations. Ces cas d’ellipses mettent en avant la limite des traitements
proposées. Par ailleurs, ce type d’ellipses parait maladroit en Francais, ou les pronoms sont
utilisés aﬁn de se référer a un syntagme précédemment utilisé. Une solution a envisager est
donc d’adapter des techniques de résolution d’anaphores, a partir de continuations dans le
}L—calcul, par exemple (de Groote, 2006), aﬁn de résoudre les phénomenes d’ellipse.

5 Conclusion

Les phénomenes d’ellipses sont fréquents dans le langage naturel et sont des exemples de
phénomenes non—linéaires au niveau de l’interface syntaxe—sémantique. Nous avons proposé
deux approches pour le traitement d’ellipses sous coordination dans les ACGs, en utilisant le
principe d’extraction pour la construction d’une phrase incomplete, suivi d’un mécanisme
d’instanciation, modélisé par la substitution dans le }L—calcul. Dans la premiere approche,
ce principe est directement codé au niveau des termes des structures de dérivation; de
maniere élégante, nous pouvons alors traiter de nombreux cas d’ellipses, mais la signature
des dérivations étant d’ordre supérieur a 2, le probleme de l’analyse est, au meilleur des

26 © ATALA

TALN-RECITAL 2013, 17-21 Iuin, Les Sables d’Olonne

cas, NP-complet. Dans la deuxiéme approche, nous conservons une ACG d’ordre 2, mais les
mécanismes d’extraction sont encodés au niveau des types utilisés dans la signature. Ceci nous
améne alors a considérer un ensemble de types tres grand, mais nous perrnet de réutiliser
des algorithmes d’analyse connus pour s’exécuter en temps polynomial.

Les deux approches ainsi proposées ne nécessitent pas d’étendre le formalisme des ACGs,
contrairement aux solutions proposées dans la littérature, pour les TAGs ou les CCGs. Néan-
moins, les modélisations que nous proposons ne prétendent pas résoudre des phénoménes
d’ellipses complexes, tels que les ellipses de verbes prenant différentes catégories en argument
(dans ‘fJean est un républicain, et ﬁer de l’étre”), ou encore celles faisant intervenir un zeugma
(dans “Napoléon a pris du poids et beaucoup de pays”, discuté dans (Seddah, 2008)). Dans ce
dernier cas, une piste est de tenter de distinguer deux signatures des dérivations Z}DER,V_EXpR
et Z}DER,V_5TR controlant les dérivations de l’arbre syntaxique, la premiere s’assurant de la
construction d’expressions ﬁgées.

Par ailleurs, les modéles que nous proposons reposent essentiellement sur la présence d’une
coordination dominant l’occurrence du syntagme effacé, et ne saurait résoudre des cas
d’ellipses ou ce principe n’est pas vériﬁé. Enﬁn, et comme discuté dans (Kobele, 2007), les
deux approches semblent trop limités aﬁn de résoudre certains cas d’ellipses faisant intervenir
de multiples verbes, et des méthodes de résolution d’anaphores pourrait se montrer plus
efﬁcaces.

Finalement, cette étude demande a étre approfondie aﬁn d’étudier plus en détails le lien entre
les deux propositions présentées. En particulier, il serait intéressant de savoir quand, et a quel
coﬁt, il est possible de diminuer l’ordre d’une ACG tout en préservant le langage généré.

Remerciements : Je remercie les rapporteurs anonyrnes qui ont grandement aidé a l’amélio—
ration de ce travail. Je tiens également a remercier Laura Kallmeyer et Timm Lichte pour les
discussions qui m’ont amenées a m’intéresser a ce probléme.

Références

BOURREAU, P. (2011). Jeux de typage et analyse de }L—grammaires non—contextuelles. These de
doctorat, Laboratoire Bordelais d’Informatique.

BOURREAU, P. et SALVATI, S. (2011). A Datalog recognizer for almost affine }L—CFGs. In
(Kanazawa et al., 2011), pages 21-38.

de GROOTE, P. (2001). Towards abstract categorial grammars. In Association for Computatio-
nal Linguistics, 39th Annual Meeting and 10th Conference of the European Chapter, Proceedings
of the Conference, pages 148-155.

de GROOTE, P. (2002). Tree-adjoining grammar as abstract categorial grammar. In TAG+6,
Proceedings of the sixth International Workshop on Tree Adjoining Grammars and Related
Frameworks, pages 145-150. Universita di Venezia.

de GROOTE, P. (2006). Towards a montagovian account of dynamics. In Proceedings of
Semantics and Linguistic Theory XVI.

de GROOTE, P. et POGODALLA, S. (2004). On the expressive power of abstract categorial
grammars : Representing context—free formalisms. Journal of Logic, Language and Information,
13(4):421-438.

227 © ATALA

TALN-RECITAL 2013, 17-21 Iuin, Les Sables d'Olonne

HINDLEY, R. J. (1997). Basic Simple Type Theory. Cambridge Press University.

JOSHI, A. K. (1985). Tree-adjoining grammars : How much context-sensitivity is required
to provide reasonable strucutral descriptions ? Natural Language Parsing : Psychological,
Computational and Theoretical Perspectives, pages 206-250.

JOSHI, A. K., LEVY, L. S. et TAKAHASHI, M. (1975). Tree adjunct grammars. Journal of
Comput. Syst. Sci., 10(1):136—163.

KANAZAWA, M. (2007). Parsing and generation as Datalog queries. In Proceedings of the
45th Annual Meeting of the Association for Computational Linguistics, pages 176-183, Prague.
Association for Computational Linguistics.

KANAZAWA, M., KORNAI, A., KRACHT, M. et SEKI, H., éditeurs (2011). The Mathematics of
Language — 12th Biennal Conference, MOL 12, Nara, Japan, September 2011. Proceedings,
volume 6878 de Lecture Notes in Artiﬁcial Intelligence. Springer.

KANAZAWA, M. et YOSHINAKA, R. (2005a). The complexity and generative capacity of
lexicalised abstract categorial grammars. In (Kanazawa et al., 2011), pages 330-346.

KANAZAWA, M. et YOSHINAKA, R. (2005b). Lexicalization of second—order ACGs. Rapport
technique NII-2005—012E, NII, National Institute of Informatics, Tokyo.

KOBELE, G. M. (2007). Parsing ellipsis. Unpublished Manuscript.

LICHTE, T. et KALLMEYER, L. (2010). Gapping through TAG derivations. In Procedings of the
10th International Workshop on T ree—Adjoining Grammar and Related Formalisms.

MUSKENS, R. (2001). Lambda Grammars and the Syntax—Semantics Interface. In van RooY,
R. et STOKHOF, M., éditeurs : Proceedings of the Thirteenth Amsterdam Colloquium, pages
150-155, Amsterdam.

POGODALLA, S. (2004). Computing semantic representation : Towards ACG abstract terms
as derivation trees. In Proceedings of the Seventh International Workshop on Tree Adjoining
Grammar and Related Formalisms (TAG+7), pages 64-71.

POGODALLA, S. (2007). Generalizing a proof—theoretic account of scope ambiguity. In
proceedings of IWCS—7 .

SARKAR, A. et JOSHI, A. (1996). Coordination in tree adjoining grammars : formalization
and implementation. In Proceedings of the 16th conference on Computational linguistics —
Volume 2, COLING ’96, pages 610-615, Stroudsburg, PA, USA. Association for Computational
Linguistics.

SEDDAH, D. (2008). The use of MCTAG to process elliptic coordination. In Proceedings of the
Ninth International Workshop on Tree Adjoining Grammars and Related Formalisms, TAG+9.
SEDDAH, D., SAGOT, B. et DANLOS, L. (2010). Control verb, argument cluster coordination
and multi component TAG. In Proceedings of the 10th International Conference on Tree
Adjoining Grammars and Related Formalisms, TAG+10.

STEEDMAN, M. (1987). Combinatory grammars and parasitic gaps. Natural Language &
Linguistic Theory, 5:403-439.

STEEDMAN, M. (1990). Gapping as constituent coordination. Linguistics and Philosophy,
13:207-264.

YOSHINAKA, R. (2006). Linearization of afﬁne abstract categorial grammars. In Proceedings
of the 1 1th Conference on Formal Grammar, pages 185-199, Malaga, Spain.

228 © ATALA

TALN-RECITAL 2013, 17-21 Iuin, Les Sables d’Olonne
2 Grammaires Catégorielles Abstraites

Les grammaires catégorielles abstraites peuvent étre vues comme des grammaires de A-
termes simplement typés. Etant donné un ensemble de types atomiques .2¢, nous déﬁnissons
l’ensemble 9192? ) des types simples sur 42¢ par

9(J2¢)===~27|(9(~e7)—>9(~e7))

Nous adopterons la notation usuelle permettant d’omettre certaines parentheses : un type
((11 —> (a2 —> 013)) sera noté a1 —> a2 —> a3.

Une signature d’ordre supérieur est un tuple Z} = (42%, C, T) ou :

— .21 est un ensemble ﬁni de types atomiques.

— C est un ensemble ﬁni de constantes.

— T est une fonction d’assignation de types de G dans 9‘(.2¢).

Aﬁn de construire des termes sur une telle signature, nous nous donnons un ensemble de
variables typées : la notation x“ désignera une variable x de type a. Etant donnés une
signature 2} = (.2¢,C, T) et un type a E 9'(.2¢), l’ensemble Aa(Z}) des }L—termes de type a
dans 2} se déﬁnit par induction :

1. une Variable x“ appartient a Aa(Z}).

2. une constante c de G appartient a Aa(Z1) si *r(c) = a.

3. si M est un terme de Aa2(Z1) et si a = a1 —> a2, alors }Lx“1.M est un terme de Aa(Z}).
4. si M1 appartient a A,3(Z}) et M2 a A,3_,a(Z}), alors (M1M2) appartient a Aa(Z1).

L’ensemble des termes simplement typés de 21 est donné par M2) = (Aa(Z}))ae9(1,,). Nous
adopterons la convention usuelle suivante : un terme (. . . ((M1M2)M3) . ..M,1) sera écrit
M1 M2M3 . . .M,1. De plus, nous omettrons d’écrire les types des variables lorsqu’ils ne sont pas
indispensables a la compréhension. Nous supposerons que les notions de variables libres et de
[5-réduction sont connues; nous noterons FV(M) l’ensemble des variables libres d’un terme
M ; M1 —>’Ig M2 la [5—réduction d’un terme M1 en M2 en un nombre arbitraire de [3’—contractions,
et |M |,3 la forme [3’—normale d’un terme simplement typé. Pour plus de détails sur le }L—calcul
simplement typé, le lecteur peut se référer a (Hindley, 1997).

L’ensemble Lina()3) des termes linéaires de type a dans 21 est déﬁni par induction sur les
régles 1. et 2. ci—dessus (en remplacant Aa(Z}) par Lina()3)) et :
3’. si M est un terme de Lina2()3), si a = a1 —> a2 et si x“1 E FV(M), alors }Lx“1.M est un
terme de Lina()3).
4’. si M1 appartient a Liﬂlg (2), M2 a Lin,3_,a(Z1) et que FV(M1)nFV(M2) = 0, alors (M1M2)
appartient a Lina()3).
L’ensemble Qﬂlﬂ 01(2) des termes quasi—afﬁnes de type a dans 21 est construit par induction
sur les régles 1., 2., 3. et la régle suivante :
4”. si M1 appartient a Qﬂlﬂﬁ (2), M2 a Qﬂlﬂ I3_, 01(2) et que pour toute variable x’3 E FV(M1)n
FV(M2), [5 6 32¢, alors (M1M2) appartient a Qﬂlﬂa(Z}).
L’ordre ord(a) d’un type a se déﬁnit par induction sur a : si (1 E .2! alors ord(a) = 1 ; sinon,
a = a1 —> a2 et ord(a) = max(ord(a1) + 1, ord(a2)). Par extension, l’ordre d’une signature
)3 = (.21, C, T) se déﬁnit comme : ord(Z]) = maxceC(ord(*r(c))).
217 © ATALA

TALN-RECITAL 2013, 17-21 Iuin, Les Sables d’Olonne

Remarquons qu’il est possible de voir une signature d’arbre comme une signature d’ordre
2 : dans une telle signature, tout terrne M de type atomique et tel que FV(M) = 0 peut
effectivement étre interprété comme un arbre. Par exemple, l’arbre f (a, b, g(c)) peut étre
représenté par le terme f °"°"°"°a° b° (g°"°c°), ou o est un type atomique. De plus, si toutes
les constantes d’une signature d’ordre 2 sont de type 0 —> 0 (oil 0 est un type atomique), les
terrnes de la signature peuvent étre interprétés comme des chaines : la chaine ‘Sean mange
une pomme” est ainsi représentée par le terme }Lx°.Jean(mange(une(pomme x))).

Etant données deux signatures 211 = (#1, C1, T1) et 22 = (.212, C2, T2), un morphisme 3?," de
21 vers 22 est déﬁni a partir d’un couple de fonctions [32"1;%’2] vériﬁant :
— étant donné un type a E 9' (.111) :

— %’(a) = %’2(a) E 9(.2¢2) si (1 appartient a .211.

— %’(a) = %‘’(a1) —> 32"(a2) si (1 = a1 —> a2.
— étant donné un terme M de A(Z}1) :

— si M = x“, %‘’(M) = x”(“);

— si M = c 6 C1 et *r1(c) = a, %’(M) E A”(a)(Z]2);

— si M = }Lx“.N, %’(M) = }L%’(x“).%’(N).

— si M = M1M2, alors %’(M) = 32"(M1)%’(M2).
Finalement, une ACG G est déﬁnie comme un tuple (Z11, Z12,%’,s) ou 211 et 22 sont deux
signatures d’ordre supérieur (appelées respectivement signature abstraite et objet de G), 32'’
est un morphisme de 211 vers 22, et s est un type atomique de 211. Une telle grammaire déﬁnit
deux langages : un langage abstrait A(G) = {M E Lins()31) | FV(M) = 0} ; un langage objet
O(G) = {M E A(Z}2) I EIN EA(G), |%’(N)|,3 = M}. De maniére informelle, le langage abstrait
correspond a l’ensemble des dérivations du langage O(G) généré par la grammaire.

Une ACG G est d’ordre n E N si la signature abstraite de G est d’ordre n (nous écrirons que
G est une n—ACG) ; de plus, une n—ACG est dite linéaire (resp. quasi—afﬁne) si pour toute
constante c de la signature abstraite de G, %‘’(c) est un terme linéaire (resp. quasi—afﬁne).

 

FIGURE 1 — Exemple de modélisation de l’interface syntaxe-sémantique par des ACGs

Grace au pouvoir expressif du }L—calcul, (de Groote, 2002) et (de Groote et Pogodalla, 2004)
ont montré qu’il est possible d’encoder de nombreux formalismes grammaticaux, dont les TAGS,
comme des 2-ACG linéaires. Par ailleurs, lorsqu’on adopte l’hypothése de compositionnalité,
il est possible de représenter l’interface syntaxe—sémantique par l’intermédiaire de deux
ACGs G1 = (Z1DERIV,Z15YN,,%’5YN,s) et G2 = (ZIDERIV, Z15EM,3i‘gEM,s) (voire (de Groote, 2001;
Pogodalla, 2004, 2007) pour plus de détails). Un des avantages de ce modele est donc de
représenter syntaxique et sémantique en paralléle, tout en traitant certains problémes a des
niveaux différents (par exemple, l’ordonnancement des mots peut étre traité au niveau de la
syntaxe, voire de la réalisation de surface, et non pas au niveau des dérivations). De plus, il
est facile d’isoler les différentes représentations d’une phrase, tel que montré sur la ﬁgure 1.

218 © ATALA

TALN-RECITAL 2013, 17-21 Iuin, Les Sables d’Olonne
3 Extraction et instanciation

Comme énoncé en introduction, nous souhaitons séparer la construction de phrases avec
ellipses en deux étapes : la premiere consiste a construire une représentation incomplete;
la seconde a instancier cette representation a l’aide de l’élément partagé. Au niveau de
la représentation de surface seule une de ces occurrences sera réalisée. Ainsi, pour la
phrase “Jean mange une pizza et Pierre, des pétes”, nous pouvons considérer que nous
avons deux constituants incomplets, “Jean 6 une pizza” et “Pierre 6 des pétes” qui sont re-
liés par la conjonction “et”. Le verbe “mange” est ensuite rajouté a chacun de ces deux
constituants, bien que non—réalisé phonétiquement pour le second. Le fait de garder une
copie du constituant commun est nécessaire dans les ACGs puisque les dérivations des re-
présentations syntaxiques et sémantiques sont symétriques, et qu’une copie de la forme
sémantique du constituant commun est nécessaire, comme illustré dans la formule logique
(E|x.Pizza(x) A Mange(x, Jean) A (El y.PlatPates( y) A Mange( y, Pierre)) représentant la sé-
mantique de la phrase ci—dessus. La modélisation du principe extraction/instanciation est
réalisée de maniére relativement naturel dans le }L—calcul simplement typé. En effet, un objet
incomplet peut étre représenté par un terme de la forme }Lx.M, ou x est une variable dont les
occurrences libres dans M représentent des emplacements vides de l’objet M. L’instanciation
de ces emplacements par un objet N est ensuite simplement réalisée par application dans le
A-calcul et le terme (}Lx.M)N est donc l’objet M ou les occurrences (libres) de x (dans M)
sont substitués par N.

3.1 Enrichir les structures dérivationelles

Dans ce premier modéle, nous montrons comment la construction de constituants incomplets
peut se réaliser au niveau de la signature des dérivations. Cette approche nous améne a écrire
des ACGs dont l’ordre est supérieur a 2; en effet, a une phrase a laquelle il manque un verbe
transitif sera associée une dérivation de la forme }Lx.M, de type (np —> np —> s) —> s ; la
conjonction de deux phrases incompletes implique de prendre deux termes de ce type en
argument, et donc de manipuler des constantes d’ordre 4.

En guise d’exemple, nous considérons la grammaire suivante GSURF = (ZIDERIV, ZISURF, 3i"5URF,s),
aﬁn d’illustrer la modélisation d’ellipses verbales :

[°Q¢DERIV = {TlP,$}
_ ZDERIV = CJean2 CLuc2 CPierre2 CMohamed : np Caime : np —’ np _’ 5
cet_TVel:a—>a—>a (o1‘1a=(np—>np—>s)—>s)

— ZSURF = {JJSURF = {0} Jean, Luc, Pierre, Mohamed, aime, et: 0 —> 0

np,s := 0' —> 0 (noté 02)
cm“ := }Lx".Jeanx cm := }Lx".Lucx
— ,%gURF = cMo,mmed := }Lx".Mohamedx Cpien-6 := }Lx".Pierrex
cam := }LP"2Q"2x".Q(aime(Px))
Cet—TVel := APﬁ*°”Qﬁ*°”Rﬁx°.PR(et(Q(As;’”sg”y°.s2(s1y))x))

(ou [5 désigne le type 02 —> 02 —> 02)
219 © ATALA

TALN-RECITAL 2013, 17-21 Iuin, Les Sables d’Olonne

Le terme MDERIV = Cet—TVel(APnP—mp—)$-PCLucCJean)(APnp—mP—)$-PCMohamedCPierre)Caime appar'
tient a A‘(Z1DERIV). De plus, il est possible de vériﬁer que %’5URF(MDERIV) se [3’—réduit en
Ax.Jean(aime(Luc(et(Pierre(Mohamedx))))). L’ACG ainsi obtenue est une 4-ACG linéaire.
Cette construction peut s’étendre a d’autres types d’ellipses, tels que les ellipses du sujet ou
de l’objet : il sufﬁt alors de rajouter des constantes ce,_5e, et ce,_Oe, de type (np —> s) —> (np —>

s) —> np —> s dans ZIDERIV. Comme alternative, nous pouvons envisager la généralisation de
cette constante a un type X —>X —>X tel que proposer dans (Steedman, 1990).

Aﬁn de construire la représentation sémantique de cet exemple, il nous sufﬁt de créer une
seconde ACG GSEM = (ZIDERIV, ZISEM, 32‘gEM,s) comme suit :

"q{SEM={e3t}
—Z}5EM= J,L,P,M:e A:e—>e—>t

/\ 2 t —> t —> t

np:=(e—>t)—>t(notéy) s:=t

cm“ := }LPe"‘.PJ cm := }LPe"‘.PL
— 32‘gEM = cM,,,md := }LPe"’.PM cm", := }LP“"’.PP

cam := }LP(“"‘)"‘Q(e"‘)"‘.P(}Lx“.Q(}Lye.Ax y)

c,,_TV,, := }LP1(Y_’Y_’t)_’tP§Y_’Y_’t)_’tRT"Y"‘. A (P1R)(P2R)
Cette constr ction nous permet d’obtenir une 4-ACG (ZIDERIV, ZISEM, %’5EM,s). Nous remarque—
rons, néanmoins, que cette derniére n’est ni linéaire, ni quasi—afﬁne : en effet, la variable R a
deux occurrences libres dans un sous-terme de ,%gEM(c,,_T.,,,).

Commentaires :

Les deux ACGs ainsi construites sont donc des n—ACGs ou n > 2; ceci souléve un des inconvé—
nients de cette méthode, puisque nous savons que, dans ce cas, le probléme de l’appartenance
est un probléme NP-complet (Kanazawa et Yoshinaka, 2005a), lorsque l’ACG est linéaire.

Du point de vue de la modélisation linguistique, notons qu’il est possible de traiter des
cas d’ellipses multiples d’un méme constituant sans modiﬁer notre modele. Ainsi, aﬁn de
ouvoir dériver la hrase : ‘fJean aime Luc, Pierre, Mohamed et Paul, Valérie.”, nous rajoutons
P P
la constante c,TV_e, de type a —> a —> (1 (oil a = (np —> np —> s) —> s) a ZIDERIV et telle
que ,%:,.URF(c,,,_,,) = }LP’3""2Q’3""2R’3x".PR(,(Q(}LS§’2S§’2 y".S2(S1 y))x)) (en considérant
les notations de types ci—dessus). Il est intéressant de remarquer que nous obtenons alors
deux termes M1 et M2 dans A5(Z}DERIV) tels que |32‘gURF(M1)|,3 et |3i‘gURF(M2)|,3 sont égaux a
Ax.Jean(aime(Luc(,(Pierre(Mohamed(et(Paul(Valériex)))))))). Ces deux termes sont :

1- M1 = C,TV—el(AP-PCLucCJeanXAQ-Cet—TWel(AR-RCMohamedCPierre)(AR-RCValerieCPaul)Q)Caime Cor"
respondant a la dérivation de la phrase pour le parenthésage “[Jean aime Luc, [Pierre,
Mohamed et Paul, Valérie]]”;

2- M2 = Cet—TVel(AQ'C,TV—el(ARPCLucCJean)(ARPCMohamedCPierre)Q)(AR-RCValerieCPaul)Caime Cor"
respondant a la dérivation de notre exemple pour le parenthésage “[[Jean aime Luc,

Pierre, Mohamed] et Paul, Valérie]”;

Par ailleurs, remarquons que le verbe n’est réalisé au niveau de la surface que dans le premier
constituant gauche dominé par la coordination; dans le second cas, il est remonté jusqu’au
constituant correct de maniére transitive. La grammaire reste alors une 4-ACG linéaire.

220 © ATALA

TALN-RECITAL 2013, 17-21 Iuin, Les Sables d’Olonne

Cette construction peut s’étendre a l’analyse de phénomenes d’ellipses enchassées comme
dans la phrase suivante en Anglais :

(4) After seeing John running a marathon, Paul planned to e1, but Mary didn’t e2.

Aprés avoir vu John courir un marathon, Paul a prévu de le faire, mais pas Marie.

En simpliﬁant quelque peu la dérivation syntaxique, cette phrase est traitée dans notre
modéle par l’intermédiaire d’un terme cafte,M1(}LRc,,utM{M£(cPla,med_toP))cmn ; le morphisme
est ensuite construit en suivant l’exemple précédent.

Il est important de remarquer la similitude entre cette construction et certains travaux
antérieurs sur les ACGs. En effet, cette méthode repose sur le fait de retarder la concaténation
de chaines, de la méme maniére que (Pogodalla, 2007) utilise des ACGs d’ordre supérieur au
niveau des dérivations aﬁn de retarder l’ajout de matériel linguistique, perrnettant ainsi de
modéliser les différentes portées des quantificateurs dans la représentation sémantique.

Remarquons enﬁn, que nous avons modélisé la réalisation de surface sans décrire la réalisation
de l’arbre syntaxique; cette construction ne nous apporte effectivement aucune information
supplémentaire sur l’analyse de cette premiere modélisation.

Par ces divers exemples, nous montrons qu’il est possible de modéliser divers phénomenes
d’ellipses de maniere simple et élégante dans les ACGs, sans modiﬁer le forrnalisme. Notre
construction repose uniquement sur le fait de considérer des termes d’ordre supérieur au ni-
veau des dérivations. Néanmoins, l’inconvénient d’une telle construction est que le traitement
de ces phénomenes ne peut plus étre réalisé en temps polynomial. Nous montrons a présent
qu’une solution possible a ce probléme consiste a considérer des ACGs d’ordre 2, et a enrichir
le typage de la signature des dérivations, plutot que la structure des termes.

3.2 Enrichir les types des dérivations

Dans cette seconde approche, nous construisons des modéles de représentation de la structure
de surface a partir des structures de dérivation de maniere indirecte, par l’intermédiaire des
structures syntaxiques arborescentes. Ceci nous permettra, en particulier, de mettre en avant
la complexité des morphismes utilisés, cette propriété ayant un impact sur la complexité de
l’analyse dans les ACGs 1.

Pour ce faire, nous introduisons un opérateur DEL d’effacement au niveau des arbres syn-
taxiques, a la maniére de (Kobele, 2007) ou de l’opérateur de “deanchoring” sur les structures
de dérivation dans (Lichte et Kallmeyer, 2010). Dans notre cas, un sous—arbre dominé par cet
opérateur sera interprété comme la chaine vide e au niveau de la représentation de surface.
Cet opérateur n’est donc pas indispensable a notre modéle, mais nous permet néanmoins de
faire apparaitre l’élément effacé dans l’arbre syntaxique.

Nous donnons un exemple d’un tel arbre en Figure 2, dérivé par la grammaire GSURF =
(Z}5m,2SURF,3i"5URF,o) déﬁnie par :

1. Nous aurions pu procéder de la méme maniére ‘a l’étape précédente, mais les ACGs étant alors d’ordre 3,
l’analyse n’est, a priori, déja plus réalisable en temps polynomial

221 © ATALA

TALN-RECITAL 2013, 17-21 Iuin, Les Sables d’Olonne

21:

S Coo S
/ \ I / \
NP VP ET NP VP
I / \ I / \
JEAN TV NP PIERRE DEL NP
I / \ I / \
MANGE Det N TV Det N
I I I I I
UNE PIZZA MANGE DES RATES

FIGURE 2 — Arbre dérivé pour la phrase “Jean mange une pizza et Pierre, des pcites.”

[WSW = {0}
— ZISYN = Sconj : o —> o —> o —> o NP1,N,Det,Coord,TV,DEL: o —> o
S,NP2, VP : o —> o —> o JEAN, MANGE, PIERRE, UNE, DES, PIZZA, PATES, ET : o

— ZSURF = ‘{.2¢5URF = {0} Jean, mange, une, des, pizza, pates,et: 0' —> 0

o := 0 —> 0

Scan, := }LP1"""’Pf""’P3f""’x".P1(P2(P3x))

S,NP2, VP := }LP1"""Pf""x".P1(P2x)

— .%gURF = N,NP1,Det,Coord,TV := }LP"""x".Px DEL: }LP"""x".x
JEAN := }Lx".Jeanx, PIERRE := }Lx".Pierrex MANGE := }Lx".mangex
UNE := )Lx".unex, DES := }Lx".desx PIZZA := )Lx".pizzax
PATES := }Lx".patesx ET := }Lx".etx

Nous remarquerons que l’opérateur DEL réalise l’effacement au niveau de la chaine de carac—
teres ; en effet, l’image de ce terme par le morphisme mu” est un terme quasi—afﬁne, effacant
sur son premier argument. Ainsi, pour tout terme M, nous avons .%’wRF(DELM)—>’Ig}Lx.x.
Nous pouvons alors vériﬁer que le terme MSYN correspondant a l’arbre de la ﬁgure 2 véri-
ﬁe mu” (M5YN)—>’Ig Ax.Jean(mange(une(pizza(et(Pierre(des(patesx))))))) 2. Par ailleurs,
l’ACG ainsi présentée n’est pas lexicalisée : l’image de certaines constantes de ZISYN par .%gURF
ne contient pas de constantes. Néanmoins, nous savons qu’il est possible de construire une
2-ACG lexicalisée générant le méme langage (Kanazawa et Yoshinaka, 2005b).

Nous décrivons a présent, une seconde implémentation du principe d’extraction/instanciation,
en créant de nouveaux types dans la signature des dérivations : le fait qu’un constituant
d’une certaine catégorie syntaxique soit incomplet pour une autre catégorie syntaxique sera
effectivement dénoté par un type distinct.

En reprenant l’exemple de la ﬁgure 2, nous souhaitons donc pouvoir dériver un terme de
la forme )Lx°.M1 et un terme }Lx°.M2 représentant chacun les contextes d’arbre pour ‘Jean
x une pizza” et pour “Pierre x des pates”, sachant que pour ce derr1ier, l’occurrence de x
est dominée par une occurrence de l’opérateur DEL. Nous créons donc un type (noté swel)
pour désigner les contextes d’arbre sur un verbe transitif, au niveau des dérivations. De plus,

2. Il est possible de lexicaliser .9?jgURF(DEL), en }LPx., x par exemple, de maniere ‘a faire apparaitre le signe de
ponctuation “,”.

222 © ATALA

TALN-RECITAL 2013, 17-21 Iuin, Les Sables d’Olonne

%’5yN(sTVe,) = o —> o, afin de rendre compte du fait que la dérivation d’un terme de type sm,
est un contexte d’arbre, tel que nous le codons dans le }L—calcul.

Une constante cat est ensuite nécessaire a ZIDERIV aﬁn de réaliser l’étape d’instanciation, mais
cette fois au niveau des termes des arbres syntaxiques; il sufﬁt donc de typer cette constante
par sm, —> sm, —> tv —> s, un type d’ordre 2. On notera que pour ce faire, nous modiﬁons le
type associé aux verbes transitifs de np —> np —> s en tv. Intuitivement, ceci revient a associer
a un verbe le plus grand sous—arbre dont l’unique racine est la réalisation phonologique
associée au verbe.

Aﬁn d’illustrer notre proposition, nous donnons la grammaire GSYN = (ZIDERIV, Z15-YN, 3%"5YN,s)
déﬁnie ci—dessous. Aﬁn de mieux dissocier les deux étapes de notre méthode, nous isolons
l’étape d’instanciation par l’intermédiaire d’une constante distincte, CSUB, le type de la variable
cat s’en trouvant alors modiﬁé :

°Q{DERIV = {s2sTVel: VPTI/els "2 "P: V}

Cet 3511/el —’ sTVel "5TVel CSUB 35Tvel " W " 5
_ ZDERIV = C1 3 "P —’ VPrve1—’ Srvel C2 3 "P —’ VPrve1

c3 : n —> det —> np

CJeam CPierre : np Cmange : tv

cwmcdes : det cpim,cpa,e5 : n
s, tv, n, np,det := o sTVe,,vpTVe, := o —> o
CSUB := }LP°"°x°.Px
cat := }LP{"’°P§"°x°.S(P1x)(Coord ET)(P2(DELx))
c1 := }Lt°P°"°x°.St(Px) c2 := }Lt°x°.VPxt

_ 3205”: c3 := )Lt°t°.NP t t
1 2 2 2 1

cm“ :=NP1JEAN,CpieTTe :=NP1 PIERRE cmange : VMANGE
cum := DetUNE, cdes := DetDES
cpim : N PIZZA, cpms : N PATES

En considérant la signature abstraite ZIDERIV, nous obtenons un terme Mdem, appartenant au
langage abstrait et tel que Mdem, = CSUBM1M2 ou

1- M1 = Cet(C1CJean(C2(C3CuneCpizza)))(C1CPierre(C2(C3CdesCpates))) et
2. M2 = Cmange.

Nous remarquerons que 32"5YN(M1) s’interpréte alors comme un contexte d’arbre, de la forme
}Lx°.T, T étant l’arbre de la ﬁgure 2 ou les occurrences du sous—arbre VMANGE sont remplacées
par x.

Commentaires

Tout d’abord, remarquons que l’ACG G = (ZIDERN, Z}5YN,%’5YN,s) est une 2-ACG quasi-afﬁne.
D’aprés (Bourreau et Salvati, 2011; Bourreau, 2011) ou (Kanazawa, 2007; Yoshinaka, 2006),
nous savons que le probléme de l’analyse, dans ce cas, peut étre résolu en temps polynomial.
Ce point différencie donc les deux approches présentées. Ensuite, nous remarquerons qu’il est
a nouveau possible de généraliser le type associé a la conjonction Cet au niveau des dérivations
en a —> a —> a, avec, a E .2!DER1V.

223 © ATALA

TALN-RECITAL 2013, 17-21 Iuin, Les Sables d’Olonne

Néanmoins, comme nous l’avons remarqué, l’ACG (ZISYN, ZISURF, mu”, 0) n’est pas lexicalisée.
Le fait de considérer l’ACG lexicalisée équivalente (Z}g.YN,Z1SURF,3i‘gURF,o) de (Kanazawa
et Yoshinaka, 2005b) peut a priori avoir un certain impact sur la construction de l’ACG

(ZIDERIV, ZIQYN, 32‘§YN,s), cette question demandant a étre étudiée plus en détails.

Par ailleurs, le choix d’introduire l’opérateur DEL n’est destiné qu’a faire apparaitre l’occur-
rence de constituant effacée dans l’arbre syntaxique. En effet, il est possible de modiﬁer
notre modéle de sorte que %’5yN(ce,) = }LPf"°P§"°x°.S(P1x)(Con j ET)(P2€), ou e est alors
une constante de ZISYN, de type 0 et telle que 32‘;-URF(e) = }Lx".x". Dans cette proposition
alternative, l’ACG obtenue reste une 2-ACG linéaire.

La gestion de l’effacement par enrichissement des types peut également s’étendre a l’analyse
de phénoménes d’ellipses enchassées comme dans la phrase (4) de la section précédente.
Un tel cas peut—étre traité dans notre proposition en rajoutant une étape supplémentaire
d’extraction/instanciation, par l’intermédiaire d’une constante c§UB de type sv —> vpvpmf —> sv,
et telle que %’5YN(c§UB) = }LPf"°P§"°t°.P1(P2t). L’utilisation d’une telle constante réalise
alors l’instanciation d’emplacements vides dans un arbre de type sv par un contexte d’arbre
de type v pvpinf. La dérivation de cet exemple est donc réalisée en construisant d’abord deux
contextes d’arbre : Le terme 32"5YN(c§UB) permet alors de substituer les occurrences de x dans

/S VP
, I \ ,x/ \
S /Coord S /’ V y :VPinf
/ \ J I / \ ,’ I
NP x :VPbut NP VP / planned to
I I / \ ,’
Paul MaryNeg DEL’
/ \ |\—I
V notx :VP
I
does

FIGURE 3 — Représentation de la dérivation pour ‘flohn planned to but Mary does not”

le premier arbre par le second; il sufﬁt ensuite de suivre la procédure sur notre exemple
initiale pour obtenir l’arbre souhaité. Nous pouvons alors voir que l’inconvénient principal de
cette méthode est de devoir créer de nombreux types aﬁn de prendre en compte les différents
cas d’ellipses possibles, selon le constituant effacé. Notons également qu’il est possible de
construire la sémantique associée a une phrase ou une ellipse a été réalisée, de maniére
similaire a la construction précédente. Finalement, il apparait que les deux constructions
présentées sont liées : notre deuxiéme proposition repose sur le fait de décomposer les arbres
syntaxiques en unité plus petite, ce qui aboutit a considérer une ACG non—lexicalisée, et a
considérer un nombre de types plus grand. Cependant, il nous faudra étudier ce lien, et la
possibilité d’abaisser l’ordre d’une ACG tout en préservant le langage généré.

224 © ATALA

