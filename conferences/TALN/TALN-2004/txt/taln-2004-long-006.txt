TALN 2004, Fès, 19–21 avril 2004
Désambiguïsation par proximité structurelle

Bruno Gaume (1), Nabil Hathout (2) & Philippe Muller (1)
(1) IRIT – CNRS, UPS & INPT
{gaume,muller}@irit.fr
(2) ERSS – CNRS & UTM
hathout@univ-tlse2.fr
Résumé - Abstract
L’article présente une méthode de désambiguïsation dans laquelle le sens est déterminé en uti-
lisant un dictionnaire. La méthode est basée sur un algorithme qui calcule une distance « sé-
mantique » entre les mots du dictionnaire en prenant en compte la topologie complète du dic-
tionnaire, vu comme un graphe sur ses entrées. Nous l’avons testée sur la désambiguïsation des
définitions du dictionnaire elles-mêmes. L’article présente des résultats préliminaires, qui sont
très encourageants pour une méthode ne nécessitant pas de corpus annoté.
This paper presents a disambiguation method in which word senses are determined using a
dictionary. We use a semantic proximity measure between words in the dictionary, taking into
account the whole topology of the dictionary, seen as a graph on its entries. We have tested the
method on the problem of disambiguation of the dictionary entries themselves, with promising
results considering we do not use any prior annotated data.
Mots-clefs – Keywords
Désambiguïsation sémantique, réseaux petits mondes hiérarchiques, dictionnaires.
Word sense desambiguation, hierarchical small words, dictionaries.
Bruno Gaume, Nabil Hathout & Philippe Muller
1 Introduction
De nombreuses tâches impliquant le traitement de données en langue naturelle sont rendues
difficiles par l’existence de sens différents pour un même item lexical : traduction automatique,
recherche de documents ou extraction d’informations. Ce problème, très ancien en TAL, est
loin d’être résolu, et l’évaluation de ses méthodes est difficile et relativement récente, pour des
raisons présentées notamment dans (Resnik & Yarowsky, 2000). On peut distinguer plusieurs
familles d’approches1 , selon que le sens d’un mot en contexte est déterminé en apprenant auto-
matiquement les caractéristiques du contexte qui détermine ce sens (de façon supervisée, ou non
supervisée, quand l’étude des contextes sert elle-même à dégager des familles d’usage) ou bien
que le sens soit déterminé en utilisant des ressources lexicales « extérieures » : dictionnaires,
thésaurus. Le premier type d’approche nécessite des données volumineuses difficiles à anno-
ter (pour les approches supervisées ; les approches non supervisées sont par ailleurs sensibles
au corpus choisi, qui doit être représentatif). Le deuxième type d’approche tente d’utiliser la
connaissance lexicale rassemblée dans les dictionnaires, les thésaurus (WordNet, par exemple),
avec une longue tradition, (Lesk, 1986; Banerjee & Pedersen, 2003) et des résultats mitigés.
Dans tous les cas, on cherche à établir une relation de distance entre mots, susceptible de dé-
terminer un sens en contexte. Dans le cas des dictionnaires, les seules méthodes ayant présenté
des résultats chiffrés se concentrent seulement sur les mots qui apparaissent dans la définition
d’un mot cible2 .
Nous présentons ici un algorithme qui utilise un dictionnaire comme source d’information sur
les relations entre items lexicaux (cf. section 3). L’algorithme calcule une distance « séman-
tique » entre les mots du dictionnaire en prenant en compte la topologie complète du diction-
naire, ce qui lui donne une plus grande robustesse. Nous avons commencé à tester cette approche
sur la désambiguïsation des définitions du dictionnaire elles-mêmes (section 2), mais nous mon-
trons pourquoi cette méthode est plus générale. La section 6 présente nos résultats préliminaires,
qui sont très encourageants pour une méthode ne nécessitant pas de corpus annoté (en dehors
de l’évaluation), et qui comporte de nombreux paramètres d’ajustement.
2 Le graphe du dictionnaire
L’idée de base de notre méthode est de considérer qu’un dictionnaire est un graphe non orienté
dont les mots sont les sommets et tel qu’il existe un arc entre deux sommets si l’un apparaît dans
la définition de l’autre. Plus précisément, le graphe du dictionnaire encode deux types d’infor-
mations lexicographiques : les définitions qui décrivent les différentes acceptions de chaque
vedette au moyen de séquences langagières ; la structure des articles qui organise ces sous-
sens3. Deux types de sommets sont ainsi nécessaires : les sommets-w qui représentent les mots
qui apparaissent dans les définissants, et les sommets-∆ qui correspondent aux sous-sens des
vedettes. La construction du graphe se fait en trois temps :

1. Pour chaque vedette, on crée un sommet-∆ qui correspond à l’article entier et autant
de sommets-∆ qu’il y a de sous-sens pour lesquels il existe un définissant. On crée un
1
On peut se référer au numéro spécial de Computationnal Linguistics de 1998 et son introduction (Ide &
Véronis, 1998) ; cf. aussi (Manning & Schütze, 1999, chap. 7).
2
On peut citer aussi les propositions non quantifiées de (H.Kozima & Furugori, 1993).
3
Nous adoptons ici la terminologie de (Martin, 1983) et (Henry, 1996)
Désambiguïsation par proximité structurelle
arc entre chaque sommet-∆ et les sommets-∆ qui représentent des sous-sens de niveau
immédiatement inférieur.
2. Pour chaque mot qui apparaît dans un définissant du dictionnaire, on crée un sommet-
w. On crée un arc entre chaque couple de sommets w, ∆ si le mot représenté par le
sommet-w apparaît dans le définissant du sous-sens correspondant au sommet-∆.
3. On crée un arc entre chaque couple de sommets w, ∆ si le sommet-∆ représente l’article
dont la vedette est le mot correspondant au sommet-w.

Considérons, à titre d’exemple, l’article de « daim, n. m. » (issue du dictionnaire Le Robert) :

1. Mammifère ruminant ongulé.
2.    [a] Peau préparée de cet animal.
[b] Cuir suédé (veau retourné).
3. Corne de daim [...]
4. Bellâtre.

Le graphe contiendra un premier sommet (appelons le ∆0 ) qui représente l’article dans sa to-
talité. ∆0 est relié par un arc à chacun des sommets ∆1 , ∆2 , ∆3 et ∆4 qui représentent respec-
tivement les sous-sens 1., 2., 3. et 4. À son tour ∆2 est connecté à deux sommets ∆2.1 et ∆2.2
correspondant aux sous-sens 2.[a] et 2.[b]. Le graphe contient ensuite des arcs qui vont de ∆ 1
vers trois sommets w1 , w2 et w3 qui représentent les mots mammifère, ruminant et ongulé. En-
fin, il y aura un arc entre w1 et le sommet-∆ qui représente l’article de « mammifère, adj. et
n. », etc.
L’expérience que nous présentons a été réalisée au moyen d’un graphe construit à partir de
définitions issues du dictionnaire Le Robert. Ce graphe est restreint aux seuls substantifs : il
n’inclut que des définissants de vedettes nominales dans lesquelles n’ont été conservées que les
occurrences nominales.
Dans les articles, les sous-sens s’inscrivent dans des structures hiérarchiques qui peuvent com-
porter jusqu’à cinq niveaux : 1 , 2 , 3 ... pour les homographes ; I, II, III... ; A, B, C... ; 1, 2, 3...
et a, b, c... pour les acceptions. Les positions de ces sous-sens peuvent ainsi être représentées
de manière uniforme au moyen de séquences de cinq nombres correspondant aux cinq niveaux.
Par exemple, le sous-sens 2.[a] de l’article de daim est décrit par 0_0_0_2_1 (les trois premiers
niveaux n’étant pas utilisés, ils sont représentés par des zéros).
3        PROX      : une méthode pour la mesure de similarité lexicale
PROX est une méthode stochastique pour l’étude de la structure des réseaux petits mondes
hiérarchiques (voir section suivante). Cette méthode consiste à transformer un graphe en une
chaîne de Markov dont les états sont les sommets du graphe en question et ses arêtes les tran-
sitions possibles : une particule en partant à l’instant t = 0 d’un sommet s 0 , se déplace en
un pas sur s1 l’un des voisins de s0 sélectionné aléatoirement ; la particule se déplace alors à
nouveau en un pas sur s2 , l’un des voisins de s1 sélectionné aléatoirement etc. Si au t-ième
pas la particule est sur le sommet st elle se déplace alors en un pas sur le sommet st+1 qui est
sélectionné aléatoirement parmi les voisins de st tous équiprobables. Une trajectoire s1 , s2 , ...
Bruno Gaume, Nabil Hathout & Philippe Muller
st , ... ainsi sélectionnée est une « balade » aléatoire sur le graphe, et ce sont les dynamiques de
ces trajectoires qui nous donnent les propriétés structurelles des graphes étudiés.
Posons PROX(G, i, r, s) la probabilité qu’en partant à l’instant t = 0 du sommet r la particule
soit à l’instant t = i sur le sommet s :

1. Un graphe non orienté G = (V, E) est la donnée d’un ensemble non vide fini V de
sommets, et d’un ensemble E de paires de sommets formant des arêtes. Si l’arête {r, s} ∈
E on dit que les sommets r et s sont voisins, le nombre de voisins d’un sommet r est d(r)
son degré d’incidence ;

2. Soit un Graphe à n sommets G = (V, E), on notera [G] la Matrice carrée n × n telle que
pour tout r, s ∈ V × V , [G]r,s = 1 si {r, s} ∈ E et [G]r,s = 0 si {r, s} ∈
/ E ; On appellera
[G] la matrice d’adjacence de G. C’est-à-dire que [G]r,s (la valeur située à la r-ième ligne
et la s-ième colone de la matrice [G]) est égale à 1 s’il existe une arête entre les sommet
r et s, 0 sinon.

3. Soit G = (V, E) un graphe à n sommets. Posons [G]    ˆ la matrice n × n de transition de la
chaîne de Markov homogène dont les états sont les sommets du graphe en question telle
que la probabilité de passer d’un sommet r ∈ V à l’instant i vers un sommet s ∈ V à
l’instant i + 1 est égale à :
ˆ r,s =0 si {r, s} ∈
[G]                                                    ˆ = 1/d(r) si {r, s} ∈ E (s est un
/ E (s n’est pas un voisin de r) [G]
des d(r) voisins de r qui sont tous équiprobables)
Nous dirons que [G]  ˆ est la matrice Markovienne du graphe G et que G est le graphe des
transitions possibles de cette chaîne de Markov.
ˆ sa matrice Markovienne, pour tout
4. Soit G = (V, E) un graphe réflexif à n sommets et [G]
r, s ∈ V × V , on a donc :
PROX(G, i, r, s) = [Gˆ i ]r,s
où Ai est la matrice A multipliée i fois par elle-même.

C’est-à-dire que pour tout r, s, PROX(G, i, r, s) est la probabilité que la particule en partant
du sommet r à l’instant t = 0 soit à l’instant t = i sur le sommet s quand elle se déplace
aléatoirement de sommet en sommet dans le graphe en empruntant les arêtes du graphe.
Si PROX(G, i, r, s) > PROX(G, i, r, u) cela veut donc dire que dans sa trajectoire la particule
en partant du sommet r, à plus de chance d’être à l’instant i sur le sommet s que sur le sommet
u, et c’est la structure du graphe qui détermine ces probabilités.
PROX construit ainsi une mesure de similarité entre sommets d’un graphe, en « rapprochant »
les sommets d’une même zone dense4 en arêtes, ce qui permet d’envisager une exploitation
originale et novatrice des dictionnaires électroniques (Gaume et al., 2002) avec un outil de vi-
sualisation du sens (Gaume & Ferré, 2004), mais aussi de construire des outils pour le TAL, par
exemple la désambiguïsation des entrées dans un dictionnaire. Pour une présentation détaillée
de PROX voir (Gaume, à paraître).

4
En effet plus il existe un grand nombre de chemins courts entre deux sommets r et s, plus la probabilité
PROX(G, i, r, s) que la particule en partant du sommet r à l’instant t = 0 soit à l’instant t = i sur le sommet s est
grande.
Désambiguïsation par proximité structurelle
4 Les graphes de dictionnaires sont des petits mondes hiérar-
chiques
Des recherches récentes en théorie des graphes ont mis au jour un ensemble de caractéris-
tiques statistiques que partagent la plupart des grands graphes de terrain ; ces caractéristiques
définissent la classe des graphes de type « réseaux petits mondes hiérarchiques » (RPMH ; en
anglais hierarchical small world) (Watts & Strogatz, 1998; Newman, 2003). Les RPMH pré-
sentent quatre propriétés fondamentales :

D : ils sont peu denses, c’est-à-dire qu’ils ont relativement peu d’arêtes au regard du nombre
de leurs sommets ;
L : la moyenne des plus courts chemins entre les sommets est petite ;
C : le taux de clustering ou d’agrégation, est défini de la manière suivante : Supposons qu’un
sommet S ait Ks voisins, alors il y a Ks(Ks-1)/2 arêtes au maximum qui peuvent exister
entre ses Ks voisins (ce qui arrive quand chacun des voisins de S est connecté à tous les
autres voisins de S). Soit As le nombre d’arêtes qu’il y a entre les voisins de S (ce nombre
est donc nécessairement plus petit ou égal à Ks(Ks-1)/2). Posons Cs= As/( Ks(Ks-1)/2)
qui est donc pour tout sommet S inférieur ou égal à un. Le C d’un graphe est la moyenne
des Cs sur ses sommets. Le C d’un graphe est donc toujours compris entre 0 et 1. Plus le
C d’un graphe est proche de 1, plus il forme des agrégats ou clusters (des zones denses
en arêtes). Dans un RPMH le C est fort, deux voisins d’un même sommet ont tendance à
être connectés entre eux par une arête (« mes amis sont amis entre eux »). Par exemple,
sur Internet5 , deux pages qui sont liées à une même page ont une probabilité relativement
élevée d’inclure des liens l’une vers l’autre ;
I : la distribution des degrés d’incidence des sommets suit une loi de puissance (power law) :
certains nœuds très peu nombreux ont beaucoup plus de voisins que d’autres plus nom-
breux, eux-mêmes ayant plus de voisins que d’autres qui eux-mêmes... La probabilité
P (k) qu’un sommet du graphe considéré ait k voisins décroît comme une loi de puis-
sance P (k) = k λ .

Le tableau 1 présente une comparaison des RPMH avec d’autres types de graphes pour ces diffé-
rentes caractéristiques : des graphes aléatoires (construit en partant d’un ensemble de sommets
isolés, puis en ajoutant aléatoirement un certains nombre déterminé d’arêtes entre ses sommets),
et des graphes réguliers (des graphes classiquement étudiés en théorie des graphes, dont tous
les sommets ont le même degré d’incidence).
Les graphes d’origine linguistique et notamment ceux qui sont construits à partir de diction-
naires sont de type RPMH. Par exemple le graphe G1 des noms construit à partir du diction-
naire Le Robert (les sommets sont les entrées qui sont des noms, et il existe une arrête entre
deux sommets si l’un est dans la définition de l’autre - on ne tient pas compte ici de la structure
hiérarchique des définitions) est un RPMH typique (voir table 2) . Dans le graphe G2 qui est
construit comme indiqué à la section 2, chaque sommet est remplacé par l’arbre reflétant la
structure hiérarchique de l’entrée qui lui correspond, ce qui a pour conséquence d’affaiblir le C
et d’allonger le L. Dans le tableau ci-dessous, * indique que les mesures sont calculées sur la
plus grande partie connexe.
5
Les sommets en sont les 800 millions de pages disponibles sur internet, et une arête est tracée entre A et B si
un lien hypertexte vers la page B apparaît dans la page A ou si un lien hypertexte vers la page A apparaît dans la
page B.
Bruno Gaume, Nabil Hathout & Philippe Muller
à densité égale             L : Moyenne des              C : Taux de cluste-          I : distribution des
plus courts chemins          ring                         degrés d’incidences
Graphes aléatoires          L petit                      C petit                      loi de Poisson
(chemins courts)             (pas d’agrégats)
Graphes de terrain          L petit                      C grand                      loi de puissance
(RPMH)                      (chemins courts)             (des agrégats)
Graphes réguliers           L grand                      C grand                      constante
(chemins longs)              (des agrégats)

TAB . 1 – Comparaison de trois types de graphes en fonction des paramètres L, C et I.

Graphe     Nb. sommets       Nb. arcs     Nb. sommets*       Nb. Arcs*     Diamètre*          C*       L*
G1            51 559      392 161             51 511       392 142              7      0,182 9     3,32
G2           140 080      399 969            140 026       399 941             11      0,008 1     5,21

TAB . 2 – Quelques caractéristiques des graphes G1 et G2
Nous pensons que la nature hiérarchique des dictionnaires (distribution des degrés d’incidence
des sommets en loi de puissance) est une conséquence du rôle de l’hyperonymie associée à
la polysémie de certains sommets, alors que le fort C (existence de zones denses en arêtes)
reflète le rôle de la cohyponymie6 (Duvignau, 2002; Duvignau, 2003; Gaume et al., 2002). Par
exemple, le mot corps se trouve dans de nombreux définissants (tête, chimie, peau, division). De
ce fait, le sommet corps a une forte incidence. D’autre part on constate qu’il existe de nombreux
triangles par exemple : {écorce, enveloppe}, {écorce, peau}, {peau, enveloppe}, ce qui favorise
les zones denses en arêtes et plus précisément un fort taux de clustering C. Ce sont ces zones
denses en arêtes qui orientant la dynamique des trajectoires de la particule vont permettre la
désambiguïsation.
5 Un algorithme de désambiguïsation basé sur PROX

Nous allons maintenant présenter une méthode pour désambiguïser une entrée de dictionnaire
en utilisant la notion de distance sémantique introduite plus haut. On peut définir la tâche comme
suit : on considère un lemme α qui apparaît dans la définition de l’un des sens d’un mot, consi-
déré comme un nœud du graphe, β. Nous voulons donc associer α avec le sense le plus probable
qu’il a dans ce contexte. Chaque entrée du dictionnaire est codé par un arbre de sous-sens dans le
graphe du dictionnaire, avec une liste de nombres correspondants à chaque niveau de sous-sens
caractéristique.
6
Par exemple « enveloppe », « peau », « bogue », « écaille », « épluchure », « écorce », « vernis », « croûte »,
« enduit », « faux-semblant », « aspect », « apparence », « manteau », « fourrure », « toison », « pelure »
sont rattachés à un même concept ENVELOPPE-APPARENCE constituant pour chacun d’entre eux, un noyau de
sens commun. De tels mots constituent, de ce fait, des co-hyponymes, dont on peut distinguer deux types : - les
co-hyponymes intra domaine : [« broue », « bogue », « cosse », ] ou [« pelage », « toison », « fourure », ] ou
encore [« robe », « habit », « vêtement », ] qui relèvent d’un même domaine, à savoir respectivement dans ces
exemples : VEGETAL ou ANIMAL ou HUMAIN. - les co-hyponymes inter-domaines : « écorce » et « pelage »
sont des co-hyponymes inter-domaines car ils relèvent de domaines différents, respectivement le VEGETAL et
l’ANIMAL. Le point commun de tous les hyponymes c’est leur potentialité à pouvoir exprimer la même idée en
« intension ». C’est pourquoi ils peuvent être considérée comme co-hyponymes.
Désambiguïsation par proximité structurelle
Soit G = (V, E) un graphe à n sommets construit comme présenté section 2. L’algorithme
suivant a été appliqué.

1. on supprime les voisins de β dans G ∀x ∈ V [G]β,x = [G]x,β = 0 ;
ˆ i ; nous avons pris i = 6 (cf. l’explication plus bas) :
2. on calcule [G]
ˆi ;
3. soit L, le vecteur ligne de β alors ∀k, L[k] = [G]β,k

4. Soit F = {x1 , x2 , ..., xn } les nœuds correspondant à tous les sous-sens de la définition de
α.
On prend alors xk = argmaxx∈F (L[x])

Nous avons alors que xk est le sous-sens le plus « proche » du nœud β, par rapport à la mesure
Prox. Deux étapes demandent un peu plus d’explication :
1. les voisins sont supprimés pour ne pas laisser un biais favorable aux sous-sens de β, qui
formeraient alors une sorte de cluster artificiel par rapport à la tâche donnée. Ainsi la
« marche aléatoire » dans le graphe peut vraiment avoir lieu dans le graphe plus général
des autres sens.
2. choisir une bonne valeur pour la longueur de la marche aléatoire n’est pas simple, et est le
facteur essentiel de la réussite de la procédure. Si elle est trop petite, seules les relations
locales vont apparaître (synonymes proches, etc) et ils peuvent ne pas apparaître dans les
contextes à désambiguïser (c’est notamment le problème de la méthode de (Lesk, 1986)) ;
si la valeur de i est trop grande par contre, les « distances » entre tous les mots tendent
à converger vers une constante, faisant disparaître les différences. Cette valeur doit donc
être reliée d’une façon ou d’une autre à la distance moyenne entre deux sens quelconques
du graphe. Une hypothèse raisonable est donc de rester proche de cette valeur, et nous
avons donc pris le nombre 6, la moyenne calculée étant de 5,21 (sur le graphe contenant
tous les sous-sens, pas sur celui-ne contenant que les entrées, pour lequel L = 3,3) 7 .
6 Évaluation

Pour chaque couple de sommets (α, β) ∈ V × V tel que β représente un définissant ∆ et α
le lemme d’une forme qui apparaît dans ∆, l’algorithme précédent propose un sommet γ tel
que γ appartient à la structure hiérarchique de l’article dont le mot-vedette est α et tel que γ
permet d’identifier le sous-sens principal8 de α qui sémantiquement est le plus proche de son
occurrence dans ∆.
L’évaluation de la désambiguïsation sémantique a été réalisée comme suit : Nous avons sé-
lectionné aléatoirement 27 définissants de substantifs dans le dictionnaire Le Robert. Deux per-
sonnes ont annoté sémantiquement les formes nominales qui y apparaissent. 82 triplets ont ainsi
été constitués, dont il est resté 72 après avoir éliminé les mots ayant un seul sens dans le dic-
tionnaire. Nous avons constaté que les désaccords entre les deux annotateurs ont été très rares
et qu’un consensus a pu être trouvé rapidement dans les cas litigieux. Parallèlement, nous avons
7
La valeur de L est calculée en appliquant une variante de l’algorithme de Dijkstra partant d’un nœudvers tous
les autres, répétée pour chaque nœuddu graphe.
8
Le sous-sens principal correspond à la première sous-division hiérarchique d’une entrée, choisie parmi I, II ou
III, ou bien A, B, ... suivant les cas, celà n’étant pas homogène dans le dictionnaire.
Bruno Gaume, Nabil Hathout & Philippe Muller
appliqué l’algorithme précédent aux 72 couples formés par les deux premiers éléments des tri-
plets annotés. Nous avons ensuite comparé les résultats de l’algorithme avec les annotations
manuelles. Ont été comptés comme corrects les solutions telles que le numéro d’homographie
et le numéro de la première division hiérarchique sont identiques à ceux qui ont été proposés par
les annotateurs. C’est le cas par exemple pour les couples des deux premières lignes du tableau
suivant :

β                                   α         γ             annotateurs
correct bal#n._m.*0_0_0_3_0                 lieu      1_1_0_3_0     1_1_0_1_0
correct van#n._m.*2_0_0_0_0                 voiture   0_2_0_0_0     0_2_0_3_0
erreur phonétisme#n._m.*0_0_0_0_0           moyen     1_1_0_1_0     2_0_0_1_0
erreur créativité#n._f.*0_0_0_0_0           pouvoir   2_0_0_3_0     2_0_0_1_0
erreur acmé#n._m._ou_f.*0_0_0_1_0           phase     0_0_0_1_0     0_0_0_4_0

Pour les trois derniers couples, l’algorithme a proposé des solutions erronées : mauvais numéro
d’homographe et / ou mauvais sous-sens principal.
Pour avoir une idée de la difficulté de la tâche, nous avons aussi calculé la moyenne des sous-
sens principaux sur les entrées considérées, la moyenne du nombre d’homographes ayant la
même catégorie grammaticale (nom commun) et la moyenne des sous-sens de niveau le plus fin
des entrées considérées. Les résultats sont résumés dans la table 3. Le score de désambiguïsation

hasard      algorithme
homographes             0,5       0,8      (8/10)
polysémie principale    0,37      0,542 (39/72)
polysémie fine          0,125     0,292 (21/72)
TAB . 3 – Premiers résultats de l’évaluation de l’algorithme, avec une baseline aléatoire

des homographes n’est pas très significatif vu le petit nombre relevé dans les entrées choisies.
Nous pouvons remarquer que les autres scores, sans être très bons, sont plutôt encourageants.
Pour donner une idée de leur valeur, (Banerjee & Pedersen, 2003) applique des notions de
distance lexicale variées issues de dictionnaire, appliquées à la désambiguisation (en anglais)
de mots sélectionnés, avec des résultats qui vont de 0,2 à 0,4 par rapport aux sous-sens fournis
par WordNet (et une moyenne de sous-sens par noms qui équivaudrait à 0,2 pour le score au
hasard).
7 Conclusion
Nous avons présenté ici un algorithme donnant une mesure de similarité lexicale à partir d’un
dictionnaire général. Cet algorithme est non supervisé. Il ne nécessite pas de corpus annoté
et n’utilisant pas d’autres données qu’un dictionnaire général dont la couverture lexicale est
la seule restriction sur le vocabulaire. La méthode donne des résultats prometteurs pour la
désambiguïsation sur les noms seuls. Nous envisageons bien sûr d’étendre les tests à d’autres
catégories grammaticales, mais aussi d’affiner la méthode pour les substantifs en considérant
par exemple également les occurrences verbales dans les définissants des noms. Pour étendre
cette méthode au cas général de la désambiguïsation, nous pensons par ailleurs considérer un
Désambiguïsation par proximité structurelle
contexte qui contient un mot à désambiguïser comme une définition virtuelle que l’on ajouterait
au graphe des mots pour appliquer ensuite exactement la même méthode. Nous envisageons
également de réaliser des mesures plus fines des performances en tenant compte des degrés de
confiance attribués à chaque candidat à la désambiguïsation (Resnik & Yarowsky, 2000).
Références
BANERJEE S. & P EDERSEN T. (2003). Extended gloss overlaps as a measure of semantic relatedness. In
Proceedings of the Eighteenth International Conference on Artificial Intelligence (IJCAI-03), Acapulco,
Mexico.
D UVIGNAU K. (2002). La métaphore berceau et enfant de la langue. Thèse de doctorat, Université
Toulouse - Le Mirail.
D UVIGNAU K. (2003). Métaphore verbale et approximation. Revue d’Intelligence Artificielle, 17(5/6),
869–881. Regards croisés sur l’analogie.
G AUME B. (à paraître). Balades aléatoires dans les petits mondes lexicaux. I3 Information Interaction
Intelligence.
G AUME B., D UVIGNAU K., G ASQUET O. & G INESTE M.-D. (2002). Forms of meaning, meaning of
forms. Journal of Experimental and Theoretical Artificial Intelligence, 14(1), 61–74.
G AUME B. & F ERRÉ L. (2004). Représentation de graphes par acp granulaire. In Actes d’EGC 2004 :
4èmes journées d’Extraction et de Gestion des Connaissances, Clermont-Ferrand.
H ENRY F. (1996). Pour l’informatisation du TLF. In D. P IOTROWSKI, Ed., Lexicographie et informa-
tique. Autour de l’informatisation du Trésor de la Langue Française, Paris: Didier Érudition.
H.KOZIMA & F URUGORI T. (1993). Similarity between words computed by spreading activation on an
english dictionary. In Proceedings of the conference of the European chapter of the ACL, p. 232–239.
I DE N. & V ÉRONIS J. (1998). Introduction to the special issue on word sense disambiguation: The state
of the art. Computational Linguistics, 24(1).
L ESK M. (1986). Automatic sense disambiguation using machine readable dictionaries: how to tell a
pine code from an ice cream cone. In Proceedings of the 5th annual international conference on Systems
documentation, p. 24–26, Toronto, Canada.
M ANNING C. & S CHÜTZE H. (1999). Foundations of Statistical Natural Language Processing. MIT
Press.
M ARTIN R. (1983). Pour une logique du sens. Paris: Presses Universitaires de France.
N EWMAN M. E. J. (2003). The structure and function of complex networks. SIAM Review, volume 45,
167–256.
R ESNIK P. & YAROWSKY D. (2000). Distinguishing systems and distinguishing senses: New evaluation
methods for word sense disambiguation. Natural Language Engineering, 5(2), 113–133.
WATTS D. & S TROGATZ S. (1998). Collective dynamics of ‘small-world’ networks. Nature, (393),
440–442.
